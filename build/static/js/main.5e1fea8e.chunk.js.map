{"version":3,"sources":["context/authContext.js","context/userContext.js","components/PrivateComponent.jsx","components/Sidebar.jsx","graphql/auth/mutations.js","layouts/PrivateLayout.jsx","pages/Index.jsx","components/Objetivos.jsx","graphql/proyectos/queries.js","pages/proyectos/Proyectos.jsx","components/PrivateRoute.jsx","graphql/proyectos/mutations.js","pages/proyectos/NuevoProyecto.jsx","graphql/inscripciones/mutaciones.js","pages/proyectos/EditarProyecto.jsx","components/ButtonLoading.jsx","pages/proyectos/VerProyecto.jsx","graphql/usuarios/queries.js","graphql/usuarios/mutations.js","utils/enum.js","pages/usuarios/Usuarios.jsx","pages/NuevoUsuario.jsx","components/Input.jsx","hooks/useFormData.js","components/DropDown.jsx","pages/usuarios/EditarUsuario.jsx","pages/usuarios/Estudiantes.jsx","pages/Perfil.jsx","graphql/inscripciones/queries.js","components/Accordion.jsx","pages/inscripciones/Inscripciones.jsx","graphql/avances/mutations.js","pages/avances/Avances.jsx","graphql/avances/queries.js","pages/avances/VerAvance.jsx","pages/avances/ActualizarAvance.jsx","layouts/AuthLayout.jsx","pages/auth/register.jsx","pages/auth/login.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","useAuth","useContext","UserContext","useUser","PrivateComponent","roleList","children","userData","includes","rol","SidebarLinks","className","to","title","icon","nombre","Logout","setToken","type","onClick","Logo","src","alt","ResponsiveSidebar","id","SidebarRoute","isActive","Sidebar","useState","open","setOpen","REGISTRO","gql","CAMBIAR_CLAVE","LOGIN","REFRESH_TOKEN","PrivateLayout","navigate","useNavigate","loadingAuth","setLoadingAuth","useMutation","refreshToken","dataMutation","data","loadingMutation","loading","useEffect","token","Index","static","Objetivos","item","tipo","objetivos","map","objetivo","descripcion","GET_PROYECTOS","GET_PROYECTO","Administrador","busqueda","setBusqueda","datos","filter","proyecto","_id","toString","toLowerCase","lider","apellido","fase","estado","value","placeholder","onChange","e","target","scope","Lider","Usuario","activo","isActivo","Gestionar","htmlFor","Estudiante","registrado","isRegistrado","filtro","registros","registro","estudiante","length","Proyectos","useQuery","error","refetch","toast","color","height","width","PrivateRoute","NUEVO_PROYECTO","EDITAR_PROYECTO","NuevoProyecto","onCompleted","success","reset","crearProyecto","setObjetivos","presupuesto","setProyecto","onSubmit","preventDefault","variables","parseInt","ref","required","CREAR_INSCRIPCION","APROBAR_INSCRIPCION","FECHA_FINAL","RECHAZAR_INSCRIPCION","EditarProyecto","useParams","fechaHoy","Date","queryData","queryError","queryLoading","fechaInicio","fechaFin","finalizarInscripcion","editarProyecto","mutationData","mutationLoading","mutationError","Proyecto","defaultValue","finalizarInscripcionId","ButtonLoading","disabled","text","Estudiantes","EstudiantesCopy","Avances","AvancesCopy","avances","InscripcionProyecto","idProyecto","inscripciones","estadoInscripcion","setEstadoInscripcion","crearRegistro","flt","el","VerProyecto","GET_USUARIOS","GET_USUARIO","REGISTRAR_USUARIO","EDITAR_USUARIO","ELIMINAR_USUARIO","Enum_Rol","ADMINISTRADOR","ESTUDIANTE","LIDER","Enum_EstadoUsuario","PENDIENTE","AUTORIZADO","NO_AUTORIZADO","Usuarios","openDialog","setOpenDialog","currentUser","setCurrentUser","eliminarUsuario","user","identificacion","correo","Dialog","then","NuevoUsuario","register","password","usuario","setUsuario","selected","Input","label","name","readOnly","useFormData","initial","form","useRef","formData","setFormData","updateFormData","fd","FormData","current","obj","forEach","key","split","p1","p2","p3","Object","keys","getFormData","DropDown","options","selectedValue","setSelectedValue","optionsSelect","entries","o","nanoid","EditarUsuario","editarUsuario","useStyles","makeStyles","theme","modal","position","backgroundColor","border","boxShadow","shadows","padding","top","left","transform","textField","container","textAlign","Perfil","mensaje","guardarMensaje","editar","setEditar","cambiarClave","styles","setModal","abrirCerrarModal","claveAnterior","setClaveAnterior","passwordNuevo","setPasswordNuevo","invocarFuncion","a","clave","message","replace","setTimeout","body","align","TextField","event","Button","Modal","onClose","GET_INSCRIPCIONES","AccordionStyled","styled","props","Accordion","AccordionSummaryStyled","AccordionSummary","AccordionDetailsStyled","AccordionDetails","AccordionInscripcion","titulo","inscripcion","Inscripcion","aprobarInscripcion","rechazarInscripcion","errorMutation","cambiarEstadoInscripcion","variable","aprobarInscripcionId","rechazarInscripcionId","IndexInscription","Inscripciones","CREAR_AVANCE","ACTUALIZAR_AVANCE","EDITAR_AVANCE","project","crearAvance","creadoPor","GET_AVANCE_BY_PROJECT","GET_AVANCE_ID","VerAvance","createAvance","filtrarAvance","fecha","observaciones","obs","avanceId","observacion","document","getElementsByName","createAvanceId","addObservacion","ActualizarAvance","moment","require","editarAvance","avanceFiltrado","editarAvanceId","format","AuthLayout","Register","submitForm","Swal","fire","Login","login","httpLink","createHttpLink","uri","authLink","setContext","_","headers","JSON","parse","localStorage","getItem","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","setUserData","authToken","setAuthToken","decoded","jwt_decode","ApolloProvider","Provider","setItem","stringify","removeItem","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iTAEaA,EAAcC,wBAAc,MAE5BC,EAAU,WACrB,OAAOC,qBAAWH,ICHPI,EAAcH,wBAAc,MAE5BI,EAAU,WACrB,OAAOF,qBAAWC,I,OCQLE,EAVU,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC5BC,EAAaJ,IAAbI,SAER,OAAIF,EAASG,SAASD,EAASE,KACtBH,EAGF,qBAAK,cAAY,oBCJpBI,EAAe,WACnB,IAAQH,EAAaJ,IAAbI,SACR,OACE,qBAAII,UAAU,QAAd,UACE,cAAC,EAAD,CAAcC,GAAG,GAAGC,MAAM,OAAOC,KAAK,gBACtC,cAAC,EAAD,CACEF,GAAG,aACHC,MAAM,uBACNC,KAAK,2BAEP,cAAC,EAAD,CAAkBT,SAAU,CAAC,iBAA7B,SACE,cAAC,EAAD,CACEO,GAAG,YACHC,MAAM,sBACNC,KAAK,mBAIT,cAAC,EAAD,CAAkBT,SAAU,CAAC,SAA7B,SACE,cAAC,EAAD,CACEO,GAAG,wBACHC,MAAM,sBACNC,KAAK,mBAIT,cAAC,EAAD,CAAkBT,SAAU,CAAC,SAA7B,SACE,cAAC,EAAD,CACEO,GAAG,iBACHC,MAAM,2BACNC,KAAK,kBAGT,cAAC,EAAD,CAAkBT,SAAU,CAAC,cAA7B,SACE,cAAC,EAAD,CACEO,GAAG,UACHC,MAAM,gBACNC,KAAK,sBAGT,cAAC,EAAD,IACA,sBAAKH,UAAU,YAAf,UACE,oBAAIA,UAAU,sDAAd,SACGJ,EAASQ,SAEZ,oBAAIJ,UAAU,sDAAd,SACGJ,EAASE,aAOdO,EAAS,WACb,IAAQC,EAAajB,IAAbiB,SAIR,OACE,6BACE,wBAAQC,KAAK,SAASC,QAAS,WAJjCF,EAAS,OAIP,SACE,cAAC,IAAD,CAASL,GAAG,cAAcD,UAAU,8BAApC,SACE,sBAAKA,UAAU,oBAAf,UACE,mBAAGA,UAAU,wBACb,sBAAMA,UAAU,gBAAhB,wCAQNS,EAAO,WACX,OACE,qBAAKT,UAAU,wDAAf,SACE,qBAAKU,IAAI,WAAWC,IAAI,OAAOX,UAAU,YA6BzCY,EAAoB,WACxB,OACE,8BACE,qBACEZ,UAAU,uFACVa,GAAG,aAFL,SAIE,sBAAKb,UAAU,OAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,YAOJc,EAAe,SAAC,GAAyB,IAAvBb,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACjC,OACE,6BACE,cAAC,IAAD,CACEF,GAAIA,EACJD,UAAW,qBAAGe,SAER,yCACA,oEALR,SAQE,sBAAKf,UAAU,oBAAf,UACE,mBAAGA,UAAWG,IACd,sBAAMH,UAAU,gBAAhB,SAAiCE,YAO5Bc,EA5DC,WACd,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACE,sBAAKnB,UAAU,mDAAf,UAGE,qBAAKA,UAAU,yBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,SAGJ,sBAAKA,UAAU,mEAAf,UACE,wBAAQO,KAAK,SAASC,QAAS,kBAAMW,GAASD,IAA9C,SACE,mBAAGlB,UAAS,iBAAYkB,EAAO,QAAU,YAE3C,mBAAGlB,UAAU,mBAEdkB,GAAQ,cAAC,EAAD,Q,2CCtGTE,EAAWC,YAAH,kaAuBRC,EAAgBD,YAAH,uLAMbE,EAAQF,YAAH,+KASLG,EAAgBH,YAAH,iH,SCKJI,GApCO,WACpB,IAAMC,EAAWC,eACTrB,EAAajB,IAAbiB,SACR,EAAsCW,oBAAS,GAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EACEC,YAAYN,GADd,mBAAOO,EAAP,YAA6BC,EAA7B,EAAuBC,KAA6BC,EAApD,EAA2CC,QAkB3C,OAhBAC,qBAAU,WACRL,MACC,CAACA,IAEJK,qBAAU,WACJJ,IACEA,EAAaD,aAAaM,MAC5B/B,EAAS0B,EAAaD,aAAaM,QAEnC/B,EAAS,MACToB,EAAS,gBAEXG,GAAe,MAEhB,CAACG,EAAc1B,EAAUsB,EAAaF,IAErCQ,GAAmBN,EAAoB,6CAEzC,sBAAK5B,UAAU,kDAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,qBAAf,SACE,qBAAKA,UAAU,mCAAf,SACE,cAAC,KAAD,QAGJ,cAAC,IAAD,Q,wCCvBSsC,GAfD,WACZ,OACE,sBAAKtC,UAAU,+CAAf,UACE,qBACEU,IAAI,sBACJC,IAAI,OACJX,UAAU,6BAEZ,qBAAKuC,QAAM,EAAC,kBAAZ,yB,UCISC,GAdG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,KAAM1C,EAAgB,EAAhBA,UAW/B,OAVsByC,EAAKE,UAAUC,KAAI,SAACC,GACxC,OAAIA,EAASH,OAASA,EAElB,mCACE,oBAAI1C,UAAWA,EAAf,SAA2B6C,EAASC,gBAInC,S,oBCPEC,GAAgB1B,YAAH,4ZA6Bb2B,GAAe3B,YAAH,4iBCkCnB4B,GAAgB,SAAC,GAAc,IAAZhB,EAAW,EAAXA,KACvB,EAAgChB,mBAAS,IAAzC,mBAAOiC,EAAP,KAAiBC,EAAjB,KAIMC,EAAQnB,EACXoB,QAAO,SAACC,GACP,OACEA,EAASC,IACNC,WACAC,cACA5D,SAASqD,EAASO,gBACrBH,EAASlD,OAAOqD,cAAc5D,SAASqD,EAASO,gBAChDH,EAASI,MAAMH,IAAIE,cAAc5D,SAASqD,EAASO,gBACnDH,EAASI,MAAMtD,OAAOqD,cAAc5D,SAASqD,EAASO,gBACtDH,EAASI,MAAMC,SACZF,cACA5D,SAASqD,EAASO,gBACrBH,EAASM,KAAKH,cAAc5D,SAASqD,EAASO,gBAC9CH,EAASO,OAAOJ,cAAc5D,SAASqD,EAASO,eAEzCH,EAEF,QAERV,KAAI,SAACH,GACJ,OACE,mCACE,+BACE,qBAAmBzC,UAAU,cAA7B,UACG,IACAyC,EAAKc,MAFCd,EAAKc,KAId,mCAAMd,EAAKrC,UACX,+BACG,IACAqC,EAAKiB,MAAMtD,OAFd,IAEuBqC,EAAKiB,MAAMC,YAElC,mCAAMlB,EAAKmB,QACX,+BACG,IACD,cAAC,GAAD,CAAWnB,KAAMA,EAAMC,KAAK,UAAU1C,UAAU,iBAElD,+BACE,cAAC,IAAD,CACEC,GAAE,qBAAgBwC,EAAKc,KACvBvD,UAAU,4EAFZ,qBAMe,cAAdyC,EAAKmB,KAAuB,KAC3B,cAAC,IAAD,CACE3D,GAAE,oCAA+BwC,EAAKc,KACtCvD,UAAU,yEAFZ,kCAYd,OACE,qCACE,sBAAKA,UAAU,YAAf,UACE,uBAAOA,UAAU,YAAjB,sBACA,uBACEA,UAAU,8MACV8D,MAAOZ,EACPa,YAAY,kCACZC,SArEQ,SAACC,GACfd,EAAYc,EAAEC,OAAOJ,aAuEnB,wBAAO9D,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAImE,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,iCACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,2BAGJ,gCAAQf,WAMVgB,GAAQ,SAAC,GAAuB,IAArBnC,EAAoB,EAApBA,KAAMoC,EAAc,EAAdA,QACrB,EAAgCpD,mBAAS,IAAzC,mBAAOiC,EAAP,KAAiBC,EAAjB,KACA,EAA2BlC,oBAAS,GAApC,mBAAOqD,EAAP,KAAeC,EAAf,KAIMnB,EAAQnB,EACXoB,QAAO,SAACC,GACP,GACEA,EAASC,IACNC,WACAC,cACA5D,SAASqD,EAASO,gBACrBH,EAASlD,OAAOqD,cAAc5D,SAASqD,EAASO,gBAChDH,EAASI,MAAMtD,OAAOqD,cAAc5D,SAASqD,EAASO,gBACtDH,EAASI,MAAMC,SAASF,cAAc5D,SAASqD,EAASO,eAExD,OAAOH,KAGVV,KAAI,SAACH,GACJ,IAAM+B,EAAY,WAChB,MAAoB,WAAhB/B,EAAKoB,OAEL,mCACE,cAAC,IAAD,CACE5D,GAAE,oCAA+BwC,EAAKc,KACtCvD,UAAU,yEAFZ,yBASC,MAET,GAAIyC,EAAKiB,MAAMH,MAAQc,EAAQd,IAC7B,OAAe,IAAXe,GAAmC,WAAhB7B,EAAKoB,SA+Bb,IAAXS,EA7BA,mCACE,+BACE,qBAAkBtE,UAAU,cAA5B,UACG,IACAyC,EAAKc,MAFCd,EAAK5B,IAId,mCAAM4B,EAAKrC,UACX,+BACG,IACAqC,EAAKiB,MAAMtD,OAFd,IAEuBqC,EAAKiB,MAAMC,YAElC,mCAAMlB,EAAKmB,QACX,+BACG,IACD,cAAC,GAAD,CAAWnB,KAAMA,EAAMC,KAAK,UAAU1C,UAAU,iBAElD,+BACE,cAAC,IAAD,CACEC,GAAE,qBAAgBwC,EAAKc,KACvBvD,UAAU,4EAFZ,qBAMA,cAACwE,EAAD,CAAW/B,KAAMA,YAqCpB,QAGb,OACE,qCACE,sBAAKzC,UAAU,YAAf,UACE,uBAAOA,UAAU,YAAjB,sBACA,uBACEA,UAAU,8MACV8D,MAAOZ,EACPa,YAAY,6CACZC,SA3GQ,SAACC,GACfd,EAAYc,EAAEC,OAAOJ,UA4GjB,cAAC,IAAD,CACE7D,GAAG,2BACHD,UAAU,wHAFZ,4BAMA,gCACE,uBACEO,KAAK,WACLP,UAAU,OACVa,GAAG,SACHL,QAAS,kBAAM+D,GAAUD,MAE3B,uBAAOG,QAAQ,SAASzE,UAAU,YAAlC,0CAKJ,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAImE,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,iCACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,2BAGJ,gCAAQf,WAMVsB,GAAa,SAAC,GAAuB,IAArBzC,EAAoB,EAApBA,KAAMoC,EAAc,EAAdA,QAC1B,EAAgCpD,mBAAS,IAAzC,mBAAOiC,EAAP,KAAiBC,EAAjB,KACA,EAAmClC,oBAAS,GAA5C,mBAAO0D,EAAP,KAAmBC,EAAnB,KAIMxB,EAAQnB,EACXoB,QAAO,SAACC,GACP,GACEA,EAASC,IACNC,WACAC,cACA5D,SAASqD,EAASO,gBACrBH,EAASlD,OAAOqD,cAAc5D,SAASqD,EAASO,gBAChDH,EAASI,MAAMtD,OAAOqD,cAAc5D,SAASqD,EAASO,gBACtDH,EAASI,MAAMC,SAASF,cAAc5D,SAASqD,EAASO,eAExD,OAAOH,KAGVV,KAAI,SAACH,GACJ,IAAMoC,EAASpC,EAAKqC,UAAUzB,QAC5B,SAAC0B,GAAD,OACEA,EAASC,WAAWzB,MAAQc,EAAQd,KAChB,aAApBwB,EAASlB,UAEb,OAAIc,GAA8B,WAAhBlC,EAAKoB,OACC,IAAlBgB,EAAOI,OAEP,mCACE,+BACE,6BAAKxC,EAAKc,MACV,6BAAKd,EAAKrC,SACV,+BACGqC,EAAKiB,MAAMtD,OADd,IACuBqC,EAAKiB,MAAMC,YAElC,6BAAKlB,EAAKmB,OACV,6BACE,cAAC,GAAD,CAAWnB,KAAMA,EAAMC,KAAK,UAAU1C,UAAU,gBAElD,6BACE,cAAC,IAAD,CACEC,GAAE,qBAAgBwC,EAAKc,KACvBvD,UAAU,4EAFZ,4BAWH,KAEW,WAAhByC,EAAKoB,OAEL,mCACE,+BACE,6BAAKpB,EAAKc,MACV,6BAAKd,EAAKrC,SACV,+BACGqC,EAAKiB,MAAMtD,OADd,IACuBqC,EAAKiB,MAAMC,YAElC,6BAAKlB,EAAKmB,OACV,6BACE,cAAC,GAAD,CAAWnB,KAAMA,EAAMC,KAAK,UAAU1C,UAAU,gBAElD,6BACE,cAAC,IAAD,CACEC,GAAE,qBAAgBwC,EAAKc,KACvBvD,UAAU,4EAFZ,iCAdV,KA0BJ,OACE,qCACE,sBAAKA,UAAU,YAAf,UACE,uBAAOA,UAAU,YAAjB,sBACA,uBACEA,UAAU,8MACV8D,MAAOZ,EACPa,YAAY,6CACZC,SArFQ,SAACC,GACfd,EAAYc,EAAEC,OAAOJ,UAsFjB,gCACE,uBACEvD,KAAK,WACLP,UAAU,OACVa,GAAG,SACHL,QAAS,kBAAMoE,GAAcD,MAE/B,wBAAOF,QAAQ,SAASzE,UAAU,YAAlC,+BACqB,aAIzB,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAImE,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,iCACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,2BAGJ,gCAAQf,WAMD8B,GA5ZG,WAChB,MAA0CC,aAASpC,IAA3Cd,EAAR,EAAQA,KAAMmD,EAAd,EAAcA,MAAOjD,EAArB,EAAqBA,QAASkD,EAA9B,EAA8BA,QACtBzF,EAAaJ,IAAbI,SAOR,OANAwC,qBAAU,WACR,GAAIgD,EAEF,OADAE,IAAMF,MAAM,mCACN,kCAAN,OAAyCA,KAE1C,CAACA,IACAjD,EAEA,cAAC,KAAD,CAAc5B,KAAK,QAAQgF,MAAM,UAAUC,OAAQ,IAAKC,MAAO,MAE/DxD,GACFoD,IAEE,qCACE,cAAC,EAAD,CAAkB3F,SAAS,gBAA3B,SACE,sBAAKM,UAAU,SAAf,UACE,qBAAKA,UAAU,gDAAf,SACE,oBAAIA,UAAU,yDAAd,yBAIF,cAAC,GAAD,CAAeiC,KAAMA,EAAKiD,UAAWb,QAASzE,SAIlD,cAAC,EAAD,CAAkBF,SAAS,QAA3B,SACE,sBAAKM,UAAU,SAAf,UACE,qBAAKA,UAAU,gDAAf,SACE,oBAAIA,UAAU,yDAAd,mCAIF,cAAC,GAAD,CAAOiC,KAAMA,EAAKiD,UAAWb,QAASzE,SAI1C,cAAC,EAAD,CAAkBF,SAAS,aAA3B,SACE,sBAAKM,UAAU,SAAf,UACE,qBAAKA,UAAU,gDAAf,SACE,oBAAIA,UAAU,yDAAd,yBAIF,cAAC,GAAD,CAAYiC,KAAMA,EAAKiD,UAAWb,QAASzE,aAM9C,mC,SC7CM8F,GAdM,SAAC,GAA4B,IAA1BhG,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACxBC,EAAaJ,IAAbI,SAER,OAAIF,EAASG,SAASD,EAASE,KACtBH,EAIP,qBAAK,cAAY,iBAAiBK,UAAU,yBAA5C,0DCTS2F,GAAiBtE,YAAH,wkBAgCduE,GAAkBvE,YAAH,4tBCgIbwE,GA1JO,WACpB,MAA0C/D,YAAY6D,GAAgB,CACpEG,YADoE,WAElER,IAAMS,QAAQ,6BACdC,OAHJ,mBAAOC,EAAP,YAAwBb,EAAxB,EAAwBA,MAAOY,EAA/B,EAA+BA,MAMvBpG,EAAaJ,IAAbI,SACR,EAAkCqB,mBAAS,IAA3C,mBAAO0B,EAAP,KAAkBuD,EAAlB,KACMrD,EAAW,CACfC,YAAa,GACbJ,KAAM,IAYR,EAAgCzB,mBAAS,CACvCb,OAAQ,GACRsD,MAAO,GACPyC,YAAa,IAHf,mBAAO7C,EAAP,KAAiB8C,EAAjB,KAUA,OAJIhB,GACFE,IAAMF,MAAM,iCAIZ,eAAC,GAAD,CAAc1F,SAAS,QAAvB,UACE,yBAAQM,UAAU,kCAAlB,UACE,cAAC,IAAD,CAAMC,GAAG,aAAT,SACE,mBAAGD,UAAU,2FAEf,oBAAIA,UAAU,mDAAd,qCAIF,yBAASA,UAAU,QAAnB,SACE,uBACEA,UAAU,2IACVqG,SAAU,SAACpC,GACTA,EAAEqC,iBACFL,EAAc,CACZM,UAAW,CACTnG,OAAQkD,EAASlD,OAAO0D,MACxBqC,YAAaK,SAASlD,EAAS6C,YAAYrC,OAC3CJ,MAAOJ,EAASI,MAChBf,gBATR,UAcE,uBAAO8B,QAAQ,SAAf,oBACA,uBACEgC,IAAK,SAACrG,GAAD,OAAYgG,EAAa9C,EAASlD,OAASA,IAChDsG,UAAQ,EACR3C,YAAY,sBACZlD,GAAG,SACHb,UAAU,sDAEZ,uBAAOyE,QAAQ,QAAf,mBACA,uBACEX,MAAK,UAAKlE,EAASQ,OAAd,YAAwBR,EAAS+D,UACtC9C,GAAG,QACH6F,UAAQ,EACR1G,UAAU,qDAEZ,uBACEyG,IAAK,kBAAML,EAAa9C,EAASI,MAAQ9D,EAAS2D,MAClDvD,UAAU,WAEZ,uBAAOyE,QAAQ,cAAf,yBACA,uBACEgC,IAAK,SAACN,GAAD,OACHC,EAAa9C,EAAS6C,YAAcA,IAEtCO,UAAQ,EACR3C,YAAY,cACZlD,GAAG,cACHb,UAAU,qDAEZ,8BAAaA,UAAU,yBAAvB,UACE,wBAAQA,UAAU,aAAlB,uBACA,qBAAKA,UAAU,qLAAf,SACG2C,EAAUC,KAAI,SAACH,GACd,OACE,6BACE,qBAAIzC,UAAU,kCAAd,UACGyC,EAAKC,KADR,KACgBD,EAAKK,sBAO7B,uBACE9C,UAAU,gCACVyE,QAAQ,cAFV,yBAMA,uBACEzE,UAAU,kCACV0G,UAAQ,EACR3C,YAAY,2BACZxD,KAAK,YACLM,GAAG,cACH4F,IAAK,SAAC3D,GAAD,OAAkBD,EAASC,YAAcA,KAEhD,uBAAO9C,UAAU,gCAAgCyE,QAAQ,OAAzD,kBAGA,yBACEzE,UAAU,yCACVO,KAAK,OACLM,GAAG,OACH4F,IAAK,SAAC/D,GAAD,OAAWG,EAASH,KAAOA,GAJlC,UAME,wBAAQoB,MAAM,UAAd,qBACA,wBAAQA,MAAM,aAAd,2BAEF,wBACEvD,KAAK,SACLC,QApHQ,WAClB0F,EAAa,GAAD,oBACPvD,GADO,CAEV,CAAEG,YAAaD,EAASC,YAAYgB,MAAOpB,KAAMG,EAASH,KAAKoB,WAkHvD9D,UAAU,wFAHZ,gCAOA,wBACEO,KAAK,SACLC,QArHQ,WAClB0F,EAAa,KAqHHlG,UAAU,qFAHZ,4BASF,wBACEO,KAAK,SACLP,UAAU,+FAFZ,2CCrJJ2G,GAAoBtF,YAAH,4LAQjBuF,GAAsBvF,YAAH,yKAQnBwF,GAAcxF,YAAH,iLAQXyF,GAAuBzF,YAAH,6KCmWX0F,GAjXQ,WACrB,IAAQxD,EAAQyD,eAARzD,IACF0D,EAAW,IAAIC,KACbtH,EAAaJ,IAAbI,SACR,EAAkCqB,mBAAS,IAA3C,mBAAO0B,EAAP,KAAkBuD,EAAlB,KACA,EAKIf,aAASnC,GAAc,CAAEuD,UAAW,CAAEhD,SAJlC4D,EADR,EACElF,KACOmF,EAFT,EAEEhC,MACSiC,EAHX,EAGElF,QACAkD,EAJF,EAIEA,QAEE/B,EAAW,CACbC,IAAK,GACLnD,OAAQ,GACRsD,MAAO,GACPyC,YAAa,GACbmB,YAAa,GACbC,SAAU,IAEN1E,EAAW,CACfC,YAAa,GACbJ,KAAM,IAGR,EAA+BZ,YAAY+E,IAApCW,EAAP,oBAEA,EAGI1F,YAAY8D,IAHhB,mBACE6B,EADF,YAEUC,EAFV,EAEIzF,KAA6B0F,EAFjC,EAEwBxF,QAAiCyF,EAFzD,EAEkDxC,MAElDhD,qBAAU,WACJsF,IACFpC,IAAMS,QAAQ,qCACdV,OAED,CAACqC,IA6BJ,OAAIN,EACK9B,IAAMF,MAAM,6CACjBiC,GAAgBM,EAEhB,cAAC,KAAD,CAAcpH,KAAK,QAAQgF,MAAM,UAAUC,OAAQ,IAAKC,MAAO,OAGnEnC,EAAW,CACTC,IAAK4D,EAAUU,SAAStE,IACxBnD,OAAQ+G,EAAUU,SAASzH,OAC3BsD,MAAOyD,EAAUU,SAASnE,MAAMH,IAChC4C,YAAagB,EAAUU,SAAS1B,YAChCmB,YAAaH,EAAUU,SAASP,YAChCC,SAAUJ,EAAUU,SAASN,SAC7B1D,OAAQsD,EAAUU,SAAShE,OAC3BD,KAAMuD,EAAUU,SAASjE,MAEvBgE,EACKtC,IAAMF,MAAM,6CAEA,UAAjBxF,EAASE,IAET,sBAAKE,UAAU,SAAf,UACE,yBAAQA,UAAU,kCAAlB,UACE,cAAC,IAAD,CAAMC,GAAG,aAAT,SACE,mBAAGD,UAAU,2FAEf,qBAAIA,UAAU,mDAAd,6BACmBmH,EAAUU,SAAStE,UAGxC,uBACEvD,UAAU,8BACVqG,SAAU,SAACpC,GACTA,EAAEqC,iBACFmB,EAAe,CACblB,UAAW,CACThD,IAAKD,EAASC,IACdG,MAAOJ,EAASI,MAChBtD,OAAQkD,EAASlD,OAAO0D,MACxBqC,YAAaK,SAASlD,EAAS6C,YAAYrC,OAC3CwD,YAAahE,EAASgE,YACtBC,SAAUjE,EAASiE,SACnB1D,OAAQP,EAASO,OACjBD,KAAMN,EAASM,KACfjB,gBAdR,UAmBE,0BAAS3C,UAAU,8DAAnB,UACE,qBAAIA,UAAU,4CAAd,UACG,IADH,8BAIA,sBAAKA,UAAU,wBAAf,UACE,sBAAMA,UAAU,wBAAhB,8BAAgE,IAChE,sBAAMA,UAAU,yBAAhB,SACGmH,EAAUU,SAAStE,MAEtB,sBAAMvD,UAAU,wBAAhB,oBAAsD,IACtD,uBAAMA,UAAU,mCAAhB,UACGmH,EAAUU,SAASnE,MAAMtD,OAAQ,IACjC+G,EAAUU,SAASnE,MAAMC,YAE5B,uBAAOc,QAAQ,SAASzE,UAAU,wBAAlC,qBAGA,uBACEA,UAAU,cACVO,KAAK,OACLM,GAAG,SACHiH,aAAcX,EAAUU,SAASzH,OACjCqG,IAAK,SAACrG,GAAD,OAAakD,EAASlD,OAASA,KAEtC,uBAAOqE,QAAQ,cAAczE,UAAU,wBAAvC,0BAGA,uBACEA,UAAU,cACVO,KAAK,OACLM,GAAG,cACHiH,aAAcX,EAAUU,SAAS1B,YACjCM,IAAK,SAACN,GAAD,OAAkB7C,EAAS6C,YAAcA,KAEhD,sBAAMnG,UAAU,wBAAhB,8BACA,sBAAMA,UAAU,wBAAhB,SACsC,OAAnCmH,EAAUU,SAASP,YAChB,+BACAH,EAAUU,SAASP,cAEzB,sBAAMtH,UAAU,wBAAhB,oCAGA,sBAAMA,UAAU,wBAAhB,SACmC,OAAhCmH,EAAUU,SAASN,SAChB,+BACAJ,EAAUU,SAASN,WAEzB,sBAAMvH,UAAU,wBAAhB,mBAAqD,IACrD,sBAAMA,UAAU,wBAAhB,SACGmH,EAAUU,SAASjE,OAEtB,sBAAM5D,UAAU,wBAAhB,qBAAuD,IACvD,sBAAMA,UAAU,wBAAhB,SACGmH,EAAUU,SAAShE,eAI1B,0BAAS7D,UAAU,oFAAnB,UACE,qBAAIA,UAAU,2CAAd,UACG,IADH,eAIA,gCACE,oBAAIA,UAAU,iBAAd,iCACA,oBAAIA,UAAU,QAAd,SACE,cAAC,GAAD,CAAWyC,KAAM0E,EAAUU,SAAUnF,KAAK,cAE5C,oBAAI1C,UAAU,iBAAd,mCACA,oBAAIA,UAAU,QAAd,SACE,cAAC,GAAD,CAAWyC,KAAM0E,EAAUU,SAAUnF,KAAK,oBAG9C,sBAAK1C,UAAU,SAAf,UACE,qBAAKA,UAAU,+FAAf,SACG2C,EAAUC,KAAI,SAACH,GACd,OACE,6BACE,qBAAIzC,UAAU,kCAAd,UACGyC,EAAKC,KADR,KACgBD,EAAKK,sBAM7B,uBAAO9C,UAAU,UAAUyE,QAAQ,cAAnC,yBAGA,uBACEzE,UAAU,aACV+D,YAAY,2BACZxD,KAAK,YACLM,GAAG,cACH4F,IAAK,SAAC3D,GAAD,OAAkBD,EAASC,YAAcA,KAEhD,uBAAO9C,UAAU,UAAUyE,QAAQ,OAAnC,kBAGA,yBACEzE,UAAU,aACVO,KAAK,OACLM,GAAG,OACH4F,IAAK,SAAC/D,GAAD,OAAWG,EAASH,KAAOA,GAJlC,UAME,wBAAQoB,MAAM,UAAd,qBACA,wBAAQA,MAAM,aAAd,2BAEF,gCACE,wBACEvD,KAAK,SACLC,QA5LI,WAClB0F,EAAa,GAAD,oBACPvD,GADO,CAEV,CAAEG,YAAaD,EAASC,YAAYgB,MAAOpB,KAAMG,EAASH,KAAKoB,WA0LnD9D,UAAU,qGAHZ,gCAOA,wBACEO,KAAK,SACLC,QA5LI,WAClB0F,EAAa,KA4LClG,UAAU,4FAHZ,kCAUN,wBACEO,KAAK,SACLP,UAAU,8IAFZ,kCAUa,kBAAjBJ,EAASE,IAET,sBAAKE,UAAU,SAAf,UACE,yBAAQA,UAAU,kCAAlB,UACE,cAAC,IAAD,CAAMC,GAAG,aAAT,SACE,mBAAGD,UAAU,2FAEf,qBAAIA,UAAU,mDAAd,6BACmBmH,EAAUU,SAAStE,UAGxC,uBACEvD,UAAU,8BACVqG,SAAU,SAACpC,GACTA,EAAEqC,iBACFmB,EAAe,CACblB,UAAW,CACThD,IAAKD,EAASC,IACdG,MAAOJ,EAASI,MAChBtD,OAAQkD,EAASlD,OACjB+F,YAAaK,SAASlD,EAAS6C,aAC/BmB,YAAahE,EAASgE,YACtBC,SAAUjE,EAASiE,SACnB1D,OAAQP,EAASO,OACjBD,KAAMN,EAASM,SAbvB,UAkBE,0BAAS5D,UAAU,8DAAnB,UACE,qBAAIA,UAAU,4CAAd,UACG,IADH,8BAIA,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,wBAAf,8BAA8D,IAC9D,qBAAKA,UAAU,yBAAf,SACGmH,EAAUU,SAAStE,MAEtB,sBAAMvD,UAAU,wBAAhB,oBAAsD,IACtD,uBAAMA,UAAU,mCAAhB,UACGmH,EAAUU,SAASnE,MAAMtD,OAAQ,IACjC+G,EAAUU,SAASnE,MAAMC,YAE5B,sBAAM3D,UAAU,wBAAhB,kCAGA,sBAAMA,UAAU,cAAhB,SAA+BmH,EAAUU,SAASzH,SAClD,sBAAMJ,UAAU,wBAAhB,0BACA,sBAAMA,UAAU,cAAhB,SACGmH,EAAUU,SAAS1B,cAEtB,sBAAMnG,UAAU,wBAAhB,8BACA,sBAAMA,UAAU,wBAAhB,SACsC,OAAnCmH,EAAUU,SAASP,YAChB,+BACAH,EAAUU,SAASP,cAEzB,sBAAMtH,UAAU,wBAAhB,oCAGA,sBAAMA,UAAU,wBAAhB,SACmC,OAAhCmH,EAAUU,SAASN,SAChB,+BACAJ,EAAUU,SAASN,WAEzB,sBAAMvH,UAAU,wBAAhB,mBAAqD,IACrD,sBAAMA,UAAU,cAAhB,SAA+BmH,EAAUU,SAASjE,OAClD,uBAAO5D,UAAU,wBAAjB,qBAAyD,IACzD,sBAAMA,UAAU,mBAAhB,SACGmH,EAAUU,SAAShE,SAEO,cAA5BsD,EAAUU,SAASjE,KAAuB,KACzC,wBACErD,KAAK,SACLC,QAtRM,WACY,SAA5B2G,EAAUU,SAASjE,MACrBN,EAASM,KAAO,WAChBN,EAASgE,YAAT,UAA0BL,GAC1B3D,EAASO,OAAS,UACqB,WAA9BsD,EAAUU,SAAShE,QAC5BP,EAASO,OAAS,WAClB2D,EAAqB,CACnBjB,UAAW,CACTwB,uBAAwBxE,MAI5BD,EAASO,OAAS,UA0QN7D,UAAU,sJAHZ,SAKiC,WAA9BmH,EAAUU,SAAShE,OAChB,aACA,kBAKZ,yBAAS7D,UAAU,oFAAnB,SACE,gCACE,oBAAIA,UAAU,gCAAd,wBACA,oBAAIA,UAAU,iBAAd,iCACA,oBAAIA,UAAU,QAAd,SACE,cAAC,GAAD,CAAWyC,KAAM0E,EAAUU,SAAUnF,KAAK,cAE5C,oBAAI1C,UAAU,iBAAd,mCACA,oBAAIA,UAAU,QAAd,SACE,cAAC,GAAD,CAAWyC,KAAM0E,EAAUU,SAAUnF,KAAK,sBAInB,eAA5ByE,EAAUU,SAASjE,KAClB,yBACErD,KAAK,SACLP,UAAU,0IACVQ,QAAS,WACP8C,EAASO,OAAS,WAClBP,EAASM,KAAO,YAChBN,EAASiE,SAAT,UAAuBN,IAN3B,UASG,IATH,oBAUoB,OAElB,WAKL,+CChWMe,GAvBO,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,SAAU9F,EAAwC,EAAxCA,QAAS+F,EAA+B,EAA/BA,KAA+B,IAAzB1H,eAAyB,MAAf,aAAe,EACzE,OACE,wBACE,cAAY,iBACZA,QAASA,EACTyH,SAAUA,EACV1H,KAAK,SACLP,UAAU,oJALZ,SAOGmC,EACC,cAAC,KAAD,CACE,cAAY,oBACZ5B,KAAK,OACLiF,OAAQ,GACRC,MAAO,KAGTyC,KCwGFC,GAAc,SAAC,GAAc,IAC3BC,EAD0B,EAAX3F,KACQoF,SAAS/C,UAAUlC,KAAI,SAACoC,GACnD,MAA0B,aAAtBA,EAAWnB,OAEX,oBAAI7D,UAAU,OAAd,SACE,qBAAIA,UAAU,wBAAd,UACGgF,EAAWA,WAAW5E,OADzB,IACkC4E,EAAWA,WAAWrB,cAKvD,QAIT,OAAsB,IADPyE,EAAgB/E,QAAO,SAAC2B,GAAD,OAA+B,OAAfA,KAC3CC,OACFmD,EAGP,mBAAGpI,UAAU,cAAb,0DAIEqI,GAAU,SAAC,GAAc,IAAZ5F,EAAW,EAAXA,KACX6F,EAAc7F,EAAK8F,QACzB,OAA8B,IAA1B9F,EAAKqC,UAAUG,OACgB,aAA7BxC,EAAKqC,UAAU,GAAGjB,OACF,aAAdpB,EAAKmB,MAAqC,eAAdnB,EAAKmB,KACR,IAAvB0E,EAAYrD,OAEZ,qCACE,cAAC,EAAD,CAAkBvF,SAAU,CAAC,QAAS,cAAtC,SACE,eAAC,IAAD,CAAMO,GAAE,qBAAgBwC,EAAKc,KAA7B,UACE,oBAAGvD,UAAU,cAAb,iBACOsI,EAAYrD,OAAQ,IACD,IAAvBqD,EAAYrD,OAAe,UAAY,WAF1C,kBAGW,OAEX,wBACE1E,KAAK,SACLP,UAAU,iFAFZ,8BAQJ,uBACA,cAAC,EAAD,CAAkBN,SAAU,CAAC,cAA7B,SACE,cAAC,IAAD,CAAMO,GAAE,mBAAcwC,EAAKc,KAA3B,SACE,wBACEhD,KAAK,SACLP,UAAU,sFAFZ,qCAYR,qCACG,IACD,mBAAGA,UAAU,cAAb,4CACA,cAAC,EAAD,CAAkBN,SAAU,CAAC,cAA7B,SACE,cAAC,IAAD,CAAMO,GAAE,mBAAcwC,EAAKc,KAA3B,SACE,wBACEhD,KAAK,SACLP,UAAU,iFAFZ,qCAYR,qCACG,IACD,oBAAGA,UAAU,cAAb,+EACqE,OAErE,cAAC,EAAD,CAAkBN,SAAU,CAAC,cAA7B,SACE,wBACEa,KAAK,SACLP,UAAU,iFAFZ,mCAWN,qCACG,IACD,oBAAGA,UAAU,cAAb,gFACmE,UAMvE,qCACG,IACD,oBAAGA,UAAU,cAAb,8EACoE,OAEpE,cAAC,EAAD,CAAkBN,SAAU,CAAC,cAA7B,SACE,wBACEa,KAAK,SACLP,UAAU,iFAFZ,oCAWFwI,GAAsB,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,WAAY5E,EAA4B,EAA5BA,OAAQ6E,EAAoB,EAApBA,cACjD,EAAkDzH,mBAAS,IAA3D,mBAAO0H,EAAP,KAA0BC,EAA1B,KACA,EAA2C9G,YAAY6E,IAAvD,mBAAOkC,EAAP,YAAwB5G,EAAxB,EAAwBA,KAAME,EAA9B,EAA8BA,QACtBvC,EAAaJ,IAAbI,SAERwC,qBAAU,WACR,GAAIxC,GAAY8I,EAAe,CAC7B,IAAMI,EAAMJ,EAAcb,SAAS/C,UAAUzB,QAC3C,SAAC0F,GAAD,OAAQA,EAAG/D,WAAWzB,MAAQ3D,EAAS2D,OAErCuF,EAAI7D,OAAS,GACf2D,EAAqBE,EAAI,GAAGjF,WAG/B,CAACjE,EAAU8I,IAEdtG,qBAAU,WACJH,GACFqD,IAAMS,QAAQ,sBAEf,CAAC9D,IAYJ,OACE,mCACyB,KAAtB0G,EACC,kEAAqCA,KAErC,cAAC,GAAD,CACEnI,QAAS,WAffqI,EAAc,CACZtC,UAAW,CACTjD,SAAUmF,EACVzD,WAAYpF,EAAS2D,QAanB0E,SAAqB,aAAXpE,EACV1B,QAASA,EACT+F,KAAK,oCAOAc,GAzRK,WAClB,IAAQzF,EAAQyD,eAARzD,IACA3D,EAAaJ,IAAbI,SAER,EAAiCuF,aAASnC,GAAc,CACtDuD,UAAW,CAAEhD,SADPtB,EAAR,EAAQA,KAAMmD,EAAd,EAAcA,MAAOjD,EAArB,EAAqBA,QAYrB,OARAC,qBAAU,cAAU,CAACH,IAErBG,qBAAU,WACJgD,GACFE,IAAMF,MAAM,oCAEb,CAACA,IAEAjD,EAEA,cAAC,KAAD,CAAc5B,KAAK,QAAQgF,MAAM,UAAUC,OAAQ,IAAKC,MAAO,MAGjE,sBAAKzF,UAAU,SAAf,UACE,yBAAQA,UAAU,kCAAlB,UACE,cAAC,IAAD,CAAMC,GAAG,aAAT,SACE,mBAAGD,UAAU,2FAEf,oBAAIA,UAAU,oDAAd,SACGiC,EAAK4F,SAASzH,YAGnB,sBAAKJ,UAAU,oCAAf,UACE,0BAASA,UAAU,mEAAnB,UACE,qBAAIA,UAAU,iDAAd,UACG,IADH,8BAIA,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,wBAAf,8BAA8D,IAC9D,qBAAKA,UAAU,yBAAf,SAAyCiC,EAAK4F,SAAStE,MACvD,qBAAKvD,UAAU,wBAAf,oBAAoD,IACpD,sBAAKA,UAAU,mCAAf,UACGiC,EAAK4F,SAASnE,MAAMtD,OADvB,IACgC6B,EAAK4F,SAASnE,MAAMC,YAEpD,sBAAM3D,UAAU,wBAAhB,0BAA4D,IAC5D,sBAAMA,UAAU,wBAAhB,SACGiC,EAAK4F,SAAS1B,cAEjB,sBAAMnG,UAAU,wBAAhB,8BAAgE,IAChE,sBAAMA,UAAU,wBAAhB,SACiC,OAA9BiC,EAAK4F,SAASP,YACX,iCACArF,EAAK4F,SAASP,cAEpB,sBAAMtH,UAAU,wBAAhB,oCAEQ,IACR,sBAAMA,UAAU,wBAAhB,SAC8B,OAA3BiC,EAAK4F,SAASN,SACX,+BACAtF,EAAK4F,SAASN,WAEpB,sBAAMvH,UAAU,wBAAhB,mBAAqD,IACrD,sBAAMA,UAAU,wBAAhB,SAAyCiC,EAAK4F,SAASjE,OACvD,sBAAM5D,UAAU,wBAAhB,qBAAuD,IACvD,sBAAMA,UAAU,wBAAhB,SACGiC,EAAK4F,SAAShE,eAIrB,0BAAS7D,UAAU,mEAAnB,UACE,oBAAIA,UAAU,gCAAd,wBACA,oBAAIA,UAAU,iBAAd,iCACA,oBAAIA,UAAU,QAAd,SACE,cAAC,GAAD,CACEyC,KAAMR,EAAK4F,SACXnF,KAAK,UACL1C,UAAU,gBAGd,oBAAIA,UAAU,iBAAd,mCACA,oBAAIA,UAAU,QAAd,SACE,cAAC,GAAD,CACEyC,KAAMR,EAAK4F,SACXnF,KAAK,aACL1C,UAAU,mBAIhB,0BAASA,UAAU,oEAAnB,UACE,oBAAIA,UAAU,+BAAd,mCAGA,cAAC,GAAD,CAAayC,KAAMR,IACD,eAAjBrC,EAASE,IACR,cAAC,GAAD,CACE2I,WAAYxG,EAAK4F,SAAStE,IAC1BM,OAAQ5B,EAAK4F,SAAShE,OACtB6E,cAAezG,IAEf,QAEN,cAAC,EAAD,CAAkBvC,SAAU,CAAC,QAAS,cAAtC,SACE,0BAASM,UAAU,gFAAnB,UACE,oBAAIA,UAAU,+BAAd,qBACA,cAAC,GAAD,CAASyC,KAAMR,EAAK4F,uBClH1BoB,GAAe5H,YAAH,kLAcZ6H,GAAc7H,YAAH,0MCdX8H,GAAoB9H,YAAH,kaAuBjB+H,GAAiB/H,YAAH,4fA4BdgI,GAAmBhI,YAAH,iL,UCrDhBiI,GAAW,CACfC,cAAe,gBACfC,WAAY,aACZC,MAAO,YAGHC,GAAqB,CACzBC,UAAW,YACXC,WAAY,aACZC,cAAe,iBCoKFC,GAnKE,WACf,MAA0C3E,aAAS8D,IAA3ChH,EAAR,EAAQA,KAAMmD,EAAd,EAAcA,MAAOjD,EAArB,EAAqBA,QAASkD,EAA9B,EAA8BA,QAG9BjD,qBAAU,WACRiD,MACC,CAACpD,IAEJG,qBAAU,WACJgD,GACFE,IAAMF,MAAM,oCAEb,CAACA,IAEJ,MAAgCnE,mBAAS,IAAzC,mBAAOiC,EAAP,KAAiBC,EAAjB,KACA,EAAoClC,oBAAS,GAA7C,mBAAO8I,EAAP,KAAmBC,EAAnB,KACA,EAAsC/I,mBAAS,IAA/C,mBAAOgJ,EAAP,KAAoBC,EAApB,KAWA,EAGIpI,YAAYuH,IAHhB,mBACEc,EADF,YAEUzC,EAFV,EAEIzF,KAA6BC,EAFjC,EAEwBC,QAAiCyF,EAFzD,EAEkDxC,MAgBlD,OAbAhD,qBAAU,WACJsF,IACFpC,IAAMS,QAAQ,mCACdV,OAED,CAACqC,EAAcxF,IAElBE,qBAAU,WACJwF,GACFtC,IAAMF,MAAM,iCAEb,CAACwC,IAEAzF,GAAWD,EAEX,cAAC,KAAD,CAAc3B,KAAK,QAAQgF,MAAM,UAAUC,OAAQ,IAAKC,MAAO,MAIjE,qCACE,oBAAIzF,UAAU,yDAAd,kCAGA,uBACA,sBAAKA,UAAU,uCAAf,UACE,gCACE,0CAEF,uBACEA,UAAU,+NACV8D,MAAOZ,EACPa,YAAY,6CACZC,SA9CQ,SAACC,GACfd,EAAYc,EAAEC,OAAOJ,aAgDnB,qBAAK9D,UAAU,MAAf,SACE,wBAAOA,UAAU,eAAjB,UACE,gCACE,+BACE,oBAAImE,MAAM,MAAV,+BACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,iBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,2BAGJ,gCACGlC,GACCA,EAAK6H,SAASzG,QAAO,SAAC+G,GACpB,GACEA,EAAK7G,IACFC,WACAC,cACA5D,SAASqD,EAASO,gBACrB2G,EAAKhK,OAAOqD,cAAc5D,SAASqD,EAASO,gBAC5C2G,EAAKC,eACF5G,cACA5D,SAASqD,EAASO,eAErB,OAAO2G,KAERxH,KAAI,SAACH,GACN,OACE,+BACE,6BAAKA,EAAK4H,iBACV,6BAAK5H,EAAKrC,SACV,6BAAKqC,EAAKkB,WACV,6BAAKlB,EAAK6H,SACV,6BAAKhB,GAAS7G,EAAK3C,OACnB,6BAAK4J,GAAmBjH,EAAKoB,UAC7B,+BACE,eAAC,IAAD,CAAM5D,GAAE,kCAA6BwC,EAAKc,KAA1C,UACE,wBACEhD,KAAK,SACLP,UAAU,iFAFZ,oBAKU,OAEX,MACD,wBACEO,KAAK,SACLP,UAAU,+EACVQ,QAAS,kBA9F7B0J,EA8FoDzH,QA7FpDuH,GAAc,IA0FI,2BAjBKvH,EAAKc,eAgC1B,cAACgH,GAAA,EAAD,CAAQrJ,KAAM6I,EAAd,SACE,sBAAK/J,UAAU,oBAAf,UACE,oBAAIA,UAAU,mCAAd,+DAGA,sBAAKA,UAAU,+CAAf,UACE,wBACEO,KAAK,SACLC,QAAS,kBACP2J,EAAgB,CACd5D,UAAW,CACThD,IAAK0G,EAAY1G,IACjB+G,OAAQL,EAAYK,UAErBE,MAAK,kBAAMR,GAAc,OAE9BhK,UAAU,iFAVZ,mBAcA,wBACEO,KAAK,SACLC,QAAS,kBAAMwJ,GAAc,IAC7BhK,UAAU,6EAHZ,4BC5DGyK,GA/FM,WACnB,MAAmB3I,YAAYqH,IAAxBuB,EAAP,oBACA,EAA8BzJ,mBAAS,CACrCb,OAAQ,GACRuD,SAAU,GACV0G,eAAgB,GAChBC,OAAQ,GACRxK,IAAK,GACL6K,SAAU,KANZ,mBAAOC,EAAP,KAAgBC,EAAhB,KASA,OACE,qCACE,yBAAS7K,UAAU,0BAAnB,SACE,oBAAIA,UAAU,+BAAd,0BAEF,yBAASA,UAAU,SAAnB,SACE,uBACEA,UAAU,kIACVqG,SAAU,SAACpC,GACTA,EAAEqC,iBACFoE,EAAS,CACPnE,UAAW,CACTnG,OAAQwK,EAAQxK,OAAO0D,MACvBH,SAAUiH,EAAQjH,SAASG,MAC3BuG,eAAgBO,EAAQP,eAAevG,MACvCwG,OAAQM,EAAQN,OAAOxG,MACvBhE,IAAK8K,EAAQ9K,IAAIgE,MACjB6G,SAAUC,EAAQD,SAAS7G,UAXnC,UAgBE,uBAAOW,QAAQ,SAAf,oBACA,uBACEgC,IAAK,SAACrG,GAAD,OAAYyK,EAAYD,EAAQxK,OAASA,IAC9C2D,YAAY,SACZlD,GAAG,SACHb,UAAU,qDAEZ,uBAAOyE,QAAQ,WAAf,sBACA,uBACEgC,IAAK,SAAC9C,GAAD,OAAckH,EAAYD,EAAQjH,SAAWA,IAClD9C,GAAG,WACHkD,YAAY,WACZ/D,UAAU,qDAEZ,uBAAOyE,QAAQ,iBAAf,4BACA,uBACEgC,IAAK,SAAC4D,GAAD,OACHQ,EAAYD,EAAQP,eAAiBA,IAEvCtG,YAAY,iBACZxD,KAAK,OACLM,GAAG,iBACHb,UAAU,qDAEZ,uBAAOyE,QAAQ,SAAf,gCACA,uBACEgC,IAAK,SAAC6D,GAAD,OAAYO,EAAYD,EAAQN,OAASA,IAC9C/J,KAAK,QACLwD,YAAY,qBACZlD,GAAG,SACHb,UAAU,qDAEZ,uBAAOyE,QAAQ,MAAf,iBACA,yBACEgC,IAAK,SAAC3G,GAAD,OAAS+K,EAAYD,EAAQ9K,IAAMA,IACxCe,GAAG,MACHb,UAAU,wDAHZ,UAKE,wBAAQiI,UAAQ,EAAC6C,UAAQ,EAAzB,0BAGA,wBAAQhH,MAAM,aAAd,wBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,gBAAd,8BAEF,uBAAOW,QAAQ,WAAf,2BACA,uBACEgC,IAAK,SAACkE,GAAD,OAAcE,EAAYD,EAAQD,SAAWA,IAClDpK,KAAK,WACLM,GAAG,WACHkD,YAAY,gBACZ/D,UAAU,0DAEZ,wBAAQO,KAAK,SAASP,UAAU,wBAAhC,kCC5DK+K,GA5BD,SAAC,GAQR,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,KACAnD,EAKI,EALJA,aACAvH,EAII,EAJJA,KACAmG,EAGI,EAHJA,SACAwE,EAEI,EAFJA,SACApH,EACI,EADJA,MAEA,OACE,wBACEW,QAASwG,EACTjL,UAAU,sEAFZ,UAIE,+BAAOgL,IACP,uBACEtE,SAAUA,EACVnG,KAAMA,EACN0K,KAAMA,EACNjL,UAAU,mDACV8H,aAAcA,EACdoD,SAAUA,EACVpH,MAAOA,Q,SCcAqH,GApCK,SAACC,GACnB,IAAMC,EAAOC,iBAAOF,GACpB,EAAgCnK,mBAAS,IAAzC,mBAAOsK,EAAP,KAAiBC,EAAjB,KA+BA,MAAO,CAAEH,OAAME,WAAUE,eAHF,WACrBD,EA5BkB,WAClB,IAAME,EAAK,IAAIC,SAASN,EAAKO,SACvBC,EAAM,GAuBZ,OAtBAH,EAAGI,SAAQ,SAAChI,EAAOiI,GACjB,GAAIA,EAAIlM,SAAS,UAAW,CAC1B,MAAqBkM,EAAIC,MAAM,MAA/B,mBAAOC,EAAP,KAAWC,EAAX,KAAeC,EAAf,KACIC,OAAOC,KAAKR,GAAKhM,SAASoM,GACxBG,OAAOC,KAAKR,EAAII,IAAKpM,SAASqM,GAChCL,EAAII,GAAIC,GAAIC,GAAMrI,EAElB+H,EAAII,GAAIC,GAAR,gBACGC,EAAKrI,GAIV+H,EAAII,GAAJ,gBACGC,EADH,gBAEKC,EAAKrI,SAKZ+H,EAAIE,GAAOjI,KAGR+H,EAGKS,O,UCIDC,GAlCE,SAAC,GAA2D,IAAzDvB,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,KAAiD,IAA3CnD,oBAA2C,MAA5B,GAA4B,EAAxBpB,EAAwB,EAAxBA,SAAU8F,EAAc,EAAdA,QAC5D,EAA0CvL,mBAAS6G,GAAnD,mBAAO2E,EAAP,KAAsBC,EAAtB,KACMC,EAAa,CACjB,CAAC,GAAI,4BAAyB,IADb,oBAEdP,OAAOQ,QAAQJ,KAKpB,OAHApK,qBAAU,WACRsK,EAAiB5E,KAChB,CAACA,IAEF,wBACErD,QAASwG,EACTjL,UAAU,sEAFZ,UAIE,+BAAOgL,IACP,wBACEtE,SAAUA,EACVuE,KAAMA,EACNjL,UAAU,QACV8D,MAAO2I,EACPzI,SAAU,SAACC,GAAD,OAAOyI,EAAiBzI,EAAEC,OAAOJ,QAL7C,SAOG6I,EAAc/J,KAAI,SAACiK,GAAO,IAAD,EACxB,OACE,wBAAuB/I,MAAO+I,EAAE,GAAI5E,SAAQ,UAAE4E,EAAE,UAAJ,SAA5C,SACGA,EAAE,IADQC,yBC4FVC,GA1GO,WACpB,MAA2C5B,GAAY,MAA/CE,EAAR,EAAQA,KAAME,EAAd,EAAcA,SAAUE,EAAxB,EAAwBA,eAChBlI,EAAQyD,eAARzD,IAER,EAII4B,aAAS+D,GAAa,CAAE3C,UAAW,CAAEhD,SAHjC4D,EADR,EACElF,KACOmF,EAFT,EAEEhC,MACSiC,EAHX,EAGElF,QAGF,EAGIL,YAAYsH,IAHhB,mBACE4D,EADF,YAEUtF,EAFV,EAEIzF,KAA6B0F,EAFjC,EAEwBxF,QAAiCyF,EAFzD,EAEkDxC,MA2BlD,OAhBAhD,qBAAU,WACJsF,GACFpC,IAAMS,QAAQ,sCAEf,CAAC2B,IAEJtF,qBAAU,WACJwF,GACFtC,IAAMF,MAAM,gCAGVgC,GACF9B,IAAMF,MAAM,kCAEb,CAACgC,EAAYQ,IAEZP,EAEA,cAAC,KAAD,CAAc9G,KAAK,QAAQgF,MAAM,UAAUC,OAAQ,IAAKC,MAAO,MAIjE,sBAAKzF,UAAU,+DAAf,UACE,cAAC,IAAD,CAAMC,GAAG,YAAT,SACE,mBAAGD,UAAU,2FAEf,oBAAIA,UAAU,mDAAd,4BAGA,uBACEqG,SAtCa,SAACpC,GAClBA,EAAEqC,wBACKiF,EAASzL,IAChBkN,EAAc,CACZzG,UAAU,aAAGhD,OAAQgI,MAmCnBvH,SAAUyH,EACVhF,IAAK4E,EACLrL,UAAU,+JAJZ,UAME,cAAC,GAAD,CACEgL,MAAM,qBACNzK,KAAK,OACL0K,KAAK,iBACLnD,aAAcX,EAAU9C,QAAQgG,eAChC3D,UAAQ,IAEV,cAAC,GAAD,CACEsE,MAAM,wBACNzK,KAAK,OACL0K,KAAK,SACLnD,aAAcX,EAAU9C,QAAQjE,OAChCsG,UAAQ,IAEV,cAAC,GAAD,CACEsE,MAAM,0BACNzK,KAAK,OACL0K,KAAK,WACLnD,aAAcX,EAAU9C,QAAQV,SAChC+C,UAAQ,IAEV,cAAC,GAAD,CACEsE,MAAM,wBACNzK,KAAK,QACL0K,KAAK,SACLnD,aAAcX,EAAU9C,QAAQiG,OAChC5D,UAAQ,IAEV,cAAC,GAAD,CACEsE,MAAM,wBACNC,KAAK,SACLnD,aAAcX,EAAU9C,QAAQR,OAChC6C,UAAQ,EACR8F,QAAS9C,KAEX,uBAAM1J,UAAU,mDAAhB,8BACoBmH,EAAU9C,QAAQvE,OAEtC,cAAC,GAAD,CACEmI,SAA2C,IAAjCmE,OAAOC,KAAKd,GAAUtG,OAChC9C,QAASwF,EACTO,KAAK,qBC6DAC,GAnKK,WAClB,MAA0ChD,aAAS8D,IAA3ChH,EAAR,EAAQA,KAAMmD,EAAd,EAAcA,MAAOjD,EAArB,EAAqBA,QAASkD,EAA9B,EAA8BA,QAG9BjD,qBAAU,WACRiD,MACC,CAACpD,IAEJG,qBAAU,WACJgD,GACFE,IAAMF,MAAM,oCAEb,CAACA,IAEJ,MAAgCnE,mBAAS,IAAzC,mBAAOiC,EAAP,KAAiBC,EAAjB,KACA,EAAoClC,oBAAS,GAA7C,mBAAO8I,EAAP,KAAmBC,EAAnB,KACA,EAAsC/I,mBAAS,IAA/C,mBAAOgJ,EAAP,KAAoBC,EAApB,KAWA,EAGIpI,YAAYuH,IAHhB,mBACEc,EADF,YAEUzC,EAFV,EAEIzF,KAA6BC,EAFjC,EAEwBC,QAAiCyF,EAFzD,EAEkDxC,MAgBlD,OAbAhD,qBAAU,WACJsF,IACFpC,IAAMS,QAAQ,mCACdV,OAED,CAACqC,EAAcxF,IAElBE,qBAAU,WACJwF,GACFtC,IAAMF,MAAM,iCAEb,CAACwC,IAEAzF,GAAWD,EAEX,cAAC,KAAD,CAAc3B,KAAK,QAAQgF,MAAM,UAAUC,OAAQ,IAAKC,MAAO,MAIjE,qCACE,oBAAIzF,UAAU,yDAAd,kCAGA,uBACA,sBAAKA,UAAU,uCAAf,UACE,gCACE,0CAEF,uBACEA,UAAU,+NACV8D,MAAOZ,EACPa,YAAY,6CACZC,SA9CQ,SAACC,GACfd,EAAYc,EAAEC,OAAOJ,aAgDnB,qBAAK9D,UAAU,MAAf,SACE,wBAAOA,UAAU,eAAjB,UACE,gCACE,+BACE,oBAAImE,MAAM,MAAV,+BACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,iBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,2BAGJ,gCACGlC,GACCA,EAAK6H,SAASzG,QAAO,SAAC+G,GACpB,GACEA,EAAK7G,IACFC,WACAC,cACA5D,SAASqD,EAASO,gBACrB2G,EAAKhK,OAAOqD,cAAc5D,SAASqD,EAASO,gBAC5C2G,EAAKC,eACF5G,cACA5D,SAASqD,EAASO,eAErB,OAAO2G,KAERxH,KAAI,SAACH,GACN,OACE,+BACE,6BAAKA,EAAK4H,iBACV,6BAAK5H,EAAKrC,SACV,6BAAKqC,EAAKkB,WACV,6BAAKlB,EAAK6H,SACV,6BAAKhB,GAAS7G,EAAK3C,OACnB,6BAAK4J,GAAmBjH,EAAKoB,UAC7B,+BACE,eAAC,IAAD,CAAM5D,GAAE,kCAA6BwC,EAAKc,KAA1C,UACE,wBACEhD,KAAK,SACLP,UAAU,iFAFZ,oBAKU,OAEX,MACD,wBACEO,KAAK,SACLP,UAAU,+EACVQ,QAAS,kBA9F7B0J,EA8FoDzH,QA7FpDuH,GAAc,IA0FI,2BAjBKvH,EAAKc,eAgC1B,cAACgH,GAAA,EAAD,CAAQrJ,KAAM6I,EAAd,SACE,sBAAK/J,UAAU,oBAAf,UACE,oBAAIA,UAAU,mCAAd,+DAGA,sBAAKA,UAAU,+CAAf,UACE,wBACEO,KAAK,SACLC,QAAS,kBACP2J,EAAgB,CACd5D,UAAW,CACThD,IAAK0G,EAAY1G,IACjB+G,OAAQL,EAAYK,UAErBE,MAAK,kBAAMR,GAAc,OAE9BhK,UAAU,iFAVZ,mBAcA,wBACEO,KAAK,SACLC,QAAS,kBAAMwJ,GAAc,IAC7BhK,UAAU,6EAHZ,4B,qECpJNiN,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,SAAU,WACV5H,MAAO,IACP6H,gBAAiB,QACjBC,OAAQ,iBACRC,UAAWL,EAAMM,QAAQ,GACzBC,QAAS,iBACTC,IAAK,MACLC,KAAM,MACNC,UAAW,wBAEbC,UAAW,CACTrI,MAAO,QAETsI,UAAW,CACTC,UAAW,cAwPAC,GApPA,WACb,IAAQrO,EAAaJ,IAAbI,SACF8B,EAAWC,eACjB,EAAkCV,mBAAS,MAA3C,mBAAOiN,EAAP,KAAgBC,EAAhB,KACA,EAA4BlN,oBAAS,GAArC,mBAAOmN,EAAP,KAAeC,EAAf,KACA,EAAwBvM,YAAYsH,GAAgB,CAClDtD,YADkD,WAEhDR,IAAMS,QAAQ,iCACdsI,GAAU,MAHPrB,EAAP,oBAQA,EAAuBlL,YAAYR,EAAe,CAChDwE,YADgD,WAE9CR,IAAMS,QAAQ,wBAFXuI,EAAP,oBAMMC,EAAStB,KACf,EAA0BhM,oBAAS,GAAnC,mBAAOmM,EAAP,KAAcoB,EAAd,KAEMC,EAAmB,WACvBD,GAAUpB,IAEZ,EAA0CnM,mBAAS,IAAnD,mBAAOyN,EAAP,KAAsBC,EAAtB,KACA,EAA0C1N,mBAAS,IAAnD,mBAAO2N,EAAP,KAAsBC,EAAtB,KAUQvO,EAAajB,IAAbiB,SAKFwO,EAAc,yCAAG,uBAAAC,EAAA,sDACrB,IACET,EAAa,CACX/H,UAAW,CACT+D,OAAQ1K,EAAS0K,OACjBK,SAAUiE,EACVI,MAAON,KATbpO,EAAS,MAaPoB,EAAS,KAGT,MAAO0D,GACP+I,EAAe/I,EAAM6J,QAAQC,QAAQ,kBAAmB,KACxDC,YAAW,WACThB,EAAe,QACd,KAjBgB,2CAAH,qDA8BdiB,EACJ,sBAAKpP,UAAWuO,EAAOnB,MAAvB,UACGc,GATD,qBAAKlO,UAAU,gGAAf,SACE,4BAAIkO,MASN,qBAAKmB,MAAM,SAAX,SACE,yDAEF,cAACC,GAAA,EAAD,CACEtL,SAlDgB,SAACuL,GACrBZ,EAAiBY,EAAMrL,OAAOJ,QAkD1BkH,MAAM,yBACNhL,UAAWuO,EAAOe,UAClB/O,KAAK,aAEP,uBACA,cAAC+O,GAAA,EAAD,CACEtL,SArDa,SAACuL,GAClBV,EAAiBU,EAAMrL,OAAOJ,QAqD1BkH,MAAM,sBACNhL,UAAWuO,EAAOe,UAClB/O,KAAK,aAEP,uBAlBF,IAkBS,uBACP,sBAAK8O,MAAM,SAAX,UACE,cAACG,GAAA,EAAD,CAAQhP,QAAS,kBAAMsO,KAAkBvJ,MAAM,UAA/C,oBAGA,cAACiK,GAAA,EAAD,CAAQhP,QAAS,kBAAMiO,KAAvB,4BAOA7D,EAAU,CACdrH,IAAK3D,EAAS2D,IACdnD,OAAQR,EAASQ,OACjBuD,SAAU/D,EAAS+D,SACnB0G,eAAgBzK,EAASyK,eACzBvK,IAAKF,EAASE,IACd+D,OAAQ,aACRyG,OAAQ1K,EAAS0K,QAQnB,OACE,sBAAKtK,UAAU,8DAAf,UACE,iCACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,mBAAGD,UAAU,6FAIjB,qBAAIA,UAAU,oDAAd,UACGJ,EAASQ,OADZ,IACqBR,EAAS+D,YAE9B,uBACE3D,UAAU,gKACVqG,SAAU,SAACpC,GACTA,EAAEqC,iBACF0G,EAAc,CACZzG,UAAW,CACThD,IAAKqH,EAAQrH,IACbzD,IAAK8K,EAAQ9K,IACb+D,OAAQ+G,EAAQ/G,OAChBzD,OAAQwK,EAAQxK,OAAO0D,MACvBH,SAAUiH,EAAQjH,SAASG,MAC3BuG,eAAgBO,EAAQP,eAAevG,MACvCwG,OAAQM,EAAQN,OAAOxG,UAZ/B,UAiBE,sBAAM9D,UAAU,0DAAhB,SACGJ,EAASE,MAEZ,uBACE2E,QAAQ,SACRzE,UAAU,oDAFZ,qBAMA,uBACEO,KAAK,OACLP,UAAWoO,EAAS,aAAe,cACnCvN,GAAG,SACHiH,aAAclI,EAASQ,OACvBqG,IAAK,SAACrG,GAAD,OAAawK,EAAQxK,OAASA,KAErC,uBACEqE,QAAQ,WACRzE,UAAU,mDAFZ,uBAMA,uBACEO,KAAK,OACLM,GAAG,WACHb,UAAWoO,EAAS,aAAe,cACnCtG,aAAclI,EAAS+D,SACvB8C,IAAK,SAAC9C,GAAD,OAAeiH,EAAQjH,SAAWA,KAEzC,uBACEc,QAAQ,iBACRzE,UAAU,oDAFZ,6BAMA,uBACEO,KAAK,OACLM,GAAG,iBACHb,UAAWoO,EAAS,aAAe,cACnCtG,aAAclI,EAASyK,eACvB5D,IAAK,SAAC4D,GAAD,OAAqBO,EAAQP,eAAiBA,KAErD,uBACE5F,QAAQ,SACRzE,UAAU,mDAFZ,qBAMA,uBACEO,KAAK,OACLM,GAAG,SACHb,UAAWoO,EAAS,aAAe,cACnCtG,aAAclI,EAAS0K,OACvB7D,IAAK,SAAC6D,GAAD,OAAaM,EAAQN,OAASA,KAErC,sBAAKtK,UAAWuO,EAAOR,UAAvB,UACE,uBACA,wBACExN,KAAK,SACLP,UAAU,oJACVQ,QAAS,kBAAMiO,KAHjB,6BAOA,cAACgB,GAAA,EAAD,CAAOvO,KAAMkM,EAAOsC,QAASjB,EAA7B,SACGW,OAGJhB,EACC,gCACE,yBACE7N,KAAK,SACLP,UAAU,+JAFZ,UAIG,IAJH,eAOA,wBACEO,KAAK,SACLP,UAAU,2JACVQ,QAAS,kBAAM6N,GAAWD,IAH5B,yBASF,wBACE7N,KAAK,SACLP,UAAU,oJACVQ,QAAS,kBAAM6N,GAAWD,IAH5B,kCCpQJuB,GAAoBtO,YAAH,8S,uCCGjBuO,GAAkBC,cAAO,SAACC,GAAD,OAAW,cAACC,GAAA,EAAD,eAAeD,MAAjCD,EAA4C,iBAAO,CACzEvC,gBAAiB,cAEb0C,GAAyBH,cAAO,SAACC,GAAD,OACpC,cAACG,GAAA,EAAD,eAAsBH,MADOD,EAE5B,iBAAO,CACRvC,gBAAiB,cAEb4C,GAAyBL,cAAO,SAACC,GAAD,OACpC,cAACK,GAAA,EAAD,eAAsBL,MADOD,EAE5B,iBAAO,CACRvC,gBAAiB,WCiCb8C,GAAuB,SAAC,GAA0C,IAAxCnO,EAAuC,EAAvCA,KAAMoO,EAAiC,EAAjCA,OAAiC,IAAzBhL,eAAyB,MAAf,aAAe,EACrE,OACE,eAACuK,GAAD,WACE,eAACI,GAAD,WACGK,EADH,KACapO,EAAKgD,OADlB,OAGA,cAACiL,GAAD,UACE,qBAAKlQ,UAAU,OAAf,SACGiC,GACCA,EAAKW,KAAI,SAAC0N,GACR,OACE,cAAC,GAAD,CAAaA,YAAaA,EAAajL,QAASA,eAS1DkL,GAAc,SAAC,GAA8B,IAA5BD,EAA2B,EAA3BA,YAAajL,EAAc,EAAdA,QAClC,EACEvD,YAAY8E,IADd,mBAAO4J,EAAP,YAA6BvO,EAA7B,EAA6BA,KAAME,EAAnC,EAAmCA,QAASiD,EAA5C,EAA4CA,MAE5C,EACEtD,YAAYgF,IADd,mBAAO2J,EAAP,YAAoCzO,EAApC,EAA8BC,KAA2ByO,EAAzD,EAAkDtL,MAGlDhD,qBAAU,WACJH,IACFqD,IAAMS,QAAQ,kCACdV,OAED,CAACpD,IAEJG,qBAAU,WACJgD,GACFE,IAAMF,MAAM,oCAEb,CAACA,IAEJhD,qBAAU,WACJJ,IACFsD,IAAMS,QAAQ,yBACdV,OAED,CAACrD,IAEJI,qBAAU,WACJsO,GACFpL,IAAMF,MAAM,qCAEb,CAACsL,IAEJ,IAAMC,EAA2B,SAACC,GACf,IAAbA,EACFJ,EAAmB,CACjBjK,UAAW,CACTsK,qBAAsBP,EAAY/M,OAItCkN,EAAoB,CAClBlK,UAAW,CACTuK,sBAAuBR,EAAY/M,QAM3C,OACE,sBAAKvD,UAAU,sEAAf,UACE,6CAAgBsQ,EAAYhN,SAASlD,UACrC,+BAAOkQ,EAAYtL,WAAW5E,SAC9B,+BAAOkQ,EAAYzM,SACK,cAAvByM,EAAYzM,QACX,cAAC,GAAD,CACErD,QAAS,WACPmQ,EAAyB,IAE3BzI,KAAK,yBACL/F,QAASA,EACT8F,UAAU,IAGU,cAAvBqI,EAAYzM,QACX,cAAC,GAAD,CACErD,QAAS,WACPmQ,EAAyB,IAE3BzI,KAAK,0BACL/F,QAASA,EACT8F,UAAU,QAOL8I,GAjIU,WACvB,MAAmC5L,aAASwK,IAApC1N,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASkD,EAAvB,EAAuBA,QAGvB,OADAjD,qBAAU,cAAU,CAACH,IACjBE,EAEA,cAAC,KAAD,CAAc5B,KAAK,QAAQgF,MAAM,UAAUC,OAAQ,IAAKC,MAAO,MAGjE,cAAC,GAAD,CAAc/F,SAAU,CAAC,gBAAiB,SAA1C,SACE,sBAAKM,UAAU,OAAf,UACE,0DACA,sBAAKA,UAAU,OAAf,UACE,cAAC,GAAD,CACEqQ,OAAO,0BACPpO,KAAMA,EAAK+O,cAAc3N,QAAO,SAAC0F,GAAD,MAAsB,aAAdA,EAAGlF,YAE7C,cAAC,GAAD,CACEwM,OAAO,2BACPpO,KAAMA,EAAK+O,cAAc3N,QAAO,SAAC0F,GAAD,MAAsB,cAAdA,EAAGlF,UAC3CwB,QAASA,IAEX,cAAC,GAAD,CACEgL,OAAO,2BACPpO,KAAMA,EAAK+O,cAAc3N,QAAO,SAAC0F,GAAD,MAAsB,cAAdA,EAAGlF,qBCvCjDoN,I,cAAe5P,YAAH,8ZAyBZ6P,GAAoB7P,YAAH,yMAOjB8P,GAAgB9P,YAAH,kMC6EJgH,GAlGC,WACd,IAAQ9E,EAAQyD,eAARzD,IACA3D,EAAaJ,IAAbI,SACR,EAKIuF,aAASnC,GAAc,CAAEuD,UAAW,CAAEhD,SAJlC6N,EADR,EACEnP,KACAmD,EAFF,EAEEA,MACAjD,EAHF,EAGEA,QACAkD,EAJF,EAIEA,QAEF,EAA2C8F,KAAnCE,EAAR,EAAQA,KAAME,EAAd,EAAcA,SAAUE,EAAxB,EAAwBA,eACxB,EAAyB3J,YAAY8D,IAA9B6B,EAAP,oBACA,EAGI3F,YAAYmP,IAHhB,mBACEI,EADF,YAEU3J,EAFV,EAEIzF,KAA6B0F,EAFjC,EAEwBxF,QAAiCyF,EAFzD,EAEkDxC,MAGlDhD,qBAAU,cAAU,CAACgP,IAErBhP,qBAAU,WACJgD,GACFE,IAAMF,MAAM,iCAEb,CAACA,IAoCJ,OAbAhD,qBAAU,WACJsF,IACFpC,IAAMS,QAAQ,6BACdV,OAED,CAACqC,IAEJtF,qBAAU,WACJwF,GACFtC,IAAMF,MAAM,mCAEb,CAACwC,IAEAzF,GAAWwF,EAEX,cAAC,KAAD,CAAcpH,KAAK,QAAQgF,MAAM,UAAUC,OAAQ,IAAKC,MAAO,MAIjE,sBAAKzF,UAAU,kCAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CAAMC,GAAE,qBAAgBsD,GAAxB,SACE,mBAAGvD,UAAU,0BAGjB,qBAAIA,UAAU,mCAAd,mCACyBoR,EAAQvJ,SAASzH,UAE1C,uBACEiG,SAlDa,SAACpC,GAClBA,EAAEqC,iBAEFiF,EAAS+F,UAAY1R,EAAS2D,IAC9BgI,EAASjI,SAAW8N,EAAQvJ,SAAStE,IAErC8N,EAAY,CACV9K,UAAWgF,IAEb9D,EAAe,CACblB,UAAW,CACThD,IAAK6N,EAAQvJ,SAAStE,IACtBG,MAAO0N,EAAQvJ,SAASnE,MAAMH,IAC9BnD,OAAQgR,EAAQvJ,SAASzH,OACzB+F,YAAaK,SAAS4K,EAAQvJ,SAAS1B,aACvCtC,OAAQuN,EAAQvJ,SAAShE,OACzBD,KAAM,iBAmCNI,SAAUyH,EACVhF,IAAK4E,EACLrL,UAAU,+JAJZ,UAME,cAAC,GAAD,CACEiL,KAAK,QACLD,MAAM,4BACNtE,UAAQ,EACRnG,KAAK,SAEP,cAAC,GAAD,CACE0K,KAAK,cACLD,MAAM,4BACNtE,UAAQ,EACRnG,KAAK,SAGP,cAAC,GAAD,CAAe2H,KAAK,eAAe/F,SAAS,EAAO8F,UAAU,WCnF/DsJ,IApBclQ,YAAH,6QAoBaA,YAAH,+TAoBrBmQ,GAAgBnQ,YAAH,glBC+FJoQ,GAhIG,WAChB,IAAQlO,EAAQyD,eAARzD,IACR,EAA0C4B,aAASoM,GAAuB,CACxEhL,UAAW,CAAEhD,SADPtB,EAAR,EAAQA,KAAMmD,EAAd,EAAcA,MAAOjD,EAArB,EAAqBA,QAASkD,EAA9B,EAA8BA,QAI9B,EAGIvD,YAAYoP,IAHhB,mBACEQ,EADF,YAEUhK,EAFV,EAEIzF,KAA6B0F,EAFjC,EAEwBxF,QAAiCyF,EAFzD,EAEkDxC,MA0BlD,GAvBAhD,qBAAU,WACJsF,GACFrC,MAED,CAACqC,IAEJtF,qBAAU,WACJwF,GACFtC,IAAMF,MAAM,+BAEb,CAACwC,IAGJxF,qBAAU,WACRiD,MACC,CAACpD,IAEJG,qBAAU,WACJgD,GACFE,IAAMF,MAAM,iCAEb,CAACA,IAEAjD,GAAWwF,EACb,OACE,cAAC,KAAD,CAAcpH,KAAK,QAAQgF,MAAM,UAAUC,OAAQ,IAAKC,MAAO,MAgBnE,OACE,gCACE,qBAAKzF,UAAU,kBAAf,SACE,cAAC,IAAD,CAAMC,GAAE,qBAAgBsD,GAAxB,SACE,mBAAGvD,UAAU,0BAGjB,qBAAIA,UAAU,yDAAd,kCACwBiC,EAAK0P,cAAc,GAAGrO,SAASlD,UAEvD,uBAEA,qBAAKJ,UAAU,MAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAImE,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,yBACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,2BACA,oBAAIA,MAAM,MAAV,2BAGJ,gCACGlC,EAAK0P,cAAc/O,KAAI,SAACH,GACvB,OACE,+BACE,6BAAKA,EAAKmP,MAAM5F,MAAM,KAAK,KAC3B,6BAAKvJ,EAAKK,cACV,6BAAKL,EAAK6O,UAAUlR,SACpB,6BACE,6BACGqC,EAAKoP,cAAcjP,KAAI,SAACkP,GACvB,OAAO,6BAAeA,GAANA,UAItB,cAAC,EAAD,CAAkBpS,SAAU,CAAC,SAA7B,SACE,+BACE,uBACEM,UAAU,gDACVO,KAAK,OACL0K,KAAI,aAAQxI,EAAKc,OAChB,IACH,uBACA,wBACEhD,KAAK,SACLP,UAAU,iFACVQ,QAAS,kBA7DR,SAACuR,GACtB,IAAMC,EAAcC,SAASC,kBAAT,aAAiCH,EAASxO,MAAO,GAClEO,MACCkO,GACFN,EAAa,CACXnL,UAAW,CACT4L,eAAgBJ,EAASxO,IACzBsO,cAAeG,KAsDcI,CAAe3P,IAHhC,sCASJ,cAAC,EAAD,CAAkB/C,SAAU,CAAC,cAA7B,SACE,6BACE,eAAC,IAAD,CAAMO,GAAE,sCAAiCwC,EAAKc,KAA9C,UACE,wBACEhD,KAAK,SACLP,UAAU,iFAFZ,oBAKU,aApCTyC,EAAKc,mBCSf8O,GArFU,WACvB,MAA2ClH,GAAY,MAA/CE,EAAR,EAAQA,KAAME,EAAd,EAAcA,SAAUE,EAAxB,EAAwBA,eAChBlI,EAAQyD,eAARzD,IACF+O,EAASC,EAAQ,KACvB,EAIIpN,aAASqM,GAAe,CAAEjL,UAAW,CAAE1F,GAAI0C,KAHvC4D,EADR,EACElF,KACOmF,EAFT,EAEEhC,MACSiC,EAHX,EAGElF,QAGF,EAGIL,YAAYqP,IAHhB,mBACEqB,EADF,YAEU9K,EAFV,EAEIzF,KAA6B0F,EAFjC,EAEwBxF,QAAiCyF,EAFzD,EAEkDxC,MA0BlD,OAhBAhD,qBAAU,WACJsF,GACFpC,IAAMS,QAAQ,qCAEf,CAAC2B,IAEJtF,qBAAU,WACJwF,GACFtC,IAAMF,MAAM,+BAGVgC,GACF9B,IAAMF,MAAM,iCAEb,CAACgC,EAAYQ,IAEZP,EAEA,cAAC,KAAD,CAAc9G,KAAK,QAAQgF,MAAM,UAAUC,OAAQ,IAAKC,MAAO,MAIjE,sBAAKzF,UAAU,kCAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CAAMC,GAAE,qBAAgBkH,EAAUsL,eAAe,GAAGnP,SAASC,KAA7D,SACE,mBAAGvD,UAAU,0BAGjB,qBAAIA,UAAU,mCAAd,iCACuBmH,EAAUsL,eAAe,GAAGnP,SAASlD,UAE5D,uBACEiG,SAvCa,SAACpC,GAClBA,EAAEqC,iBACFkM,EAAa,CACXjM,UAAU,aAAGmM,eAAgBnP,GAAQgI,MAqCnCvH,SAAUyH,EACVhF,IAAK4E,EACLrL,UAAU,+JAJZ,UAME,cAAC,GAAD,CACEiL,KAAK,QACLD,MAAM,4BACNtE,UAAQ,EACRnG,KAAK,OACLuH,aAAcwK,EAAOnL,EAAUsL,eAAe,GAAGb,OAAOe,OACtD,gBAGJ,cAAC,GAAD,CACE1H,KAAK,cACLD,MAAM,4BACNtE,UAAQ,EACRnG,KAAK,OACLuH,aAAcX,EAAUsL,eAAe,GAAG3P,cAE5C,cAAC,GAAD,CACEmF,SAA2C,IAAjCmE,OAAOC,KAAKd,GAAUtG,OAChC9C,QAASwF,EACTO,KAAK,qBC1EA0K,GAZI,WACjB,OACE,qBAAK5S,UAAU,kDAAf,SACE,qBAAKA,UAAU,qBAAf,SACE,qBAAKA,UAAU,mCAAf,SACE,cAAC,KAAD,W,qBCyFK6S,GAtFE,WACf,IAAMnR,EAAWC,eACjB,EAA2CwJ,KAAnCE,EAAR,EAAQA,KAAME,EAAd,EAAcA,SAAUE,EAAxB,EAAwBA,eACxB,EAAkCxK,mBAAS,MAA3C,mBAAOiN,EAAP,KAAgBC,EAAhB,KACA,EAAmBrM,YAAYV,GAAxBsJ,EAAP,oBAEMoI,EAAU,yCAAG,WAAO7O,GAAP,UAAA8K,EAAA,sDACjB9K,EAAEqC,iBAEF,IACEoE,EAAS,CAAEnE,UAAWgF,IAEtBwH,KAAKC,KACH,SACA,iGACA,WAEFtR,EAAS,eACT,MAAO0D,GACP+I,EAAe/I,EAAM6J,QAAQC,QAAQ,kBAAmB,KAExDC,YAAW,WACThB,EAAe,QACd,KAjBY,2CAAH,sDAsChB,OACE,sBAAKnO,UAAU,0DAAf,UACGkO,GAjBD,qBAAKlO,UAAU,gGAAf,SACE,4BAAIkO,MAiBN,oBAAIlO,UAAU,0BAAd,2BACA,uBACEA,UAAU,uFACVqG,SAAUyM,EACV9O,SAAUyH,EACVhF,IAAK4E,EAJP,UAME,sBAAKrL,UAAU,yBAAf,UACE,cAAC,GAAD,CAAOgL,MAAM,UAAUC,KAAK,SAAS1K,KAAK,OAAOmG,UAAQ,IACzD,cAAC,GAAD,CAAOsE,MAAM,YAAYC,KAAK,WAAW1K,KAAK,OAAOmG,UAAQ,IAC7D,cAAC,GAAD,CACEsE,MAAM,aACNC,KAAK,iBACL1K,KAAK,OACLmG,UAAQ,IAEV,cAAC,GAAD,CACEsE,MAAM,eACNC,KAAK,MACLvE,UAAQ,EACR8F,QAASlD,KAEX,cAAC,GAAD,CAAO0B,MAAM,UAAUC,KAAK,SAAS1K,KAAK,QAAQmG,UAAQ,IAC1D,cAAC,GAAD,CAAOsE,MAAM,iBAAcC,KAAK,WAAW1K,KAAK,WAAWmG,UAAQ,OAErE,cAAC,GAAD,CACEuB,SAA2C,IAAjCmE,OAAOC,KAAKd,GAAUtG,OAChC9C,SAAS,EACT+F,KAAK,mBAGT,6DACA,cAAC,IAAD,CAAMjI,GAAG,cAAT,SACE,sBAAMD,UAAU,gBAAhB,oCCFOiT,GAhFD,WACZ,IAAMvR,EAAWC,eACTrB,EAAajB,IAAbiB,SACR,EAA2C6K,KAAnCE,EAAR,EAAQA,KAAME,EAAd,EAAcA,SAAUE,EAAxB,EAAwBA,eACxB,EAAkCxK,mBAAS,MAA3C,mBAAOiN,EAAP,KAAgBC,EAAhB,KACA,EAA8CrM,YAAYP,GAA1D,mBAAO2R,EAAP,KAAyBvL,EAAzB,KAAgBxF,QAEV2Q,EAAU,yCAAG,WAAO7O,GAAP,kBAAA8K,EAAA,6DACjB9K,EAAEqC,iBADe,kBAGQ4M,EAAM,CAC3B3M,UAAWgF,IAJE,gBAGPtJ,EAHO,EAGPA,KAGR3B,EAAS2B,EAAKiR,MAAM7Q,OACpB8L,EAAe,MACfzM,EAAS,KARM,kDAUfyM,EAAe,KAAMc,QAAQC,QAAQ,kBAAmB,KACxDC,YAAW,WACThB,EAAe,QACd,KAbY,0DAAH,sDA+ChB,OACE,sBAAKnO,UAAU,+DAAf,UACGkO,GA9BD,qBAAKlO,UAAU,gGAAf,SACE,4BAAIkO,MA8BN,oBAAIlO,UAAU,kCAAd,+BACA,uBACEA,UAAU,wJACVqG,SAAUyM,EACV9O,SAAUyH,EACVhF,IAAK4E,EAJP,UAME,cAAC,GAAD,CAAOJ,KAAK,SAAS1K,KAAK,QAAQyK,MAAM,SAAStE,UAAQ,IACzD,cAAC,GAAD,CAAOuE,KAAK,WAAW1K,KAAK,WAAWyK,MAAM,gBAAatE,UAAQ,IAClE,cAAC,GAAD,CACEuB,SAA2C,IAAjCmE,OAAOC,KAAKd,GAAUtG,OAChC9C,QAASwF,EACTO,KAAK,yBAGT,6DACA,cAAC,IAAD,CAAMjI,GAAG,iBAAT,SACE,sBAAMD,UAAU,gBAAhB,iC,oBC/CFmT,GAAWC,aAAe,CAC9BC,IAAK,iDAIDC,GAAWC,cAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAE1BpR,EAAQqR,KAAKC,MAAMC,aAAaC,QAAQ,UAE9C,MAAO,CACLJ,QAAQ,2BACHA,GADE,IAELK,cAAezR,EAAK,iBAAaA,GAAU,SAK3C0R,GAAS,IAAIC,KAAa,CAC9BC,KAAMX,GAASY,OAAOf,IACtBgB,MAAO,IAAIC,OA+EEC,OA5Ef,WACE,MAAgCpT,mBAAS,IAAzC,mBAAOrB,EAAP,KAAiB0U,EAAjB,KACA,EAAkCrT,mBAAS,IAA3C,mBAAOsT,EAAP,KAAkBC,EAAlB,KAwBA,OAdApS,qBAAU,WACR,GAAImS,EAAW,CACb,IAAME,EAAUC,aAAWH,GAC3BD,EAAY,CACV/Q,IAAKkR,EAAQlR,IACbnD,OAAQqU,EAAQrU,OAChBuD,SAAU8Q,EAAQ9Q,SAClB0G,eAAgBoK,EAAQpK,eACxBC,OAAQmK,EAAQnK,OAChBxK,IAAK2U,EAAQ3U,SAGhB,CAACyU,IAGF,cAACI,GAAA,EAAD,CAAgBZ,OAAQA,GAAxB,SACE,cAAC5U,EAAYyV,SAAb,CAAsB9Q,MAAO,CAAEyQ,YAAWC,eAAclU,SAxB3C,SAAC+B,GAChBmS,EAAanS,GACTA,EACFuR,aAAaiB,QAAQ,QAASnB,KAAKoB,UAAUzS,IAE7CuR,aAAamB,WAAW,WAmBxB,SACE,cAACxV,EAAYqV,SAAb,CAAsB9Q,MAAO,CAAElE,WAAU0U,eAAzC,SACE,cAAC,IAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAOU,KAAK,YAAYC,QAAS,cAAC,GAAD,MACjC,eAAC,KAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,GAAD,IAAzB,UACE,cAAC,KAAD,CAAOD,KAAK,GAAGC,QAAS,cAAC,GAAD,MACxB,cAAC,KAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,GAAD,MACjC,cAAC,KAAD,CAAOD,KAAK,iBAAiBC,QAAS,cAAC,GAAD,MACtC,cAAC,KAAD,CACED,KAAK,0BACLC,QAAS,cAAC,GAAD,MAEX,cAAC,KAAD,CACED,KAAK,gCACLC,QAAS,cAAC,GAAD,MAEX,cAAC,KAAD,CAAOD,KAAK,eAAeC,QAAS,cAAC,GAAD,MACpC,cAAC,KAAD,CAAOD,KAAK,iBAAiBC,QAAS,cAAC,GAAD,MACtC,cAAC,KAAD,CACED,KAAK,kCACLC,QAAS,cAAC,GAAD,MAEX,cAAC,KAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,GAAD,MAChC,cAAC,KAAD,CAAOD,KAAK,wBAAwBC,QAAS,cAAC,GAAD,MAC7C,cAAC,KAAD,CACED,KAAK,+BACLC,QAAS,cAAC,GAAD,MAEX,cAAC,KAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAACjE,GAAD,MACrC,cAAC,KAAD,CACEgE,KAAK,+BACLC,QAAS,cAACjE,GAAD,MAEX,cAAC,KAAD,CAAOgE,KAAK,SAASC,QAAS,cAAC,GAAD,SAEhC,eAAC,KAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,GAAD,IAA7B,UACE,cAAC,KAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,GAAD,MAChC,cAAC,KAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,GAAD,qBChH9BC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB5K,MAAK,YAAkD,IAA/C6K,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF3D,SAAS4D,eAAe,SAM1BX,O","file":"static/js/main.5e1fea8e.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\r\n\r\nexport const AuthContext = createContext(null);\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n","import { createContext, useContext } from 'react';\r\n\r\nexport const UserContext = createContext(null);\r\n\r\nexport const useUser = () => {\r\n  return useContext(UserContext);\r\n};\r\n","import { useUser } from 'context/userContext';\r\nimport React from 'react';\r\n\r\nconst PrivateComponent = ({ roleList, children }) => {\r\n  const { userData } = useUser();\r\n\r\n  if (roleList.includes(userData.rol)) {\r\n    return children;\r\n  }\r\n\r\n  return <div data-testid='not-authorized' />;\r\n};\r\n\r\nexport default PrivateComponent;\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useAuth } from 'context/authContext';\r\nimport { useUser } from 'context/userContext';\r\nimport PrivateComponent from 'components/PrivateComponent';\r\n\r\nconst SidebarLinks = () => {\r\n  const { userData } = useUser();\r\n  return (\r\n    <ul className='mt-12'>\r\n      <SidebarRoute to='' title='Home' icon='fas fa-home' />\r\n      <SidebarRoute\r\n        to='/Proyectos'\r\n        title='Gestión Proyectos'\r\n        icon='fas fa-project-diagram'\r\n      />\r\n      <PrivateComponent roleList={['ADMINISTRADOR']}>\r\n        <SidebarRoute\r\n          to='/Usuarios'\r\n          title='Gestión Usuarios'\r\n          icon='fas fa-users'\r\n        />\r\n      </PrivateComponent>\r\n\r\n      <PrivateComponent roleList={['LIDER']}>\r\n        <SidebarRoute\r\n          to='/usuarios/Estudiantes'\r\n          title='Gestión Usuarios'\r\n          icon='fas fa-users'\r\n        />\r\n      </PrivateComponent>\r\n\r\n      <PrivateComponent roleList={['LIDER']}>\r\n        <SidebarRoute\r\n          to='/Inscripciones'\r\n          title='Gestión Inscripciones'\r\n          icon='far fa-edit'\r\n        />\r\n      </PrivateComponent>\r\n      <PrivateComponent roleList={['ESTUDIANTE']}>\r\n        <SidebarRoute\r\n          to='/Perfil'\r\n          title='Editar Perfil'\r\n          icon='fas fa-user-cog'\r\n        />\r\n      </PrivateComponent>\r\n      <Logout />\r\n      <div className=' border-4'>\r\n        <li className='text-center mx-auto text-blue-500 font-bold text-lg'>\r\n          {userData.nombre}\r\n        </li>\r\n        <li className='text-center mx-auto text-blue-500 font-bold text-lg'>\r\n          {userData.rol}\r\n        </li>\r\n      </div>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst Logout = () => {\r\n  const { setToken } = useAuth();\r\n  const deleteToken = () => {\r\n    setToken(null);\r\n  };\r\n  return (\r\n    <li>\r\n      <button type='button' onClick={() => deleteToken()}>\r\n        <NavLink to='/auth/login' className='sidebar-route text-blue-500'>\r\n          <div className='flex items-center'>\r\n            <i className='fas fa-sign-out-alt' />\r\n            <span className='text-sm  ml-2'>Cerrar Sesión</span>\r\n          </div>\r\n        </NavLink>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className='py-3 w-full flex flex-col items-center justify-center'>\r\n      <img src='logo.png' alt='Logo' className='h-40' />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Sidebar = () => {\r\n  const [open, setOpen] = useState(true);\r\n  return (\r\n    <div className='flex flex-col md:flex-row flex-no-wrap md:h-full'>\r\n      {/* Sidebar starts */}\r\n\r\n      <div className='sidebar hidden md:flex'>\r\n        <div className='px-8'>\r\n          <Logo />\r\n          <SidebarLinks />\r\n        </div>\r\n      </div>\r\n      <div className='flex md:hidden w-full justify-between bg-gray-800 p-2 text-white'>\r\n        <button type='button' onClick={() => setOpen(!open)}>\r\n          <i className={`fas fa-${open ? 'times' : 'bars'}`} />\r\n        </button>\r\n        <i className='fas fa-home' />\r\n      </div>\r\n      {open && <ResponsiveSidebar />}\r\n      {/* Sidebar ends */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ResponsiveSidebar = () => {\r\n  return (\r\n    <div>\r\n      <div\r\n        className='sidebar h-full z-40 absolute md:h-full sm:hidden transition duration-150 ease-in-out'\r\n        id='mobile-nav'\r\n      >\r\n        <div className='px-8'>\r\n          <Logo />\r\n          <SidebarLinks />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SidebarRoute = ({ to, title, icon }) => {\r\n  return (\r\n    <li>\r\n      <NavLink\r\n        to={to}\r\n        className={({ isActive }) =>\r\n          isActive\r\n            ? 'sidebar-route text-white bg-indigo-700'\r\n            : 'sidebar-route text-gray-900 hover:text-white hover:bg-indigo-400'\r\n        }\r\n      >\r\n        <div className='flex items-center'>\r\n          <i className={icon} />\r\n          <span className='text-sm  ml-2'>{title}</span>\r\n        </div>\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { gql } from '@apollo/client';\r\n\r\nconst REGISTRO = gql`\r\n  mutation Register(\r\n    $nombre: String!\r\n    $apellido: String!\r\n    $identificacion: String!\r\n    $correo: String!\r\n    $rol: Enum_Rol!\r\n    $password: String!\r\n  ) {\r\n    register(\r\n      nombre: $nombre\r\n      apellido: $apellido\r\n      identificacion: $identificacion\r\n      correo: $correo\r\n      rol: $rol\r\n      password: $password\r\n    ) {\r\n      token\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nconst CAMBIAR_CLAVE = gql`\r\n  mutation CambiarClave($correo: String, $password: String, $clave: String) {\r\n    cambiarClave(correo: $correo, password: $password, clave: $clave)\r\n  }\r\n`;\r\n\r\nconst LOGIN = gql`\r\n  mutation Login($correo: String!, $password: String!) {\r\n    login(correo: $correo, password: $password) {\r\n      token\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nconst REFRESH_TOKEN = gql`\r\n  mutation RefreshToken {\r\n    refreshToken {\r\n      token\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport { REGISTRO, LOGIN, REFRESH_TOKEN, CAMBIAR_CLAVE };\r\n","import Sidebar from 'components/Sidebar';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useMutation } from '@apollo/client';\r\nimport { REFRESH_TOKEN } from 'graphql/auth/mutations';\r\nimport { useNavigate, Outlet } from 'react-router-dom';\r\nimport { useAuth } from 'context/authContext';\r\n\r\nconst PrivateLayout = () => {\r\n  const navigate = useNavigate();\r\n  const { setToken } = useAuth();\r\n  const [loadingAuth, setLoadingAuth] = useState(true);\r\n  const [refreshToken, { data: dataMutation, loading: loadingMutation }] =\r\n    useMutation(REFRESH_TOKEN);\r\n  useEffect(() => {\r\n    refreshToken();\r\n  }, [refreshToken]);\r\n\r\n  useEffect(() => {\r\n    if (dataMutation) {\r\n      if (dataMutation.refreshToken.token) {\r\n        setToken(dataMutation.refreshToken.token);\r\n      } else {\r\n        setToken(null);\r\n        navigate('/auth/login');\r\n      }\r\n      setLoadingAuth(false);\r\n    }\r\n  }, [dataMutation, setToken, loadingAuth, navigate]);\r\n\r\n  if (loadingMutation || loadingAuth) return <div>Loading...</div>;\r\n  return (\r\n    <div className='flex flex-col md:flex-row flex-no-wrap h-screen'>\r\n      <Sidebar />\r\n      <div className='flex w-full h-full'>\r\n        <div className='w-full h-full  overflow-y-scroll'>\r\n          <Outlet />\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateLayout;\r\n","import React from 'react';\r\n\r\nconst Index = () => {\r\n  return (\r\n    <div className='container bg-violet-500 h-full bg-opacity-50'>\r\n      <img\r\n        src='main-background.jpg'\r\n        alt='Logo'\r\n        className='w-full h-full opacity-60'\r\n      />\r\n      <div static bg-white-500>\r\n        Welcome\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","const Objetivos = ({ item, tipo, className }) => {\r\n  const ObjetivosCopy = item.objetivos.map((objetivo) => {\r\n    if (objetivo.tipo === tipo) {\r\n      return (\r\n        <>\r\n          <li className={className}>{objetivo.descripcion}</li>\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n  return ObjetivosCopy;\r\n};\r\n\r\nexport default Objetivos;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const GET_PROYECTOS = gql`\r\n  query Proyectos {\r\n    Proyectos {\r\n      _id\r\n      nombre\r\n      presupuesto\r\n      estado\r\n      fase\r\n      lider {\r\n        _id\r\n        nombre\r\n        apellido\r\n      }\r\n      objetivos {\r\n        descripcion\r\n        tipo\r\n      }\r\n      registros {\r\n        estado\r\n        estudiante {\r\n          _id\r\n          nombre\r\n          apellido\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PROYECTO = gql`\r\n  query Proyecto($_id: String!) {\r\n    Proyecto(_id: $_id) {\r\n      _id\r\n      nombre\r\n      presupuesto\r\n      fechaInicio\r\n      fechaFin\r\n      estado\r\n      fase\r\n      lider {\r\n        _id\r\n        nombre\r\n        apellido\r\n      }\r\n      objetivos {\r\n        descripcion\r\n        tipo\r\n      }\r\n      avances {\r\n        descripcion\r\n        fecha\r\n        observaciones\r\n      }\r\n      registros {\r\n        estado\r\n        estudiante {\r\n          _id\r\n          nombre\r\n          apellido\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { toast } from 'react-toastify';\r\nimport { useState, useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport Objetivos from 'components/Objetivos';\r\nimport ReactLoading from 'react-loading';\r\nimport { useUser } from 'context/userContext';\r\nimport PrivateComponent from 'components/PrivateComponent';\r\nimport { GET_PROYECTOS } from 'graphql/proyectos/queries';\r\n\r\nconst Proyectos = () => {\r\n  const { data, error, loading, refetch } = useQuery(GET_PROYECTOS);\r\n  const { userData } = useUser();\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error('Error consultando los Proyectos');\r\n      return `Error obteniendo los Proyectos ${error}`;\r\n    }\r\n  }, [error]);\r\n  if (loading)\r\n    return (\r\n      <ReactLoading type='cylon' color='#4c2882' height={667} width={365} />\r\n    );\r\n  if (data) {\r\n    refetch();\r\n    return (\r\n      <>\r\n        <PrivateComponent roleList='ADMINISTRADOR'>\r\n          <div className='w-full'>\r\n            <div className='my-6 font-sans text-4xl text-center font-bold'>\r\n              <h1 className='text-3xl font-extrabold text-gray-900 my-3 text-center'>\r\n                PROYECTOS\r\n              </h1>\r\n            </div>\r\n            <Administrador data={data.Proyectos} Usuario={userData} />\r\n          </div>\r\n        </PrivateComponent>\r\n\r\n        <PrivateComponent roleList='LIDER'>\r\n          <div className='w-full'>\r\n            <div className='my-6 font-sans text-4xl text-center font-bold'>\r\n              <h1 className='text-3xl font-extrabold text-gray-900 my-3 text-center'>\r\n                PROYECTOS LIDERADOS\r\n              </h1>\r\n            </div>\r\n            <Lider data={data.Proyectos} Usuario={userData} />\r\n          </div>\r\n        </PrivateComponent>\r\n\r\n        <PrivateComponent roleList='ESTUDIANTE'>\r\n          <div className='w-full'>\r\n            <div className='my-6 font-sans text-4xl text-center font-bold'>\r\n              <h1 className='text-3xl font-extrabold text-gray-900 my-3 text-center'>\r\n                PROYECTOS\r\n              </h1>\r\n            </div>\r\n            <Estudiante data={data.Proyectos} Usuario={userData} />\r\n          </div>\r\n        </PrivateComponent>\r\n      </>\r\n    );\r\n  }\r\n  return 'REVISAR BACKEND O BASE DE DATOS';\r\n};\r\n\r\nconst Administrador = ({ data }) => {\r\n  const [busqueda, setBusqueda] = useState('');\r\n  const bChange = (e) => {\r\n    setBusqueda(e.target.value);\r\n  };\r\n  const datos = data\r\n    .filter((proyecto) => {\r\n      if (\r\n        proyecto._id\r\n          .toString()\r\n          .toLowerCase()\r\n          .includes(busqueda.toLowerCase()) ||\r\n        proyecto.nombre.toLowerCase().includes(busqueda.toLowerCase()) ||\r\n        proyecto.lider._id.toLowerCase().includes(busqueda.toLowerCase()) ||\r\n        proyecto.lider.nombre.toLowerCase().includes(busqueda.toLowerCase()) ||\r\n        proyecto.lider.apellido\r\n          .toLowerCase()\r\n          .includes(busqueda.toLowerCase()) ||\r\n        proyecto.fase.toLowerCase().includes(busqueda.toLowerCase()) ||\r\n        proyecto.estado.toLowerCase().includes(busqueda.toLowerCase())\r\n      ) {\r\n        return proyecto;\r\n      }\r\n      return null;\r\n    })\r\n    .map((item) => {\r\n      return (\r\n        <>\r\n          <tr>\r\n            <td key={item._id} className='text-center'>\r\n              {' '}\r\n              {item._id}\r\n            </td>\r\n            <td> {item.nombre}</td>\r\n            <td>\r\n              {' '}\r\n              {item.lider.nombre} {item.lider.apellido}\r\n            </td>\r\n            <td> {item.fase}</td>\r\n            <td>\r\n              {' '}\r\n              <Objetivos item={item} tipo='GENERAL' className='list-none' />\r\n            </td>\r\n            <td>\r\n              <Link\r\n                to={`/Proyectos/${item._id}`}\r\n                className='block bg-blue-400 hover:bg-blue-600 rounded-full px-2 text-white h-6 mb-1'\r\n              >\r\n                Ver mas\r\n              </Link>\r\n              {item.fase === 'TERMINADO' ? null : (\r\n                <Link\r\n                  to={`/Proyectos/EditarProyecto/${item._id}`}\r\n                  className='block bg-green-400 hover:bg-green-600 rounded-full px-2 text-white h-6'\r\n                >\r\n                  Gestionar\r\n                </Link>\r\n              )}\r\n            </td>\r\n          </tr>\r\n        </>\r\n      );\r\n    });\r\n  return (\r\n    <>\r\n      <div className='pl-4 mb-5'>\r\n        <label className='font-bold'>BUSCAR: </label>\r\n        <input\r\n          className='appearance-none rounded-none w-72 px-3 py-2 border-2 border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\r\n          value={busqueda}\r\n          placeholder='Búsqueda por cualquier campo'\r\n          onChange={bChange}\r\n        />\r\n      </div>\r\n      <table className='tabla'>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col'>ID</th>\r\n            <th scope='col'>Nombre del Proyecto</th>\r\n            <th scope='col'>Lider</th>\r\n            <th scope='col'>Fase</th>\r\n            <th scope='col'>Objetivos</th>\r\n            <th scope='col'>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{datos}</tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Lider = ({ data, Usuario }) => {\r\n  const [busqueda, setBusqueda] = useState('');\r\n  const [activo, isActivo] = useState(false);\r\n  const bChange = (e) => {\r\n    setBusqueda(e.target.value);\r\n  };\r\n  const datos = data\r\n    .filter((proyecto) => {\r\n      if (\r\n        proyecto._id\r\n          .toString()\r\n          .toLowerCase()\r\n          .includes(busqueda.toLowerCase()) ||\r\n        proyecto.nombre.toLowerCase().includes(busqueda.toLowerCase()) ||\r\n        proyecto.lider.nombre.toLowerCase().includes(busqueda.toLowerCase()) ||\r\n        proyecto.lider.apellido.toLowerCase().includes(busqueda.toLowerCase())\r\n      ) {\r\n        return proyecto;\r\n      }\r\n    })\r\n    .map((item) => {\r\n      const Gestionar = () => {\r\n        if (item.estado === 'ACTIVO') {\r\n          return (\r\n            <>\r\n              <Link\r\n                to={`/Proyectos/EditarProyecto/${item._id}`}\r\n                className='block px-2 bg-green-400 hover:bg-green-600 rounded-full text-white h-6'\r\n              >\r\n                Gestionar\r\n              </Link>\r\n            </>\r\n          );\r\n        }\r\n        return null;\r\n      };\r\n      if (item.lider._id === Usuario._id) {\r\n        if (activo === true && item.estado === 'ACTIVO') {\r\n          return (\r\n            <>\r\n              <tr>\r\n                <td key={item.id} className='text-center'>\r\n                  {' '}\r\n                  {item._id}\r\n                </td>\r\n                <td> {item.nombre}</td>\r\n                <td>\r\n                  {' '}\r\n                  {item.lider.nombre} {item.lider.apellido}\r\n                </td>\r\n                <td> {item.fase}</td>\r\n                <td>\r\n                  {' '}\r\n                  <Objetivos item={item} tipo='GENERAL' className='list-none' />\r\n                </td>\r\n                <td>\r\n                  <Link\r\n                    to={`/Proyectos/${item._id}`}\r\n                    className='block bg-blue-400 px-2 hover:bg-blue-600 rounded-full text-white h-6 mb-1'\r\n                  >\r\n                    Ver mas\r\n                  </Link>\r\n                  <Gestionar item={item} />\r\n                </td>\r\n              </tr>\r\n            </>\r\n          );\r\n        }\r\n        if (activo === false) {\r\n          return (\r\n            <>\r\n              <tr>\r\n                <td key={item.id} className='text-center'>\r\n                  {' '}\r\n                  {item._id}\r\n                </td>\r\n                <td> {item.nombre}</td>\r\n                <td>\r\n                  {' '}\r\n                  {item.lider.nombre} {item.lider.apellido}\r\n                </td>\r\n                <td> {item.fase}</td>\r\n                <td>\r\n                  {' '}\r\n                  <Objetivos item={item} tipo='GENERAL' className='list-none' />\r\n                </td>\r\n                <td>\r\n                  <Link\r\n                    to={`/Proyectos/${item._id}`}\r\n                    className='block bg-blue-400 px-2 hover:bg-blue-600 rounded-full text-white h-6 mb-1'\r\n                  >\r\n                    Ver mas\r\n                  </Link>\r\n                  <Gestionar item={item} />\r\n                </td>\r\n              </tr>\r\n            </>\r\n          );\r\n        }\r\n        return null;\r\n      }\r\n    });\r\n  return (\r\n    <>\r\n      <div className='pl-4 mb-5'>\r\n        <label className='font-bold'>BUSCAR: </label>\r\n        <input\r\n          className='appearance-none rounded-none w-72 px-3 py-2 border-2 border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\r\n          value={busqueda}\r\n          placeholder='Búsqueda por Identificación o Nombre'\r\n          onChange={bChange}\r\n        />\r\n        <Link\r\n          to='/Proyectos/NuevoProyecto'\r\n          className='bg-indigo-700 text-white font-bold text-lg py-3 px-6 relative top-3 left-1/4 rounded-xl hover:bg-indigo-500 shadow-md'\r\n        >\r\n          Crear Proyecto\r\n        </Link>\r\n        <div>\r\n          <input\r\n            type='checkbox'\r\n            className='mx-2'\r\n            id='active'\r\n            onClick={() => isActivo(!activo)}\r\n          />\r\n          <label htmlFor='active' className='text-base'>\r\n            Solo proyectos activos\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <table className='tabla'>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col'>ID</th>\r\n            <th scope='col'>Nombre del Proyecto</th>\r\n            <th scope='col'>Lider</th>\r\n            <th scope='col'>Fase</th>\r\n            <th scope='col'>Objetivos</th>\r\n            <th scope='col'>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{datos}</tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Estudiante = ({ data, Usuario }) => {\r\n  const [busqueda, setBusqueda] = useState('');\r\n  const [registrado, isRegistrado] = useState(false);\r\n  const bChange = (e) => {\r\n    setBusqueda(e.target.value);\r\n  };\r\n  const datos = data\r\n    .filter((proyecto) => {\r\n      if (\r\n        proyecto._id\r\n          .toString()\r\n          .toLowerCase()\r\n          .includes(busqueda.toLowerCase()) ||\r\n        proyecto.nombre.toLowerCase().includes(busqueda.toLowerCase()) ||\r\n        proyecto.lider.nombre.toLowerCase().includes(busqueda.toLowerCase()) ||\r\n        proyecto.lider.apellido.toLowerCase().includes(busqueda.toLowerCase())\r\n      ) {\r\n        return proyecto;\r\n      }\r\n    })\r\n    .map((item) => {\r\n      const filtro = item.registros.filter(\r\n        (registro) =>\r\n          registro.estudiante._id === Usuario._id &&\r\n          registro.estado === 'ACEPTADA'\r\n      );\r\n      if (registrado && item.estado === 'ACTIVO') {\r\n        if (filtro.length !== 0) {\r\n          return (\r\n            <>\r\n              <tr>\r\n                <td>{item._id}</td>\r\n                <td>{item.nombre}</td>\r\n                <td>\r\n                  {item.lider.nombre} {item.lider.apellido}\r\n                </td>\r\n                <td>{item.fase}</td>\r\n                <td>\r\n                  <Objetivos item={item} tipo='GENERAL' className='list-none' />\r\n                </td>\r\n                <td>\r\n                  <Link\r\n                    to={`/Proyectos/${item._id}`}\r\n                    className='block px-2 bg-blue-400 hover:bg-blue-600 rounded-full text-white h-6 mb-1'\r\n                  >\r\n                    Ver mas\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            </>\r\n          );\r\n        }\r\n        return null;\r\n      }\r\n      if (item.estado === 'ACTIVO') {\r\n        return (\r\n          <>\r\n            <tr>\r\n              <td>{item._id}</td>\r\n              <td>{item.nombre}</td>\r\n              <td>\r\n                {item.lider.nombre} {item.lider.apellido}\r\n              </td>\r\n              <td>{item.fase}</td>\r\n              <td>\r\n                <Objetivos item={item} tipo='GENERAL' className='list-none' />\r\n              </td>\r\n              <td>\r\n                <Link\r\n                  to={`/Proyectos/${item._id}`}\r\n                  className='block px-2 bg-blue-400 hover:bg-blue-600 rounded-full text-white h-6 mb-1'\r\n                >\r\n                  Ver mas\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n          </>\r\n        );\r\n      }\r\n    });\r\n  return (\r\n    <>\r\n      <div className='pl-4 mb-5'>\r\n        <label className='font-bold'>BUSCAR: </label>\r\n        <input\r\n          className='appearance-none rounded-none w-72 px-3 py-2 border-2 border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\r\n          value={busqueda}\r\n          placeholder='Búsqueda por Identificación o Nombre'\r\n          onChange={bChange}\r\n        />\r\n        <div>\r\n          <input\r\n            type='checkbox'\r\n            className='mx-2'\r\n            id='active'\r\n            onClick={() => isRegistrado(!registrado)}\r\n          />\r\n          <label htmlFor='active' className='text-base'>\r\n            Proyectos en curso{' '}\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <table className='tabla'>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col'>ID</th>\r\n            <th scope='col'>Nombre del Proyecto</th>\r\n            <th scope='col'>Lider</th>\r\n            <th scope='col'>Fase</th>\r\n            <th scope='col'>Objetivos</th>\r\n            <th scope='col'>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{datos}</tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Proyectos;\r\n","import { useUser } from 'context/userContext';\r\nimport React from 'react';\r\n\r\nconst PrivateRoute = ({ roleList, children }) => {\r\n  const { userData } = useUser();\r\n\r\n  if (roleList.includes(userData.rol)) {\r\n    return children;\r\n  }\r\n\r\n  return (\r\n    <div data-testid='not-authorized' className='text-9xl text-red-500 '>\r\n      No estás autorizado para ver este sitio.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const NUEVO_PROYECTO = gql`\r\n  mutation crearProyecto(\r\n    $nombre: String!\r\n    $presupuesto: Float!\r\n    $fechaInicio: Date\r\n    $fechaFin: Date\r\n    $lider: String!\r\n    $objetivos: [crearObjetivo]\r\n  ) {\r\n    crearProyecto(\r\n      nombre: $nombre\r\n      presupuesto: $presupuesto\r\n      fechaInicio: $fechaInicio\r\n      fechaFin: $fechaFin\r\n      lider: $lider\r\n      objetivos: $objetivos\r\n    ) {\r\n      nombre\r\n      presupuesto\r\n      fechaInicio\r\n      fechaFin\r\n      lider {\r\n        _id\r\n      }\r\n      objetivos {\r\n        descripcion\r\n        tipo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const EDITAR_PROYECTO = gql`\r\n  mutation editarProyecto(\r\n    $_id: String!\r\n    $nombre: String!\r\n    $presupuesto: Float!\r\n    $fechaInicio: Date\r\n    $fechaFin: Date\r\n    $estado: Enum_EstadoProyecto!\r\n    $fase: Enum_FaseProyecto!\r\n    $lider: String!\r\n    $objetivos: [crearObjetivo]\r\n  ) {\r\n    editarProyecto(\r\n      _id: $_id\r\n      nombre: $nombre\r\n      presupuesto: $presupuesto\r\n      estado: $estado\r\n      fechaInicio: $fechaInicio\r\n      fechaFin: $fechaFin\r\n      fase: $fase\r\n      lider: $lider\r\n      objetivos: $objetivos\r\n    ) {\r\n      _id\r\n      nombre\r\n      presupuesto\r\n      estado\r\n      fase\r\n      lider {\r\n        _id\r\n      }\r\n      objetivos {\r\n        descripcion\r\n        tipo\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport PrivateRoute from 'components/PrivateRoute';\r\nimport { useUser } from 'context/userContext';\r\nimport { NUEVO_PROYECTO } from 'graphql/proyectos/mutations';\r\n\r\nconst NuevoProyecto = () => {\r\n  const [crearProyecto, { error, reset }] = useMutation(NUEVO_PROYECTO, {\r\n    onCompleted() {\r\n      toast.success('Proyecto Creado con exito');\r\n      reset();\r\n    },\r\n  });\r\n  const { userData } = useUser();\r\n  const [objetivos, setObjetivos] = useState([]);\r\n  const objetivo = {\r\n    descripcion: '',\r\n    tipo: '',\r\n  };\r\n  const handleClick = () => {\r\n    setObjetivos([\r\n      ...objetivos,\r\n      { descripcion: objetivo.descripcion.value, tipo: objetivo.tipo.value },\r\n    ]);\r\n  };\r\n  const handleReset = () => {\r\n    setObjetivos([]);\r\n  };\r\n\r\n  const [proyecto, setProyecto] = useState({\r\n    nombre: '',\r\n    lider: '',\r\n    presupuesto: 0,\r\n  });\r\n\r\n  if (error) {\r\n    toast.error('Problemas creando el proyecto');\r\n  }\r\n\r\n  return (\r\n    <PrivateRoute roleList='LIDER'>\r\n      <header className='items-center justify-center p-3'>\r\n        <Link to='/Proyectos'>\r\n          <i className='fas fa-arrow-left text-gray-600 cursor-pointer font-bold text-xl hover:text-gray-900' />\r\n        </Link>\r\n        <h1 className='m-1 text-3xl text-gray-800 font-bold text-center'>\r\n          Crear Nuevo Proyecto\r\n        </h1>\r\n      </header>\r\n      <section className='h-3/4'>\r\n        <form\r\n          className='flex flex-col gap-2 min-w-min w-10/12 mx-auto bg-gray-100 py-3 text-center text-xl text-gray-500 uppercase font-bold h-full rounded-3xl '\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            crearProyecto({\r\n              variables: {\r\n                nombre: proyecto.nombre.value,\r\n                presupuesto: parseInt(proyecto.presupuesto.value),\r\n                lider: proyecto.lider,\r\n                objetivos,\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          <label htmlFor='nombre'>Nombre</label>\r\n          <input\r\n            ref={(nombre) => setProyecto((proyecto.nombre = nombre))}\r\n            required\r\n            placeholder='Nombre del proyecto'\r\n            id='nombre'\r\n            className='m-auto text-center rounded-md text-black text-lg '\r\n          />\r\n          <label htmlFor='lider'>Lider</label>\r\n          <input\r\n            value={`${userData.nombre} ${userData.apellido}`}\r\n            id='lider'\r\n            required\r\n            className='m-auto text-center rounded-md text-black text-lg'\r\n          />\r\n          <input\r\n            ref={() => setProyecto((proyecto.lider = userData._id))}\r\n            className='hidden'\r\n          />\r\n          <label htmlFor='presupuesto'>Presupuesto</label>\r\n          <input\r\n            ref={(presupuesto) =>\r\n              setProyecto((proyecto.presupuesto = presupuesto))\r\n            }\r\n            required\r\n            placeholder='Presupuesto'\r\n            id='presupuesto'\r\n            className='m-auto text-center rounded-md text-black text-lg'\r\n          />\r\n          <placeholder className='grid grid-cols-4 gap-2'>\r\n            <legend className='col-span-4'>OBJETIVOS</legend>\r\n            <div className='m-auto col-start-1 h-36 text-center overflow-y-scroll rounded-md border-solid border-2 border-black w-11/12 text-gray-800 text-base col-span-2 row-span-5 bg-white overflow-hidden'>\r\n              {objetivos.map((item) => {\r\n                return (\r\n                  <ul>\r\n                    <li className='list-disc list-inside text-left'>\r\n                      {item.tipo}: {item.descripcion}\r\n                    </li>\r\n                  </ul>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <label\r\n              className='text-lg text-left col-start-3'\r\n              htmlFor='descripcion'\r\n            >\r\n              Descripcion\r\n            </label>\r\n            <input\r\n              className='h-8 col-start-3 mx-3 col-span-2'\r\n              required\r\n              placeholder='Descripcion del objetivo'\r\n              type='text-area'\r\n              id='descripcion'\r\n              ref={(descripcion) => (objetivo.descripcion = descripcion)}\r\n            />\r\n            <label className='text-lg text-left col-start-3' htmlFor='tipo'>\r\n              Tipo\r\n            </label>\r\n            <select\r\n              className='border h-8 col-start-3 mx-3 col-span-2'\r\n              type='text'\r\n              id='tipo'\r\n              ref={(tipo) => (objetivo.tipo = tipo)}\r\n            >\r\n              <option value='GENERAL'>General</option>\r\n              <option value='ESPECIFICO'>Especifico</option>\r\n            </select>\r\n            <button\r\n              type='button'\r\n              onClick={handleClick}\r\n              className='col-start-3 mx-auto bg-green-400 hover:bg-green-600 rounded-full px-2 py-1 text-white'\r\n            >\r\n              Añadir Objetivo\r\n            </button>\r\n            <button\r\n              type='button'\r\n              onClick={handleReset}\r\n              className='col-start-4  mx-auto bg-red-400 hover:bg-red-600 rounded-full px-2 py-1 text-white'\r\n            >\r\n              Borrar Todo\r\n            </button>\r\n          </placeholder>\r\n\r\n          <button\r\n            type='submit'\r\n            className='m-auto col-span-2 block bg-indigo-400 hover:bg-indigo-600 rounded-full px-12 py-1 text-white'\r\n          >\r\n            Crear Nuevo Proyecto\r\n          </button>\r\n        </form>\r\n      </section>\r\n    </PrivateRoute>\r\n  );\r\n};\r\nexport default NuevoProyecto;\r\n","import { gql } from '@apollo/client';\r\n\r\nconst CREAR_INSCRIPCION = gql`\r\n  mutation CrearRegistro($proyecto: String!, $estudiante: String!) {\r\n    crearRegistro(proyecto: $proyecto, estudiante: $estudiante) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nconst APROBAR_INSCRIPCION = gql`\r\n  mutation AprobarInscripcion($aprobarInscripcionId: String!) {\r\n    aprobarInscripcion(id: $aprobarInscripcionId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nconst FECHA_FINAL = gql`\r\n  mutation FinalizarInscripcion($finalizarInscripcionId: String!) {\r\n    finalizarInscripcion(id: $finalizarInscripcionId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nconst RECHAZAR_INSCRIPCION = gql`\r\n  mutation RechazarInscripcion($rechazarInscripcionId: String!) {\r\n    rechazarInscripcion(id: $rechazarInscripcionId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  CREAR_INSCRIPCION,\r\n  APROBAR_INSCRIPCION,\r\n  RECHAZAR_INSCRIPCION,\r\n  FECHA_FINAL,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useUser } from 'context/userContext';\r\nimport { GET_PROYECTO } from 'graphql/proyectos/queries';\r\nimport { EDITAR_PROYECTO } from 'graphql/proyectos/mutations';\r\n\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport Objetivos from 'components/Objetivos';\r\nimport ReactLoading from 'react-loading';\r\nimport { toast } from 'react-toastify';\r\nimport { FECHA_FINAL } from 'graphql/inscripciones/mutaciones';\r\n\r\nconst EditarProyecto = () => {\r\n  const { _id } = useParams();\r\n  const fechaHoy = new Date();\r\n  const { userData } = useUser();\r\n  const [objetivos, setObjetivos] = useState([]);\r\n  const {\r\n    data: queryData,\r\n    error: queryError,\r\n    loading: queryLoading,\r\n    refetch,\r\n  } = useQuery(GET_PROYECTO, { variables: { _id } });\r\n  let proyecto = {\r\n    _id: '',\r\n    nombre: '',\r\n    lider: '',\r\n    presupuesto: '',\r\n    fechaInicio: '',\r\n    fechaFin: '',\r\n  };\r\n  const objetivo = {\r\n    descripcion: '',\r\n    tipo: '',\r\n  };\r\n\r\n  const [finalizarInscripcion] = useMutation(FECHA_FINAL);\r\n\r\n  const [\r\n    editarProyecto,\r\n    { data: mutationData, loading: mutationLoading, error: mutationError },\r\n  ] = useMutation(EDITAR_PROYECTO);\r\n  useEffect(() => {\r\n    if (mutationData) {\r\n      toast.success('Proyecto modificado correctamente');\r\n      refetch();\r\n    }\r\n  }, [mutationData]);\r\n\r\n  const handleClick = () => {\r\n    setObjetivos([\r\n      ...objetivos,\r\n      { descripcion: objetivo.descripcion.value, tipo: objetivo.tipo.value },\r\n    ]);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setObjetivos([]);\r\n  };\r\n  const handleActivar = () => {\r\n    if (queryData.Proyecto.fase === 'NULA') {\r\n      proyecto.fase = 'INICIADO';\r\n      proyecto.fechaInicio = `${fechaHoy}`;\r\n      proyecto.estado = 'ACTIVO';\r\n    } else if (queryData.Proyecto.estado === 'ACTIVO') {\r\n      proyecto.estado = 'INACTIVO';\r\n      finalizarInscripcion({\r\n        variables: {\r\n          finalizarInscripcionId: _id,\r\n        },\r\n      });\r\n    } else {\r\n      proyecto.estado = 'ACTIVO';\r\n    }\r\n  };\r\n\r\n  if (queryError)\r\n    return toast.error('Error al consultar los datos del proyecto');\r\n  if (queryLoading || mutationLoading)\r\n    return (\r\n      <ReactLoading type='cylon' color='#4c2882' height={667} width={365} />\r\n    );\r\n\r\n  proyecto = {\r\n    _id: queryData.Proyecto._id,\r\n    nombre: queryData.Proyecto.nombre,\r\n    lider: queryData.Proyecto.lider._id,\r\n    presupuesto: queryData.Proyecto.presupuesto,\r\n    fechaInicio: queryData.Proyecto.fechaInicio,\r\n    fechaFin: queryData.Proyecto.fechaFin,\r\n    estado: queryData.Proyecto.estado,\r\n    fase: queryData.Proyecto.fase,\r\n  };\r\n  if (mutationError)\r\n    return toast.error('Error al modificar los datos del proyecto');\r\n\r\n  if (userData.rol === 'LIDER') {\r\n    return (\r\n      <div className='w-full'>\r\n        <header className='items-center justify-center p-3'>\r\n          <Link to='/Proyectos'>\r\n            <i className='fas fa-arrow-left text-gray-600 cursor-pointer font-bold text-xl hover:text-gray-900' />\r\n          </Link>\r\n          <h1 className='m-1 text-3xl text-gray-800 font-bold text-center'>\r\n            Editar proyecto {queryData.Proyecto._id}\r\n          </h1>\r\n        </header>\r\n        <form\r\n          className='mx-4 grid grid-cols-2 gap-4'\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            editarProyecto({\r\n              variables: {\r\n                _id: proyecto._id,\r\n                lider: proyecto.lider,\r\n                nombre: proyecto.nombre.value,\r\n                presupuesto: parseInt(proyecto.presupuesto.value),\r\n                fechaInicio: proyecto.fechaInicio,\r\n                fechaFin: proyecto.fechaFin,\r\n                estado: proyecto.estado,\r\n                fase: proyecto.fase,\r\n                objetivos,\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          <section className='bg-blue-50 border-blue-500 border-solid border-2 col-span-2'>\r\n            <h2 className='text-center font-bold text-2xl col-span-4'>\r\n              {' '}\r\n              INFORMACION DEL PROYECTO\r\n            </h2>\r\n            <div className='pl-3 grid grid-cols-4'>\r\n              <span className='col-start-1 font-bold'>ID del proyecto:</span>{' '}\r\n              <span className='col-start-2 col-span-3'>\r\n                {queryData.Proyecto._id}\r\n              </span>\r\n              <span className='col-start-1 font-bold'>Lider:</span>{' '}\r\n              <span className='col-start-2 col-span-3 uppercase'>\r\n                {queryData.Proyecto.lider.nombre}{' '}\r\n                {queryData.Proyecto.lider.apellido}\r\n              </span>\r\n              <label htmlFor='nombre' className='col-start-1 font-bold'>\r\n                Nombre:\r\n              </label>\r\n              <input\r\n                className='col-start-2'\r\n                type='text'\r\n                id='nombre'\r\n                defaultValue={queryData.Proyecto.nombre}\r\n                ref={(nombre) => (proyecto.nombre = nombre)}\r\n              />\r\n              <label htmlFor='presupuesto' className='col-start-1 font-bold'>\r\n                Presupuesto:\r\n              </label>\r\n              <input\r\n                className='col-start-2'\r\n                type='text'\r\n                id='presupuesto'\r\n                defaultValue={queryData.Proyecto.presupuesto}\r\n                ref={(presupuesto) => (proyecto.presupuesto = presupuesto)}\r\n              />\r\n              <span className='col-start-1 font-bold'>Fecha de Inicio:</span>\r\n              <span className='col-start-2 uppercase'>\r\n                {queryData.Proyecto.fechaInicio === null\r\n                  ? 'EL PROYECTO AUN NO TERMINADO'\r\n                  : queryData.Proyecto.fechaInicio}\r\n              </span>\r\n              <span className='col-start-1 font-bold'>\r\n                Fecha de Finalizacion:\r\n              </span>\r\n              <span className='col-start-2 uppercase'>\r\n                {queryData.Proyecto.fechaFin === null\r\n                  ? 'EL PROYECTO AUN NO TERMINADO'\r\n                  : queryData.Proyecto.fechaFin}\r\n              </span>\r\n              <span className='col-start-1 font-bold'>Fase:</span>{' '}\r\n              <span className='col-start-2 uppercase'>\r\n                {queryData.Proyecto.fase}\r\n              </span>\r\n              <span className='col-start-1 font-bold'>Estado:</span>{' '}\r\n              <span className='col-start-2 uppercase'>\r\n                {queryData.Proyecto.estado}\r\n              </span>\r\n            </div>\r\n          </section>\r\n          <section className='bg-blue-50 border-blue-500 border-solid border-2 col-span-2 py-4 grid grid-cols-2'>\r\n            <h2 className='text-center font-bold text-xl col-span-2'>\r\n              {' '}\r\n              OBJETIVOS\r\n            </h2>\r\n            <div>\r\n              <h3 className='pl-3 font-bold'>OBJETIVOS GENERALES</h3>\r\n              <ul className='pl-10'>\r\n                <Objetivos item={queryData.Proyecto} tipo='GENERAL' />\r\n              </ul>\r\n              <h3 className='pl-3 font-bold'>OBJETIVOS ESPECIFICOS</h3>\r\n              <ul className='pl-10'>\r\n                <Objetivos item={queryData.Proyecto} tipo='ESPECIFICO' />\r\n              </ul>\r\n            </div>\r\n            <div className='h-full'>\r\n              <div className='m-auto text-center rounded-md w-11/12 text-gray-800 text-base col-span-2 bg-white row-span-3'>\r\n                {objetivos.map((item) => {\r\n                  return (\r\n                    <ul>\r\n                      <li className='list-disc list-inside text-left'>\r\n                        {item.tipo}: {item.descripcion}\r\n                      </li>\r\n                    </ul>\r\n                  );\r\n                })}\r\n              </div>\r\n              <label className='text-lg' htmlFor='descripcion'>\r\n                Descripcion\r\n              </label>\r\n              <input\r\n                className='border h-8'\r\n                placeholder='Descripcion del objetivo'\r\n                type='text-area'\r\n                id='descripcion'\r\n                ref={(descripcion) => (objetivo.descripcion = descripcion)}\r\n              />\r\n              <label className='text-lg' htmlFor='tipo'>\r\n                Tipo\r\n              </label>\r\n              <select\r\n                className='border h-8'\r\n                type='text'\r\n                id='tipo'\r\n                ref={(tipo) => (objetivo.tipo = tipo)}\r\n              >\r\n                <option value='GENERAL'>General</option>\r\n                <option value='ESPECIFICO'>Especifico</option>\r\n              </select>\r\n              <div>\r\n                <button\r\n                  type='button'\r\n                  onClick={handleClick}\r\n                  className='m-auto col-span-2 bg-green-400 rounded-full px-2 py-1 my-2 shadow-md hover:bg-green-600 text-white'\r\n                >\r\n                  Añadir Objetivo\r\n                </button>\r\n                <button\r\n                  type='button'\r\n                  onClick={handleReset}\r\n                  className='m-auto col-span-2 bg-red-400 rounded-full px-2 py-1 shadow-md hover:bg-red-600 text-white'\r\n                >\r\n                  Borrar Todo\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <button\r\n            type='submit'\r\n            className='bg-indigo-700 text-white font-bold text-lg py-1 px-6 rounded-xl hover:bg-indigo-500 shadow-md mx-4 disabled:opacity-50 disabled:bg-gray-700'\r\n          >\r\n            Modificar Todo\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  if (userData.rol === 'ADMINISTRADOR') {\r\n    return (\r\n      <div className='w-full'>\r\n        <header className='items-center justify-center p-3'>\r\n          <Link to='/Proyectos'>\r\n            <i className='fas fa-arrow-left text-gray-600 cursor-pointer font-bold text-xl hover:text-gray-900' />\r\n          </Link>\r\n          <h1 className='m-1 text-3xl text-gray-800 font-bold text-center'>\r\n            Editar proyecto {queryData.Proyecto._id}\r\n          </h1>\r\n        </header>\r\n        <form\r\n          className='mx-4 grid grid-cols-2 gap-4'\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            editarProyecto({\r\n              variables: {\r\n                _id: proyecto._id,\r\n                lider: proyecto.lider,\r\n                nombre: proyecto.nombre,\r\n                presupuesto: parseInt(proyecto.presupuesto),\r\n                fechaInicio: proyecto.fechaInicio,\r\n                fechaFin: proyecto.fechaFin,\r\n                estado: proyecto.estado,\r\n                fase: proyecto.fase,\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          <section className='bg-blue-50 border-blue-500 border-solid border-2 col-span-2'>\r\n            <h2 className='text-center font-bold text-2xl col-span-4'>\r\n              {' '}\r\n              INFORMACION DEL PROYECTO\r\n            </h2>\r\n            <div className='pl-3 grid grid-cols-4'>\r\n              <div className='col-start-1 font-bold'>ID del proyecto:</div>{' '}\r\n              <div className='col-start-2 col-span-3'>\r\n                {queryData.Proyecto._id}\r\n              </div>\r\n              <span className='col-start-1 font-bold'>Lider:</span>{' '}\r\n              <span className='col-start-2 col-span-3 uppercase'>\r\n                {queryData.Proyecto.lider.nombre}{' '}\r\n                {queryData.Proyecto.lider.apellido}\r\n              </span>\r\n              <span className='col-start-1 font-bold'>\r\n                Nombre del proyecto:\r\n              </span>\r\n              <span className='col-start-2'>{queryData.Proyecto.nombre}</span>\r\n              <span className='col-start-1 font-bold'>Presupuesto:</span>\r\n              <span className='col-start-2'>\r\n                {queryData.Proyecto.presupuesto}\r\n              </span>\r\n              <span className='col-start-1 font-bold'>Fecha de Inicio:</span>\r\n              <span className='col-start-2 uppercase'>\r\n                {queryData.Proyecto.fechaInicio === null\r\n                  ? 'EL PROYECTO AUN NO TERMINADO'\r\n                  : queryData.Proyecto.fechaInicio}\r\n              </span>\r\n              <span className='col-start-1 font-bold'>\r\n                Fecha de Finalizacion:\r\n              </span>\r\n              <span className='col-start-2 uppercase'>\r\n                {queryData.Proyecto.fechaFin === null\r\n                  ? 'EL PROYECTO AUN NO TERMINADO'\r\n                  : queryData.Proyecto.fechaFin}\r\n              </span>\r\n              <span className='col-start-1 font-bold'>Fase:</span>{' '}\r\n              <span className='col-start-2'>{queryData.Proyecto.fase}</span>\r\n              <label className='col-start-1 font-bold'>Estado:</label>{' '}\r\n              <span className='col-start-2 pb-2'>\r\n                {queryData.Proyecto.estado}\r\n              </span>\r\n              {queryData.Proyecto.fase === 'TERMINADO' ? null : (\r\n                <button\r\n                  type='submit'\r\n                  onClick={handleActivar}\r\n                  className='col-start-3 bg-blue-700 text-white font-bold text-lg px-5 rounded-xl hover:bg-blue-500 shadow-md mx-4 mb-3 disabled:opacity-50 disabled:bg-gray-700'\r\n                >\r\n                  {queryData.Proyecto.estado === 'ACTIVO'\r\n                    ? 'Desactivar'\r\n                    : 'Activar'}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </section>\r\n          <section className='bg-blue-50 border-blue-500 border-solid border-2 col-span-2 py-4 grid grid-cols-2'>\r\n            <div>\r\n              <h2 className='text-center font-bold text-xl'> OBJETIVOS</h2>\r\n              <h3 className='pl-3 font-bold'>OBJETIVOS GENERALES</h3>\r\n              <ul className='pl-10'>\r\n                <Objetivos item={queryData.Proyecto} tipo='GENERAL' />\r\n              </ul>\r\n              <h3 className='pl-3 font-bold'>OBJETIVOS ESPECIFICOS</h3>\r\n              <ul className='pl-10'>\r\n                <Objetivos item={queryData.Proyecto} tipo='ESPECIFICO' />\r\n              </ul>\r\n            </div>\r\n          </section>\r\n          {queryData.Proyecto.fase === 'DESARROLLO' ? (\r\n            <button\r\n              type='submit'\r\n              className='bg-red-700 text-white font-bold text-lg py-1 px-6 rounded-xl hover:bg-red-500 shadow-md mx-4 disabled:opacity-50 disabled:bg-gray-700  '\r\n              onClick={() => {\r\n                proyecto.estado = 'INACTIVO';\r\n                proyecto.fase = 'TERMINADO';\r\n                proyecto.fechaFin = `${fechaHoy}`;\r\n              }}\r\n            >\r\n              {' '}\r\n              Terminar Proyecto{' '}\r\n            </button>\r\n          ) : null}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  return 'No tiene permisos para gestionar Proyectos';\r\n};\r\n\r\nexport default EditarProyecto;\r\n","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst ButtonLoading = ({ disabled, loading, text, onClick = () => {} }) => {\r\n  return (\r\n    <button\r\n      data-testid='button-loading'\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      type='submit'\r\n      className='bg-indigo-700 text-white font-bold text-lg py-3 px-6  rounded-xl hover:bg-indigo-500 shadow-md my-4 mx-4 disabled:opacity-50 disabled:bg-gray-800'\r\n    >\r\n      {loading ? (\r\n        <ReactLoading\r\n          data-testid='loading-in-button'\r\n          type='spin'\r\n          height={30}\r\n          width={30}\r\n        />\r\n      ) : (\r\n        text\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonLoading;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport Objetivos from 'components/Objetivos';\r\nimport { CREAR_INSCRIPCION } from 'graphql/inscripciones/mutaciones';\r\nimport { toast } from 'react-toastify';\r\nimport ButtonLoading from 'components/ButtonLoading';\r\nimport ReactLoading from 'react-loading';\r\nimport { useUser } from 'context/userContext';\r\nimport PrivateComponent from 'components/PrivateComponent';\r\nimport { GET_PROYECTO } from 'graphql/proyectos/queries';\r\n\r\nconst VerProyecto = () => {\r\n  const { _id } = useParams();\r\n  const { userData } = useUser();\r\n\r\n  const { data, error, loading } = useQuery(GET_PROYECTO, {\r\n    variables: { _id },\r\n  });\r\n\r\n  useEffect(() => {}, [data]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error('Error al mostrar los proyectos');\r\n    }\r\n  }, [error]);\r\n\r\n  if (loading)\r\n    return (\r\n      <ReactLoading type='cylon' color='#4c2882' height={667} width={365} />\r\n    );\r\n  return (\r\n    <div className='w-full'>\r\n      <header className='items-center justify-center p-3'>\r\n        <Link to='/Proyectos'>\r\n          <i className='fas fa-arrow-left text-gray-600 cursor-pointer font-bold text-xl hover:text-gray-900' />\r\n        </Link>\r\n        <h1 className='mx-2 text-3xl text-gray-800 font-bold text-center'>\r\n          {data.Proyecto.nombre}\r\n        </h1>\r\n      </header>\r\n      <div className='mx-4 grid grid-cols-2 gap-4 mb-6 '>\r\n        <section className='bg-blue-50 border-blue-500 border-solid border-2 col-span-2 py-2'>\r\n          <h2 className='text-center font-bold text-2xl col-span-4 mb-2'>\r\n            {' '}\r\n            INFORMACION DEL PROYECTO\r\n          </h2>\r\n          <div className='pl-3 grid grid-cols-4'>\r\n            <div className='col-start-1 font-bold'>ID del proyecto:</div>{' '}\r\n            <div className='col-start-2 col-span-3'>{data.Proyecto._id}</div>\r\n            <div className='col-start-1 font-bold'>Lider:</div>{' '}\r\n            <div className='col-start-2 col-span-3 uppercase'>\r\n              {data.Proyecto.lider.nombre} {data.Proyecto.lider.apellido}\r\n            </div>\r\n            <span className='col-start-1 font-bold'>Presupuesto:</span>{' '}\r\n            <span className='col-start-2 uppercase'>\r\n              {data.Proyecto.presupuesto}\r\n            </span>\r\n            <span className='col-start-1 font-bold'>Fecha de Inicio:</span>{' '}\r\n            <span className='col-start-2 uppercase'>\r\n              {data.Proyecto.fechaInicio === null\r\n                ? 'EL PROYECTO AUN NO HA EMPEZADO'\r\n                : data.Proyecto.fechaInicio}\r\n            </span>\r\n            <span className='col-start-1 font-bold'>\r\n              Fecha de Finalizacion:\r\n            </span>{' '}\r\n            <span className='col-start-2 uppercase'>\r\n              {data.Proyecto.fechaFin === null\r\n                ? 'EL PROYECTO AUN NO TERMINADO'\r\n                : data.Proyecto.fechaFin}\r\n            </span>\r\n            <span className='col-start-1 font-bold'>Fase:</span>{' '}\r\n            <span className='col-start-2 uppercase'>{data.Proyecto.fase}</span>\r\n            <span className='col-start-1 font-bold'>Estado:</span>{' '}\r\n            <span className='col-start-2 uppercase'>\r\n              {data.Proyecto.estado}\r\n            </span>\r\n          </div>\r\n        </section>\r\n        <section className='bg-blue-50 border-blue-500 border-solid border-2 col-span-2 py-4'>\r\n          <h2 className='text-center font-bold text-xl'> OBJETIVOS</h2>\r\n          <h3 className='pl-3 font-bold'>OBJETIVOS GENERALES</h3>\r\n          <ul className='pl-10'>\r\n            <Objetivos\r\n              item={data.Proyecto}\r\n              tipo='GENERAL'\r\n              className='list-disc'\r\n            />\r\n          </ul>\r\n          <h3 className='pl-3 font-bold'>OBJETIVOS ESPECIFICOS</h3>\r\n          <ul className='pl-10'>\r\n            <Objetivos\r\n              item={data.Proyecto}\r\n              tipo='ESPECIFICO'\r\n              className='list-disc'\r\n            />\r\n          </ul>\r\n        </section>\r\n        <section className='bg-blue-50 border-blue-500 border-solid border-2 col-start-1 py-4'>\r\n          <h2 className='text-center font-bold text-l'>\r\n            ESTUDIANTES INSCRITOS\r\n          </h2>\r\n          <Estudiantes item={data} />\r\n          {userData.rol === 'ESTUDIANTE' ? (\r\n            <InscripcionProyecto\r\n              idProyecto={data.Proyecto._id}\r\n              estado={data.Proyecto.estado}\r\n              inscripciones={data}\r\n            />\r\n          ) : null}\r\n        </section>\r\n        <PrivateComponent roleList={['LIDER', 'ESTUDIANTE']}>\r\n          <section className='bg-blue-50 border-blue-500 border-solid border-2 col-start-2 py-4 text-center'>\r\n            <h2 className='text-center font-bold text-l'>AVANCES</h2>\r\n            <Avances item={data.Proyecto} />\r\n          </section>\r\n        </PrivateComponent>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Estudiantes = ({ item }) => {\r\n  const EstudiantesCopy = item.Proyecto.registros.map((estudiante) => {\r\n    if (estudiante.estado === 'ACEPTADA') {\r\n      return (\r\n        <ul className='pl-2'>\r\n          <li className='list-disc list-inside'>\r\n            {estudiante.estudiante.nombre} {estudiante.estudiante.apellido}\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n\r\n  const filtro = EstudiantesCopy.filter((estudiante) => estudiante !== null);\r\n  if (filtro.length !== 0) {\r\n    return EstudiantesCopy;\r\n  }\r\n  return (\r\n    <p className='text-center'>NO HAY ESTUDIANTES REGISTRADOS AL PROYECTO </p>\r\n  );\r\n};\r\n\r\nconst Avances = ({ item }) => {\r\n  const AvancesCopy = item.avances;\r\n  if (item.registros.length !== 0) {\r\n    if (item.registros[0].estado === 'ACEPTADA') {\r\n      if (item.fase === 'INICIADO' || item.fase === 'DESARROLLO') {\r\n        if (AvancesCopy.length !== 0) {\r\n          return (\r\n            <>\r\n              <PrivateComponent roleList={['LIDER', 'ESTUDIANTE']}>\r\n                <Link to={`/VerAvance/${item._id}`}>\r\n                  <p className='text-center'>\r\n                    Hay {AvancesCopy.length}{' '}\r\n                    {AvancesCopy.length === 1 ? ' avance' : ' avances'} en el\r\n                    proyecto{' '}\r\n                  </p>\r\n                  <button\r\n                    type='button'\r\n                    className='col-span-2 bg-blue-400 p-2 rounded-full shadow-md hover:bg-blue-600 text-white'\r\n                  >\r\n                    Ver Avances\r\n                  </button>\r\n                </Link>\r\n              </PrivateComponent>\r\n              <br />\r\n              <PrivateComponent roleList={['ESTUDIANTE']}>\r\n                <Link to={`/Avances/${item._id}`}>\r\n                  <button\r\n                    type='button'\r\n                    className='col-span-2 bg-blue-400 p-2 rounded-full shadow-md hover:bg-blue-600 text-white  m-3'\r\n                  >\r\n                    Añadir Avance\r\n                  </button>\r\n                </Link>\r\n              </PrivateComponent>\r\n            </>\r\n          );\r\n        }\r\n        return (\r\n          <>\r\n            {' '}\r\n            <p className='text-center'>No hay avances en el proyecto </p>\r\n            <PrivateComponent roleList={['ESTUDIANTE']}>\r\n              <Link to={`/Avances/${item._id}`}>\r\n                <button\r\n                  type='button'\r\n                  className='col-span-2 bg-blue-400 p-2 rounded-full shadow-md hover:bg-blue-600 text-white'\r\n                >\r\n                  Añadir Avance\r\n                </button>\r\n              </Link>\r\n            </PrivateComponent>\r\n          </>\r\n        );\r\n      }\r\n      return (\r\n        <>\r\n          {' '}\r\n          <p className='text-center'>\r\n            No se pueden registrar avances en un proyecto Terminado o Inactivo{' '}\r\n          </p>\r\n          <PrivateComponent roleList={['ESTUDIANTE']}>\r\n            <button\r\n              type='button'\r\n              className='col-span-2 bg-blue-400 p-2 rounded-full shadow-md hover:bg-blue-600 text-white'\r\n            >\r\n              Añadir Avance\r\n            </button>\r\n          </PrivateComponent>\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        {' '}\r\n        <p className='text-center'>\r\n          No puedes registrar avances, si no está iniciado o en desarrollo{' '}\r\n        </p>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {' '}\r\n      <p className='text-center'>\r\n        No puedes registrar avances, si no estas inscrito en el proyecto.{' '}\r\n      </p>\r\n      <PrivateComponent roleList={['ESTUDIANTE']}>\r\n        <button\r\n          type='button'\r\n          className='col-span-2 bg-blue-400 p-2 rounded-full shadow-md hover:bg-blue-600 text-white'\r\n        >\r\n          Añadir Avance\r\n        </button>\r\n      </PrivateComponent>\r\n    </>\r\n  );\r\n};\r\n\r\nconst InscripcionProyecto = ({ idProyecto, estado, inscripciones }) => {\r\n  const [estadoInscripcion, setEstadoInscripcion] = useState('');\r\n  const [crearRegistro, { data, loading }] = useMutation(CREAR_INSCRIPCION);\r\n  const { userData } = useUser();\r\n\r\n  useEffect(() => {\r\n    if (userData && inscripciones) {\r\n      const flt = inscripciones.Proyecto.registros.filter(\r\n        (el) => el.estudiante._id === userData._id\r\n      );\r\n      if (flt.length > 0) {\r\n        setEstadoInscripcion(flt[0].estado);\r\n      }\r\n    }\r\n  }, [userData, inscripciones]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      toast.success('Registro Exitoso');\r\n    }\r\n  }, [data]);\r\n\r\n  const confirmarInscripcion = () => {\r\n    crearRegistro({\r\n      variables: {\r\n        proyecto: idProyecto,\r\n        estudiante: userData._id,\r\n      },\r\n    });\r\n    // crearInscripcion({ variables: { proyecto: idProyecto, estudiante: userData._id } });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {estadoInscripcion !== '' ? (\r\n        <span>El estado de su solicitud es: {estadoInscripcion}</span>\r\n      ) : (\r\n        <ButtonLoading\r\n          onClick={() => confirmarInscripcion()}\r\n          disabled={estado === 'INACTIVO'}\r\n          loading={loading}\r\n          text='Inscribirme en este proyecto'\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VerProyecto;\r\n","import { gql } from '@apollo/client';\r\n\r\nconst GET_USUARIOS = gql`\r\n  query Usuarios {\r\n    Usuarios {\r\n      _id\r\n      correo\r\n      identificacion\r\n      nombre\r\n      apellido\r\n      rol\r\n      estado\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_USUARIO = gql`\r\n  query Usuario($_id: String!) {\r\n    Usuario(_id: $_id) {\r\n      _id\r\n      correo\r\n      identificacion\r\n      nombre\r\n      apellido\r\n      rol\r\n      estado\r\n    }\r\n  }\r\n`;\r\n\r\nexport { GET_USUARIOS, GET_USUARIO };\r\n","import { gql } from '@apollo/client';\r\n\r\nconst REGISTRAR_USUARIO = gql`\r\n  mutation register(\r\n    $nombre: String!\r\n    $apellido: String!\r\n    $identificacion: String!\r\n    $correo: String!\r\n    $rol: Enum_Rol!\r\n    $password: String!\r\n  ) {\r\n    register(\r\n      nombre: $nombre\r\n      apellido: $apellido\r\n      identificacion: $identificacion\r\n      correo: $correo\r\n      rol: $rol\r\n      password: $password\r\n    ) {\r\n      token\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nconst EDITAR_USUARIO = gql`\r\n  mutation EditarUsuario(\r\n    $_id: String!\r\n    $nombre: String!\r\n    $apellido: String!\r\n    $identificacion: String!\r\n    $correo: String!\r\n    $estado: Enum_EstadoUsuario!\r\n  ) {\r\n    editarUsuario(\r\n      _id: $_id\r\n      nombre: $nombre\r\n      apellido: $apellido\r\n      identificacion: $identificacion\r\n      correo: $correo\r\n      estado: $estado\r\n    ) {\r\n      _id\r\n      nombre\r\n      apellido\r\n      correo\r\n      estado\r\n      identificacion\r\n      rol\r\n    }\r\n  }\r\n`;\r\n\r\nconst ELIMINAR_USUARIO = gql`\r\n  mutation EliminarUsuario($_id: String, $correo: String) {\r\n    eliminarUsuario(_id: $_id, correo: $correo) {\r\n      _id\r\n      correo\r\n    }\r\n  }\r\n`;\r\n\r\nexport { EDITAR_USUARIO, ELIMINAR_USUARIO, REGISTRAR_USUARIO };\r\n","const Enum_Rol = {\r\n  ADMINISTRADOR: 'Administrador',\r\n  ESTUDIANTE: 'Estudiante',\r\n  LIDER: 'Líder',\r\n};\r\n\r\nconst Enum_EstadoUsuario = {\r\n  PENDIENTE: 'Pendiente',\r\n  AUTORIZADO: 'Autorizado',\r\n  NO_AUTORIZADO: 'No autorizado',\r\n};\r\n\r\nconst Enum_FaseProyecto = {\r\n  INICIADO: 'Iniciado',\r\n  DESARROLLO: 'Desarrollo',\r\n  TERMINADO: 'Terminado',\r\n  NULA: 'Nula',\r\n};\r\nconst Enum_EstadoProyecto = {\r\n  ACTIVO: 'Activo',\r\n  INACTIVO: 'Inactivo',\r\n};\r\nconst Enum_TipoObjetivo = {\r\n  GENERAL: 'General',\r\n  ESPECIFICO: 'Específico',\r\n};\r\n\r\nexport {\r\n  Enum_Rol,\r\n  Enum_EstadoUsuario,\r\n  Enum_FaseProyecto,\r\n  Enum_EstadoProyecto,\r\n  Enum_TipoObjetivo,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { GET_USUARIOS } from 'graphql/usuarios/queries';\r\nimport { ELIMINAR_USUARIO } from 'graphql/usuarios/mutations';\r\nimport ReactLoading from 'react-loading';\r\nimport { Dialog } from '@material-ui/core';\r\nimport { Enum_Rol, Enum_EstadoUsuario } from 'utils/enum';\r\n\r\nconst Usuarios = () => {\r\n  const { data, error, loading, refetch } = useQuery(GET_USUARIOS);\r\n\r\n  // useEffect para datos traido del back\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error('Error consultando los usuarios');\r\n    }\r\n  }, [error]);\r\n\r\n  const [busqueda, setBusqueda] = useState('');\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n\r\n  const bChange = (e) => {\r\n    setBusqueda(e.target.value);\r\n  };\r\n\r\n  const handleDeleteUser = (user) => {\r\n    setCurrentUser(user);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const [\r\n    eliminarUsuario,\r\n    { data: mutationData, loading: loadingMutation, error: mutationError },\r\n  ] = useMutation(ELIMINAR_USUARIO);\r\n\r\n  useEffect(() => {\r\n    if (mutationData) {\r\n      toast.success('Usuario eliminado correctamente');\r\n      refetch();\r\n    }\r\n  }, [mutationData, loadingMutation]);\r\n\r\n  useEffect(() => {\r\n    if (mutationError) {\r\n      toast.error('Error eliminando el usuario');\r\n    }\r\n  }, [mutationError]);\r\n\r\n  if (loading || loadingMutation)\r\n    return (\r\n      <ReactLoading type='cylon' color='#4c2882' height={667} width={365} />\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <h1 className='text-3xl font-extrabold text-gray-900 my-3 text-center'>\r\n        USUARIOS DEL SISTEMA\r\n      </h1>\r\n      <br />\r\n      <div className='rounded-md shadow-sm -space-y-px p-3'>\r\n        <label>\r\n          <b>Buscar:</b>\r\n        </label>\r\n        <input\r\n          className='appearance-none rounded-none relative block w-full px-3 py-2 border-2 border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\r\n          value={busqueda}\r\n          placeholder='Búsqueda por Identificación o Nombre'\r\n          onChange={bChange}\r\n        />\r\n      </div>\r\n      <div className='p-3'>\r\n        <table className='tabla w-full'>\r\n          <thead>\r\n            <tr>\r\n              <th scope='col'>Identificación</th>\r\n              <th scope='col'>Nombre</th>\r\n              <th scope='col'>Apellido</th>\r\n              <th scope='col'>Correo</th>\r\n              <th scope='col'>Rol</th>\r\n              <th scope='col'>Estado</th>\r\n              <th scope='col'>Acciones</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data &&\r\n              data.Usuarios.filter((user) => {\r\n                if (\r\n                  user._id\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .includes(busqueda.toLowerCase()) ||\r\n                  user.nombre.toLowerCase().includes(busqueda.toLowerCase()) ||\r\n                  user.identificacion\r\n                    .toLowerCase()\r\n                    .includes(busqueda.toLowerCase())\r\n                ) {\r\n                  return user;\r\n                }\r\n              }).map((item) => {\r\n                return (\r\n                  <tr key={item._id}>\r\n                    <td>{item.identificacion}</td>\r\n                    <td>{item.nombre}</td>\r\n                    <td>{item.apellido}</td>\r\n                    <td>{item.correo}</td>\r\n                    <td>{Enum_Rol[item.rol]}</td>\r\n                    <td>{Enum_EstadoUsuario[item.estado]}</td>\r\n                    <td>\r\n                      <Link to={`/usuarios/EditarUsuario/${item._id}`}>\r\n                        <button\r\n                          type='button'\r\n                          className='col-span-2 bg-blue-400 p-2 rounded-full shadow-md hover:bg-blue-600 text-white'\r\n                        >\r\n                          Editar\r\n                        </button>{' '}\r\n                      </Link>\r\n                      {'   '}\r\n                      <button\r\n                        type='button'\r\n                        className='col-span-2 bg-red-400 p-2 rounded-full shadow-md hover:bg-red-600 text-white'\r\n                        onClick={() => handleDeleteUser(item)}\r\n                      >\r\n                        Eliminar\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <Dialog open={openDialog}>\r\n        <div className='p-8 flex flex-col'>\r\n          <h1 className='text-gray-900 text-2xl font-bold'>\r\n            ¿Está seguro de querer eliminar el usuario?\r\n          </h1>\r\n          <div className='flex w-full items-center justify-center my-4'>\r\n            <button\r\n              type='button'\r\n              onClick={() =>\r\n                eliminarUsuario({\r\n                  variables: {\r\n                    _id: currentUser._id,\r\n                    correo: currentUser.correo,\r\n                  },\r\n                }).then(() => setOpenDialog(false))\r\n              }\r\n              className='mx-2 px-4 py-2 bg-green-500 text-white hover:bg-green-700 rounded-md shadow-md'\r\n            >\r\n              Sí\r\n            </button>\r\n            <button\r\n              type='button'\r\n              onClick={() => setOpenDialog(false)}\r\n              className='mx-2 px-4 py-2 bg-red-500 text-white hover:bg-red-700 rounded-md shadow-md'\r\n            >\r\n              No\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Usuarios;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { REGISTRAR_USUARIO } from 'graphql/usuarios/mutations';\r\n\r\nconst NuevoUsuario = () => {\r\n  const [register] = useMutation(REGISTRAR_USUARIO);\r\n  const [usuario, setUsuario] = useState({\r\n    nombre: '',\r\n    apellido: '',\r\n    identificacion: '',\r\n    correo: '',\r\n    rol: '',\r\n    password: '',\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <section className='pt-11 text-center h-32 '>\r\n        <h1 className='font-sans text-4xl font-bold'>REGISTRATE</h1>\r\n      </section>\r\n      <section className='h-3/4 '>\r\n        <form\r\n          className='flex flex-col min-w-min w-1/3 mx-auto bg-gray-100 py-3 text-center text-xl text-gray-500 uppercase font-bold h-full rounded-3xl'\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            register({\r\n              variables: {\r\n                nombre: usuario.nombre.value,\r\n                apellido: usuario.apellido.value,\r\n                identificacion: usuario.identificacion.value,\r\n                correo: usuario.correo.value,\r\n                rol: usuario.rol.value,\r\n                password: usuario.password.value,\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          <label htmlFor='nombre'>Nombre</label>\r\n          <input\r\n            ref={(nombre) => setUsuario((usuario.nombre = nombre))}\r\n            placeholder='Nombre'\r\n            id='nombre'\r\n            className='m-auto text-center rounded-md text-black text-lg'\r\n          />\r\n          <label htmlFor='apellido'>Apellido</label>\r\n          <input\r\n            ref={(apellido) => setUsuario((usuario.apellido = apellido))}\r\n            id='apellido'\r\n            placeholder='Apellido'\r\n            className='m-auto text-center rounded-md text-black text-lg'\r\n          />\r\n          <label htmlFor='identificacion'>Identificacion</label>\r\n          <input\r\n            ref={(identificacion) =>\r\n              setUsuario((usuario.identificacion = identificacion))\r\n            }\r\n            placeholder='Identificacion'\r\n            type='text'\r\n            id='identificacion'\r\n            className='m-auto text-center rounded-md text-black text-lg'\r\n          />\r\n          <label htmlFor='inicio'>Correo electronico</label>\r\n          <input\r\n            ref={(correo) => setUsuario((usuario.correo = correo))}\r\n            type='email'\r\n            placeholder='Correo Electronico'\r\n            id='inicio'\r\n            className='m-auto text-center rounded-md text-black text-lg'\r\n          />\r\n          <label htmlFor='rol'>Rol</label>\r\n          <select\r\n            ref={(rol) => setUsuario((usuario.rol = rol))}\r\n            id='rol'\r\n            className='m-auto text-center rounded-md text-black text-lg mb-3'\r\n          >\r\n            <option disabled selected>\r\n              ELIJA SU ROL\r\n            </option>\r\n            <option value='ESTUDIANTE'>Estudiante</option>\r\n            <option value='LIDER'>Lider</option>\r\n            <option value='ADMINISTRADOR'>Administrador</option>\r\n          </select>\r\n          <label htmlFor='password'>Contraseña</label>\r\n          <input\r\n            ref={(password) => setUsuario((usuario.password = password))}\r\n            type='password'\r\n            id='password'\r\n            placeholder='Contraseña'\r\n            className='m-auto text-center rounded-md text-black text-lg mb-3'\r\n          />\r\n          <button type='submit' className='border-black border-2'>\r\n            Registrate!\r\n          </button>\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NuevoUsuario;\r\n","import React from 'react';\r\n\r\nconst Input = ({\r\n  label,\r\n  name,\r\n  defaultValue,\r\n  type,\r\n  required,\r\n  readOnly,\r\n  value,\r\n}) => {\r\n  return (\r\n    <label\r\n      htmlFor={name}\r\n      className='flex flex-col my-3 m-auto text-center rounded-md text-black text-lg'\r\n    >\r\n      <span>{label}</span>\r\n      <input\r\n        required={required}\r\n        type={type}\r\n        name={name}\r\n        className='input rounded-md\tmb-2 border-2\tborder-gray-300'\r\n        defaultValue={defaultValue}\r\n        readOnly={readOnly}\r\n        value={value}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useRef, useState } from 'react';\r\n\r\nconst useFormData = (initial) => {\r\n  const form = useRef(initial);\r\n  const [formData, setFormData] = useState({});\r\n  const getFormData = () => {\r\n    const fd = new FormData(form.current);\r\n    const obj = {};\r\n    fd.forEach((value, key) => {\r\n      if (key.includes('nested')) {\r\n        const [p1, p2, p3] = key.split('||');\r\n        if (Object.keys(obj).includes(p1)) {\r\n          if (Object.keys(obj[p1]).includes(p2)) {\r\n            obj[p1][p2][p3] = value;\r\n          } else {\r\n            obj[p1][p2] = {\r\n              [p3]: value,\r\n            };\r\n          }\r\n        } else {\r\n          obj[p1] = {\r\n            [p2]: {\r\n              [p3]: value,\r\n            },\r\n          };\r\n        }\r\n      } else {\r\n        obj[key] = value;\r\n      }\r\n    });\r\n    return obj;\r\n  };\r\n  const updateFormData = () => {\r\n    setFormData(getFormData());\r\n  };\r\n  return { form, formData, updateFormData };\r\n};\r\n\r\nexport default useFormData;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst DropDown = ({ label, name, defaultValue = '', required, options }) => {\r\n  const [selectedValue, setSelectedValue] = useState(defaultValue);\r\n  const optionsSelect = [\r\n    ['', 'Seleccione una opción', true],\r\n    ...Object.entries(options),\r\n  ];\r\n  useEffect(() => {\r\n    setSelectedValue(defaultValue);\r\n  }, [defaultValue]);\r\n  return (\r\n    <label\r\n      htmlFor={name}\r\n      className='flex flex-col my-3 m-auto text-center rounded-md text-black text-lg'\r\n    >\r\n      <span>{label}</span>\r\n      <select\r\n        required={required}\r\n        name={name}\r\n        className='input'\r\n        value={selectedValue}\r\n        onChange={(e) => setSelectedValue(e.target.value)}\r\n      >\r\n        {optionsSelect.map((o) => {\r\n          return (\r\n            <option key={nanoid()} value={o[0]} disabled={o[2] ?? false}>\r\n              {o[1]}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n","import React, { useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport Input from 'components/Input';\r\nimport ButtonLoading from 'components/ButtonLoading';\r\nimport useFormData from 'hooks/useFormData';\r\nimport { toast } from 'react-toastify';\r\nimport { EDITAR_USUARIO } from 'graphql/usuarios/mutations';\r\nimport DropDown from 'components/DropDown';\r\nimport { Enum_EstadoUsuario } from 'utils/enum';\r\nimport { GET_USUARIO } from 'graphql/usuarios/queries';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst EditarUsuario = () => {\r\n  const { form, formData, updateFormData } = useFormData(null);\r\n  const { _id } = useParams();\r\n\r\n  const {\r\n    data: queryData,\r\n    error: queryError,\r\n    loading: queryLoading,\r\n  } = useQuery(GET_USUARIO, { variables: { _id } });\r\n\r\n  const [\r\n    editarUsuario,\r\n    { data: mutationData, loading: mutationLoading, error: mutationError },\r\n  ] = useMutation(EDITAR_USUARIO);\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    delete formData.rol;\r\n    editarUsuario({\r\n      variables: { _id, ...formData },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mutationData) {\r\n      toast.success('Usuario modificado correctamente');\r\n    }\r\n  }, [mutationData]);\r\n\r\n  useEffect(() => {\r\n    if (mutationError) {\r\n      toast.error('Error modificando el usuario');\r\n    }\r\n\r\n    if (queryError) {\r\n      toast.error('Error consultando el usuario');\r\n    }\r\n  }, [queryError, mutationError]);\r\n\r\n  if (queryLoading)\r\n    return (\r\n      <ReactLoading type='cylon' color='#4c2882' height={667} width={365} />\r\n    );\r\n\r\n  return (\r\n    <div className='flew flex-col w-full h-full items-center justify-center p-10'>\r\n      <Link to='/Usuarios'>\r\n        <i className='fas fa-arrow-left text-gray-600 cursor-pointer font-bold text-xl hover:text-gray-900' />\r\n      </Link>\r\n      <h1 className='m-4 text-3xl text-gray-800 font-bold text-center'>\r\n        Editar Usuario\r\n      </h1>\r\n      <form\r\n        onSubmit={submitForm}\r\n        onChange={updateFormData}\r\n        ref={form}\r\n        className='flex flex-col items-center justify-center min-w-min w-1/3 mx-auto bg-gray-100  py-3 text-center text-xl text-gray-500 uppercase font-bold h-full rounded-3xl'\r\n      >\r\n        <Input\r\n          label='Identificación:'\r\n          type='text'\r\n          name='identificacion'\r\n          defaultValue={queryData.Usuario.identificacion}\r\n          required\r\n        />\r\n        <Input\r\n          label='Nombre de la persona:'\r\n          type='text'\r\n          name='nombre'\r\n          defaultValue={queryData.Usuario.nombre}\r\n          required\r\n        />\r\n        <Input\r\n          label='Apellido de la persona:'\r\n          type='text'\r\n          name='apellido'\r\n          defaultValue={queryData.Usuario.apellido}\r\n          required\r\n        />\r\n        <Input\r\n          label='Correo de la persona:'\r\n          type='email'\r\n          name='correo'\r\n          defaultValue={queryData.Usuario.correo}\r\n          required\r\n        />\r\n        <DropDown\r\n          label='Estado de la persona:'\r\n          name='estado'\r\n          defaultValue={queryData.Usuario.estado}\r\n          required\r\n          options={Enum_EstadoUsuario}\r\n        />\r\n        <span className='m-auto text-center rounded-md text-black text-lg'>\r\n          Rol del usuario: {queryData.Usuario.rol}\r\n        </span>\r\n        <ButtonLoading\r\n          disabled={Object.keys(formData).length === 0}\r\n          loading={mutationLoading}\r\n          text='Confirmar'\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditarUsuario;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { GET_USUARIOS } from 'graphql/usuarios/queries';\r\nimport { ELIMINAR_USUARIO } from 'graphql/usuarios/mutations';\r\nimport ReactLoading from 'react-loading';\r\nimport { Dialog } from '@material-ui/core';\r\nimport { Enum_Rol, Enum_EstadoUsuario } from 'utils/enum';\r\n\r\nconst Estudiantes = () => {\r\n  const { data, error, loading, refetch } = useQuery(GET_USUARIOS);\r\n\r\n  // useEffect para datos traido del back\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error('Error consultando los usuarios');\r\n    }\r\n  }, [error]);\r\n\r\n  const [busqueda, setBusqueda] = useState('');\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n\r\n  const bChange = (e) => {\r\n    setBusqueda(e.target.value);\r\n  };\r\n\r\n  const handleDeleteUser = (user) => {\r\n    setCurrentUser(user);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const [\r\n    eliminarUsuario,\r\n    { data: mutationData, loading: loadingMutation, error: mutationError },\r\n  ] = useMutation(ELIMINAR_USUARIO);\r\n\r\n  useEffect(() => {\r\n    if (mutationData) {\r\n      toast.success('Usuario eliminado correctamente');\r\n      refetch();\r\n    }\r\n  }, [mutationData, loadingMutation]);\r\n\r\n  useEffect(() => {\r\n    if (mutationError) {\r\n      toast.error('Error eliminando el usuario');\r\n    }\r\n  }, [mutationError]);\r\n\r\n  if (loading || loadingMutation)\r\n    return (\r\n      <ReactLoading type='cylon' color='#4c2882' height={667} width={365} />\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <h1 className='text-3xl font-extrabold text-gray-900 my-3 text-center'>\r\n        USUARIOS DEL SISTEMA\r\n      </h1>\r\n      <br />\r\n      <div className='rounded-md shadow-sm -space-y-px p-3'>\r\n        <label>\r\n          <b>Buscar:</b>\r\n        </label>\r\n        <input\r\n          className='appearance-none rounded-none relative block w-full px-3 py-2 border-2 border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\r\n          value={busqueda}\r\n          placeholder='Búsqueda por Identificación o Nombre'\r\n          onChange={bChange}\r\n        />\r\n      </div>\r\n      <div className='p-3'>\r\n        <table className='tabla w-full'>\r\n          <thead>\r\n            <tr>\r\n              <th scope='col'>Identificación</th>\r\n              <th scope='col'>Nombre</th>\r\n              <th scope='col'>Apellido</th>\r\n              <th scope='col'>Correo</th>\r\n              <th scope='col'>Rol</th>\r\n              <th scope='col'>Estado</th>\r\n              <th scope='col'>Acciones</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data &&\r\n              data.Usuarios.filter((user) => {\r\n                if (\r\n                  user._id\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .includes(busqueda.toLowerCase()) ||\r\n                  user.nombre.toLowerCase().includes(busqueda.toLowerCase()) ||\r\n                  user.identificacion\r\n                    .toLowerCase()\r\n                    .includes(busqueda.toLowerCase())\r\n                ) {\r\n                  return user;\r\n                }\r\n              }).map((item) => {\r\n                return (\r\n                  <tr key={item._id}>\r\n                    <td>{item.identificacion}</td>\r\n                    <td>{item.nombre}</td>\r\n                    <td>{item.apellido}</td>\r\n                    <td>{item.correo}</td>\r\n                    <td>{Enum_Rol[item.rol]}</td>\r\n                    <td>{Enum_EstadoUsuario[item.estado]}</td>\r\n                    <td>\r\n                      <Link to={`/usuarios/EditarUsuario/${item._id}`}>\r\n                        <button\r\n                          type='button'\r\n                          className='col-span-2 bg-blue-400 p-2 rounded-full shadow-md hover:bg-blue-600 text-white'\r\n                        >\r\n                          Editar\r\n                        </button>{' '}\r\n                      </Link>\r\n                      {'   '}\r\n                      <button\r\n                        type='button'\r\n                        className='col-span-2 bg-red-400 p-2 rounded-full shadow-md hover:bg-red-600 text-white'\r\n                        onClick={() => handleDeleteUser(item)}\r\n                      >\r\n                        Eliminar\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <Dialog open={openDialog}>\r\n        <div className='p-8 flex flex-col'>\r\n          <h1 className='text-gray-900 text-2xl font-bold'>\r\n            ¿Está seguro de querer eliminar el usuario?\r\n          </h1>\r\n          <div className='flex w-full items-center justify-center my-4'>\r\n            <button\r\n              type='button'\r\n              onClick={() =>\r\n                eliminarUsuario({\r\n                  variables: {\r\n                    _id: currentUser._id,\r\n                    correo: currentUser.correo,\r\n                  },\r\n                }).then(() => setOpenDialog(false))\r\n              }\r\n              className='mx-2 px-4 py-2 bg-green-500 text-white hover:bg-green-700 rounded-md shadow-md'\r\n            >\r\n              Sí\r\n            </button>\r\n            <button\r\n              type='button'\r\n              onClick={() => setOpenDialog(false)}\r\n              className='mx-2 px-4 py-2 bg-red-500 text-white hover:bg-red-700 rounded-md shadow-md'\r\n            >\r\n              No\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Estudiantes;\r\n","import { useUser } from 'context/userContext';\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { toast } from 'react-toastify';\r\nimport { EDITAR_USUARIO } from 'graphql/usuarios/mutations';\r\nimport { CAMBIAR_CLAVE } from 'graphql/auth/mutations';\r\nimport { Modal, TextField, Button, makeStyles } from '@material-ui/core';\r\n\r\nimport { useAuth } from 'context/authContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    position: 'absolute',\r\n    width: 500,\r\n    backgroundColor: 'white',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: '16px 32px 24px',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%,-50%)',\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nconst Perfil = () => {\r\n  const { userData } = useUser();\r\n  const navigate = useNavigate();\r\n  const [mensaje, guardarMensaje] = useState(null);\r\n  const [editar, setEditar] = useState(false);\r\n  const [editarUsuario] = useMutation(EDITAR_USUARIO, {\r\n    onCompleted() {\r\n      toast.success('Usuario actualizado con exito');\r\n      setEditar(false);\r\n    },\r\n  });\r\n\r\n  // declaracion de variables para cambiar la clave\r\n  const [cambiarClave] = useMutation(CAMBIAR_CLAVE, {\r\n    onCompleted() {\r\n      toast.success('Clave Actualizada');\r\n    },\r\n  });\r\n\r\n  const styles = useStyles();\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const abrirCerrarModal = () => {\r\n    setModal(!modal);\r\n  };\r\n  const [claveAnterior, setClaveAnterior] = useState('');\r\n  const [passwordNuevo, setPasswordNuevo] = useState('');\r\n\r\n  const anteriorClave = (event) => {\r\n    setClaveAnterior(event.target.value);\r\n  };\r\n\r\n  const nuevaClave = (event) => {\r\n    setPasswordNuevo(event.target.value);\r\n  };\r\n\r\n  const { setToken } = useAuth();\r\n  const deleteToken = () => {\r\n    setToken(null);\r\n  };\r\n\r\n  const invocarFuncion = async () => {\r\n    try {\r\n      cambiarClave({\r\n        variables: {\r\n          correo: userData.correo,\r\n          password: passwordNuevo,\r\n          clave: claveAnterior,\r\n        },\r\n      });\r\n      deleteToken();\r\n      navigate('/');\r\n      // abrirCerrarModal();\r\n      // deleteToken();\r\n    } catch (error) {\r\n      guardarMensaje(error.message.replace('GraphQL error: ', ''));\r\n      setTimeout(() => {\r\n        guardarMensaje(null);\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const mostrarMensaje = () => {\r\n    return (\r\n      <div className='bg-white py-5 px-3 w-full my-3 max-w-sm text-center mx-auto text-indigo-500 font-bold text-xl'>\r\n        <p>{mensaje}</p>\r\n      </div>\r\n    );\r\n  };\r\n  //* *************************** */\r\n  // Componente del Formulario Modal\r\n  const body = (\r\n    <div className={styles.modal}>\r\n      {mensaje && mostrarMensaje()}\r\n      <div align='center'>\r\n        <h2>Cambiar contraseña</h2>\r\n      </div>\r\n      <TextField\r\n        onChange={anteriorClave}\r\n        label='Contraseña anterior'\r\n        className={styles.TextField}\r\n        type='password'\r\n      />\r\n      <br />\r\n      <TextField\r\n        onChange={nuevaClave}\r\n        label='Nueva contraseña'\r\n        className={styles.TextField}\r\n        type='password'\r\n      />\r\n      <br /> <br />\r\n      <div align='center'>\r\n        <Button onClick={() => invocarFuncion()} color='primary'>\r\n          Enviar\r\n        </Button>\r\n        <Button onClick={() => abrirCerrarModal()}>Cancelar</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // const datos = { clave: '', password: '' };\r\n\r\n  const usuario = {\r\n    _id: userData._id,\r\n    nombre: userData.nombre,\r\n    apellido: userData.apellido,\r\n    identificacion: userData.identificacion,\r\n    rol: userData.rol,\r\n    estado: 'AUTORIZADO',\r\n    correo: userData.correo,\r\n  };\r\n  /* useEffect(() => {\r\n    if (mutationData) {\r\n      toast.success('Usuario modificado correctamente');\r\n    }\r\n  }, [mutationData]); */\r\n\r\n  return (\r\n    <div className='flew flex-col w-full h-full items-center justify-center p-4'>\r\n      <header>\r\n        <Link to='/'>\r\n          <i className='fas fa-arrow-left text-gray-600 cursor-pointer font-bold text-xl hover:text-gray-900' />\r\n        </Link>\r\n      </header>\r\n\r\n      <h1 className='mb-4 text-3xl text-gray-800 font-bold text-center'>\r\n        {userData.nombre} {userData.apellido}\r\n      </h1>\r\n      <form\r\n        className='flex flex-col gap-3 items-center justify-center min-w-min w-1/3 mx-auto bg-gray-100 text-center text-xl text-gray-500 uppercase font-bold h-11/12 rounded-3xl'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          editarUsuario({\r\n            variables: {\r\n              _id: usuario._id,\r\n              rol: usuario.rol,\r\n              estado: usuario.estado,\r\n              nombre: usuario.nombre.value,\r\n              apellido: usuario.apellido.value,\r\n              identificacion: usuario.identificacion.value,\r\n              correo: usuario.correo.value,\r\n            },\r\n          });\r\n        }}\r\n      >\r\n        <span className=' m-auto text-center rounded-md text-black text-lg mt-8x'>\r\n          {userData.rol}\r\n        </span>\r\n        <label\r\n          htmlFor='nombre'\r\n          className=' m-auto text-center rounded-md text-black text-lg'\r\n        >\r\n          Nombre:\r\n        </label>\r\n        <input\r\n          type='text'\r\n          className={editar ? 'text-black' : 'text-center'}\r\n          id='nombre'\r\n          defaultValue={userData.nombre}\r\n          ref={(nombre) => (usuario.nombre = nombre)}\r\n        />\r\n        <label\r\n          htmlFor='apellido'\r\n          className='m-auto text-center rounded-md text-black text-lg'\r\n        >\r\n          Apellido:\r\n        </label>\r\n        <input\r\n          type='text'\r\n          id='apellido'\r\n          className={editar ? 'text-black' : 'text-center'}\r\n          defaultValue={userData.apellido}\r\n          ref={(apellido) => (usuario.apellido = apellido)}\r\n        />\r\n        <label\r\n          htmlFor='identificacion'\r\n          className=' m-auto text-center rounded-md text-black text-lg'\r\n        >\r\n          Identificacion:\r\n        </label>\r\n        <input\r\n          type='text'\r\n          id='identificacion'\r\n          className={editar ? 'text-black' : 'text-center'}\r\n          defaultValue={userData.identificacion}\r\n          ref={(identificacion) => (usuario.identificacion = identificacion)}\r\n        />\r\n        <label\r\n          htmlFor='correo'\r\n          className='m-auto text-center rounded-md text-black text-lg'\r\n        >\r\n          Correo:\r\n        </label>\r\n        <input\r\n          type='text'\r\n          id='correo'\r\n          className={editar ? 'text-black' : 'text-center'}\r\n          defaultValue={userData.correo}\r\n          ref={(correo) => (usuario.correo = correo)}\r\n        />\r\n        <div className={styles.container}>\r\n          <br />\r\n          <button\r\n            type='button'\r\n            className='bg-indigo-700 text-white font-bold text-lg py-2 px-4  rounded-xl hover:bg-indigo-500 shadow-md my-4 mx-4 disabled:opacity-50 disabled:bg-gray-700'\r\n            onClick={() => abrirCerrarModal()}\r\n          >\r\n            Modificar Clave\r\n          </button>\r\n          <Modal open={modal} onClose={abrirCerrarModal}>\r\n            {body}\r\n          </Modal>\r\n        </div>\r\n        {editar ? (\r\n          <div>\r\n            <button\r\n              type='submit'\r\n              className='inline-block bg-green-700 text-white font-bold text-lg py-2 px-4  rounded-xl hover:bg-green-500 shadow-md my-4 mx-1 disabled:opacity-50 disabled:bg-gray-700'\r\n            >\r\n              {' '}\r\n              Confirmar\r\n            </button>\r\n            <button\r\n              type='button'\r\n              className='inline-block bg-red-700 text-white font-bold text-lg py-2 px-4  rounded-xl hover:bg-red-500 shadow-md my-4 mx-1 disabled:opacity-50 disabled:bg-gray-700'\r\n              onClick={() => setEditar(!editar)}\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <button\r\n            type='button'\r\n            className='bg-indigo-700 text-white font-bold text-lg py-2 px-4  rounded-xl hover:bg-indigo-500 shadow-md my-4 mx-4 disabled:opacity-50 disabled:bg-gray-700'\r\n            onClick={() => setEditar(!editar)}\r\n          >\r\n            Editar perfil\r\n          </button>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Perfil;\r\n","import { gql } from '@apollo/client';\r\n\r\nconst GET_INSCRIPCIONES = gql`\r\n  query Inscripciones {\r\n    Inscripciones {\r\n      _id\r\n      estado\r\n      estudiante {\r\n        _id\r\n        nombre\r\n        apellido\r\n        correo\r\n      }\r\n      proyecto {\r\n        _id\r\n        nombre\r\n        lider {\r\n          _id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { GET_INSCRIPCIONES };\r\n","import Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst AccordionStyled = styled((props) => <Accordion {...props} />)(() => ({\r\n  backgroundColor: '#919191',\r\n}));\r\nconst AccordionSummaryStyled = styled((props) => (\r\n  <AccordionSummary {...props} />\r\n))(() => ({\r\n  backgroundColor: '#919191',\r\n}));\r\nconst AccordionDetailsStyled = styled((props) => (\r\n  <AccordionDetails {...props} />\r\n))(() => ({\r\n  backgroundColor: '#ccc',\r\n}));\r\n\r\nexport { AccordionStyled, AccordionSummaryStyled, AccordionDetailsStyled };\r\n","import React, { useEffect } from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { GET_INSCRIPCIONES } from 'graphql/inscripciones/queries';\r\nimport {\r\n  APROBAR_INSCRIPCION,\r\n  RECHAZAR_INSCRIPCION,\r\n} from 'graphql/inscripciones/mutaciones';\r\nimport ButtonLoading from 'components/ButtonLoading';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  AccordionStyled,\r\n  AccordionSummaryStyled,\r\n  AccordionDetailsStyled,\r\n} from 'components/Accordion';\r\nimport PrivateRoute from 'components/PrivateRoute';\r\n\r\nconst IndexInscription = () => {\r\n  const { data, loading, refetch } = useQuery(GET_INSCRIPCIONES);\r\n\r\n  useEffect(() => {}, [data]);\r\n  if (loading)\r\n    return (\r\n      <ReactLoading type='cylon' color='#4c2882' height={667} width={365} />\r\n    );\r\n  return (\r\n    <PrivateRoute roleList={['ADMINISTRADOR', 'LIDER']}>\r\n      <div className='p-10'>\r\n        <div>Pagina de inscripciones</div>\r\n        <div className='my-4'>\r\n          <AccordionInscripcion\r\n            titulo='Inscripciones aprobadas'\r\n            data={data.Inscripciones.filter((el) => el.estado === 'ACEPTADA')}\r\n          />\r\n          <AccordionInscripcion\r\n            titulo='Inscripciones pendientes'\r\n            data={data.Inscripciones.filter((el) => el.estado === 'PENDIENTE')}\r\n            refetch={refetch}\r\n          />\r\n          <AccordionInscripcion\r\n            titulo='Inscripciones rechazadas'\r\n            data={data.Inscripciones.filter((el) => el.estado === 'RECHAZADA')}\r\n          />\r\n        </div>\r\n      </div>\r\n    </PrivateRoute>\r\n  );\r\n};\r\n\r\nconst AccordionInscripcion = ({ data, titulo, refetch = () => {} }) => {\r\n  return (\r\n    <AccordionStyled>\r\n      <AccordionSummaryStyled>\r\n        {titulo} ({data.length})\r\n      </AccordionSummaryStyled>\r\n      <AccordionDetailsStyled>\r\n        <div className='flex'>\r\n          {data &&\r\n            data.map((inscripcion) => {\r\n              return (\r\n                <Inscripcion inscripcion={inscripcion} refetch={refetch} />\r\n              );\r\n            })}\r\n        </div>\r\n      </AccordionDetailsStyled>\r\n    </AccordionStyled>\r\n  );\r\n};\r\n\r\nconst Inscripcion = ({ inscripcion, refetch }) => {\r\n  const [aprobarInscripcion, { data, loading, error }] =\r\n    useMutation(APROBAR_INSCRIPCION);\r\n  const [rechazarInscripcion, { data: dataMutation, error: errorMutation }] =\r\n    useMutation(RECHAZAR_INSCRIPCION);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      toast.success('Inscripcion aprobada con exito');\r\n      refetch();\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error('Error aprobando la inscripcion');\r\n    }\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (dataMutation) {\r\n      toast.success('Inscripcion rechazada');\r\n      refetch();\r\n    }\r\n  }, [dataMutation]);\r\n\r\n  useEffect(() => {\r\n    if (errorMutation) {\r\n      toast.error('Error rechazando la inscripcion');\r\n    }\r\n  }, [errorMutation]);\r\n\r\n  const cambiarEstadoInscripcion = (variable) => {\r\n    if (variable === 0) {\r\n      aprobarInscripcion({\r\n        variables: {\r\n          aprobarInscripcionId: inscripcion._id,\r\n        },\r\n      });\r\n    } else {\r\n      rechazarInscripcion({\r\n        variables: {\r\n          rechazarInscripcionId: inscripcion._id,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='bg-gray-900 text-gray-50 flex flex-col p-6 m-2 rounded-lg shadow-xl'>\r\n      <span>Proyecto {inscripcion.proyecto.nombre}</span>\r\n      <span>{inscripcion.estudiante.nombre}</span>\r\n      <span>{inscripcion.estado}</span>\r\n      {inscripcion.estado === 'PENDIENTE' && (\r\n        <ButtonLoading\r\n          onClick={() => {\r\n            cambiarEstadoInscripcion(0);\r\n          }}\r\n          text='Aprobar Inscripción'\r\n          loading={loading}\r\n          disabled={false}\r\n        />\r\n      )}\r\n      {inscripcion.estado === 'PENDIENTE' && (\r\n        <ButtonLoading\r\n          onClick={() => {\r\n            cambiarEstadoInscripcion(1);\r\n          }}\r\n          text='Rechazar Inscripción'\r\n          loading={loading}\r\n          disabled={false}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndexInscription;\r\n","import { gql } from '@apollo/client';\r\n\r\nconst CREAR_AVANCE = gql`\r\n  mutation Mutation(\r\n    $proyecto: String!\r\n    $fecha: Date\r\n    $descripcion: String!\r\n    $creadoPor: String!\r\n  ) {\r\n    crearAvance(\r\n      proyecto: $proyecto\r\n      fecha: $fecha\r\n      descripcion: $descripcion\r\n      creadoPor: $creadoPor\r\n    ) {\r\n      proyecto {\r\n        _id\r\n      }\r\n      fecha\r\n      descripcion\r\n      creadoPor {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ACTUALIZAR_AVANCE = gql`\r\n  mutation CreateAvance($createAvanceId: String!, $observaciones: String!) {\r\n    createAvance(id: $createAvanceId, observaciones: $observaciones) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\nconst EDITAR_AVANCE = gql`\r\n  mutation EditarAvance($editarAvanceId: String!, $descripcion: String) {\r\n    editarAvance(id: $editarAvanceId, descripcion: $descripcion) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport { CREAR_AVANCE, ACTUALIZAR_AVANCE, EDITAR_AVANCE };\r\n","import React, { useEffect } from 'react';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport useFormData from 'hooks/useFormData';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Input from 'components/Input';\r\nimport { EDITAR_PROYECTO } from 'graphql/proyectos/mutations';\r\nimport { GET_PROYECTO } from 'graphql/proyectos/queries';\r\nimport { CREAR_AVANCE } from 'graphql/avances/mutations';\r\nimport ReactLoading from 'react-loading';\r\nimport ButtonLoading from 'components/ButtonLoading';\r\nimport { toast } from 'react-toastify';\r\nimport { useUser } from 'context/userContext';\r\n\r\nconst Avances = () => {\r\n  const { _id } = useParams();\r\n  const { userData } = useUser();\r\n  const {\r\n    data: project,\r\n    error,\r\n    loading,\r\n    refetch,\r\n  } = useQuery(GET_PROYECTO, { variables: { _id } });\r\n  const { form, formData, updateFormData } = useFormData();\r\n  const [editarProyecto] = useMutation(EDITAR_PROYECTO);\r\n  const [\r\n    crearAvance,\r\n    { data: mutationData, loading: mutationLoading, error: mutationError },\r\n  ] = useMutation(CREAR_AVANCE);\r\n\r\n  useEffect(() => {}, [project]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error('Error consultando los datos');\r\n    }\r\n  }, [error]);\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    formData.creadoPor = userData._id;\r\n    formData.proyecto = project.Proyecto._id;\r\n\r\n    crearAvance({\r\n      variables: formData,\r\n    });\r\n    editarProyecto({\r\n      variables: {\r\n        _id: project.Proyecto._id,\r\n        lider: project.Proyecto.lider._id,\r\n        nombre: project.Proyecto.nombre,\r\n        presupuesto: parseInt(project.Proyecto.presupuesto),\r\n        estado: project.Proyecto.estado,\r\n        fase: 'DESARROLLO',\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mutationData) {\r\n      toast.success('Se ha creado con éxito');\r\n      refetch();\r\n    }\r\n  }, [mutationData]);\r\n\r\n  useEffect(() => {\r\n    if (mutationError) {\r\n      toast.error('Error  realizando creación');\r\n    }\r\n  }, [mutationError]);\r\n\r\n  if (loading || mutationLoading)\r\n    return (\r\n      <ReactLoading type='cylon' color='#4c2882' height={667} width={365} />\r\n    );\r\n\r\n  return (\r\n    <div className='p-10 flex flex-col items-center'>\r\n      <div className='self-start'>\r\n        <Link to={`/proyectos/${_id}`}>\r\n          <i className='fas fa-arrow-left' />\r\n        </Link>\r\n      </div>\r\n      <h1 className='text-2xl font-bold text-gray-900'>\r\n        Crear Nuevo Avance en {project.Proyecto.nombre}\r\n      </h1>\r\n      <form\r\n        onSubmit={submitForm}\r\n        onChange={updateFormData}\r\n        ref={form}\r\n        className='flex flex-col items-center justify-center min-w-min w-1/3 mx-auto bg-gray-100  py-3 text-center text-xl text-gray-500 uppercase font-bold h-full rounded-3xl'\r\n      >\r\n        <Input\r\n          name='fecha'\r\n          label='Fecha de actualización'\r\n          required\r\n          type='date'\r\n        />\r\n        <Input\r\n          name='descripcion'\r\n          label='Descripción del avance'\r\n          required\r\n          type='text'\r\n        />\r\n\r\n        <ButtonLoading text='Crear Avance' loading={false} disabled={false} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avances;\r\n","import { gql } from '@apollo/client';\r\n\r\nconst GET_AVANCES = gql`\r\n  query Avances {\r\n    Avances {\r\n      _id\r\n      proyecto {\r\n        _id\r\n        nombre\r\n      }\r\n      fecha\r\n      descripcion\r\n      observaciones\r\n      creadoPor {\r\n        _id\r\n        nombre\r\n        apellido\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_AVANCE_BY_PROJECT = gql`\r\n  query filtrarAvance($_id: String!) {\r\n    filtrarAvance(_id: $_id) {\r\n      _id\r\n      proyecto {\r\n        _id\r\n        nombre\r\n      }\r\n      fecha\r\n      descripcion\r\n      observaciones\r\n      creadoPor {\r\n        identificacion\r\n        nombre\r\n        apellido\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_AVANCE_ID = gql`\r\n  query avanceFiltrado($id: String!) {\r\n    avanceFiltrado(_id: $id) {\r\n      fecha\r\n      descripcion\r\n      proyecto {\r\n        _id\r\n        nombre\r\n      }\r\n    }\r\n  }\r\n  # query avanceFiltrado($_id: String!) {\r\n  #     avanceFiltrado(_id: $_id) {\r\n  #         _id\r\n  #         proyecto {\r\n  #             _id\r\n  #             nombre\r\n  #         }\r\n  #         fecha\r\n  #         descripcion\r\n  #         observaciones\r\n  #         creadoPor {\r\n  #             identificacion\r\n  #             nombre\r\n  #             apellido\r\n  #         }\r\n  #     }\r\n  # }\r\n`;\r\n\r\nexport { GET_AVANCES, GET_AVANCE_BY_PROJECT, GET_AVANCE_ID };\r\n","import React, { useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { GET_AVANCE_BY_PROJECT } from 'graphql/avances/queries';\r\nimport PrivateComponent from 'components/PrivateComponent';\r\nimport ReactLoading from 'react-loading';\r\nimport { ACTUALIZAR_AVANCE } from 'graphql/avances/mutations';\r\n\r\nconst VerAvance = () => {\r\n  const { _id } = useParams();\r\n  const { data, error, loading, refetch } = useQuery(GET_AVANCE_BY_PROJECT, {\r\n    variables: { _id },\r\n  });\r\n\r\n  const [\r\n    createAvance,\r\n    { data: mutationData, loading: mutationLoading, error: mutationError },\r\n  ] = useMutation(ACTUALIZAR_AVANCE);\r\n\r\n  useEffect(() => {\r\n    if (mutationData) {\r\n      refetch();\r\n    }\r\n  }, [mutationData]);\r\n\r\n  useEffect(() => {\r\n    if (mutationError) {\r\n      toast.error('Error realizando creacion');\r\n    }\r\n  }, [mutationError]);\r\n\r\n  // useEffect para datos traido del back\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error('Error consultando los datos');\r\n    }\r\n  }, [error]);\r\n\r\n  if (loading || mutationLoading)\r\n    return (\r\n      <ReactLoading type='cylon' color='#4c2882' height={667} width={365} />\r\n    );\r\n\r\n  const addObservacion = (avanceId) => {\r\n    const observacion = document.getElementsByName(`obs${avanceId._id}`)[0]\r\n      .value;\r\n    if (observacion) {\r\n      createAvance({\r\n        variables: {\r\n          createAvanceId: avanceId._id,\r\n          observaciones: observacion,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='self-start p-10'>\r\n        <Link to={`/proyectos/${_id}`}>\r\n          <i className='fas fa-arrow-left' />\r\n        </Link>\r\n      </div>\r\n      <h1 className='text-3xl font-extrabold text-gray-900 my-3 text-center'>\r\n        Avances del proyecto {data.filtrarAvance[0].proyecto.nombre}\r\n      </h1>\r\n      <br />\r\n\r\n      <div className='p-3'>\r\n        <table className='tabla'>\r\n          <thead>\r\n            <tr>\r\n              <th scope='col'>Fecha</th>\r\n              <th scope='col'>Descripcion</th>\r\n              <th scope='col'>Creado Por</th>\r\n              <th scope='col'>Observaciones</th>\r\n              <th scope='col'>Acciones</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.filtrarAvance.map((item) => {\r\n              return (\r\n                <tr key={item._id}>\r\n                  <td>{item.fecha.split('T')[0]}</td>\r\n                  <td>{item.descripcion}</td>\r\n                  <td>{item.creadoPor.nombre}</td>\r\n                  <td>\r\n                    <ul>\r\n                      {item.observaciones.map((obs) => {\r\n                        return <li key={obs}>{obs}</li>;\r\n                      })}\r\n                    </ul>\r\n                  </td>\r\n                  <PrivateComponent roleList={['LIDER']}>\r\n                    <td>\r\n                      <input\r\n                        className='rounded-md\tmb-2\tborder-2\tborder-blue-300\t'\r\n                        type='text'\r\n                        name={`obs${item._id}`}\r\n                      />{' '}\r\n                      <br />\r\n                      <button\r\n                        type='button'\r\n                        className='col-span-2 bg-blue-400 p-2 rounded-full shadow-md hover:bg-blue-600 text-white'\r\n                        onClick={() => addObservacion(item)}\r\n                      >\r\n                        Agregar Observacion\r\n                      </button>\r\n                    </td>\r\n                  </PrivateComponent>\r\n                  <PrivateComponent roleList={['ESTUDIANTE']}>\r\n                    <td>\r\n                      <Link to={`/VerAvance/ActualizarAvance/${item._id}`}>\r\n                        <button\r\n                          type='button'\r\n                          className='col-span-2 bg-blue-400 p-2 rounded-full shadow-md hover:bg-blue-600 text-white'\r\n                        >\r\n                          Editar\r\n                        </button>{' '}\r\n                      </Link>\r\n                    </td>\r\n                  </PrivateComponent>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerAvance;\r\n","import React, { useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport Input from 'components/Input';\r\nimport ButtonLoading from 'components/ButtonLoading';\r\nimport useFormData from 'hooks/useFormData';\r\nimport { toast } from 'react-toastify';\r\nimport ReactLoading from 'react-loading';\r\nimport { EDITAR_AVANCE } from 'graphql/avances/mutations';\r\nimport { GET_AVANCE_ID } from 'graphql/avances/queries';\r\n\r\nconst ActualizarAvance = () => {\r\n  const { form, formData, updateFormData } = useFormData(null);\r\n  const { _id } = useParams();\r\n  const moment = require('moment');\r\n  const {\r\n    data: queryData,\r\n    error: queryError,\r\n    loading: queryLoading,\r\n  } = useQuery(GET_AVANCE_ID, { variables: { id: _id } });\r\n\r\n  const [\r\n    editarAvance,\r\n    { data: mutationData, loading: mutationLoading, error: mutationError },\r\n  ] = useMutation(EDITAR_AVANCE);\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    editarAvance({\r\n      variables: { editarAvanceId: _id, ...formData },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mutationData) {\r\n      toast.success('Avance modificado correctamente');\r\n    }\r\n  }, [mutationData]);\r\n\r\n  useEffect(() => {\r\n    if (mutationError) {\r\n      toast.error('Error modificando el avance');\r\n    }\r\n\r\n    if (queryError) {\r\n      toast.error('Error consultando el avance');\r\n    }\r\n  }, [queryError, mutationError]);\r\n\r\n  if (queryLoading)\r\n    return (\r\n      <ReactLoading type='cylon' color='#4c2882' height={667} width={365} />\r\n    );\r\n\r\n  return (\r\n    <div className='p-10 flex flex-col items-center'>\r\n      <div className='self-start'>\r\n        <Link to={`/VerAvance/${queryData.avanceFiltrado[0].proyecto._id}`}>\r\n          <i className='fas fa-arrow-left' />\r\n        </Link>\r\n      </div>\r\n      <h1 className='text-2xl font-bold text-gray-900'>\r\n        Modificar Avance en {queryData.avanceFiltrado[0].proyecto.nombre}\r\n      </h1>\r\n      <form\r\n        onSubmit={submitForm}\r\n        onChange={updateFormData}\r\n        ref={form}\r\n        className='flex flex-col items-center justify-center min-w-min w-1/3 mx-auto bg-gray-100  py-3 text-center text-xl text-gray-500 uppercase font-bold h-full rounded-3xl'\r\n      >\r\n        <Input\r\n          name='fecha'\r\n          label='Fecha de actualización'\r\n          required\r\n          type='text'\r\n          defaultValue={moment(queryData.avanceFiltrado[0].fecha).format(\r\n            'DD-MM-YYYY'\r\n          )}\r\n        />\r\n        <Input\r\n          name='descripcion'\r\n          label='Descripción del avance'\r\n          required\r\n          type='text'\r\n          defaultValue={queryData.avanceFiltrado[0].descripcion}\r\n        />\r\n        <ButtonLoading\r\n          disabled={Object.keys(formData).length === 0}\r\n          loading={mutationLoading}\r\n          text='Confirmar'\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActualizarAvance;\r\n","import React from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nconst AuthLayout = () => {\r\n  return (\r\n    <div className='flex flex-col md:flex-row flex-no-wrap h-screen'>\r\n      <div className='flex w-full h-full'>\r\n        <div className='w-full h-full  overflow-y-scroll'>\r\n          <Outlet />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthLayout;\r\n","import React, { useState } from 'react';\r\nimport Input from 'components/Input';\r\nimport ButtonLoading from 'components/ButtonLoading';\r\nimport useFormData from 'hooks/useFormData';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { REGISTRO } from 'graphql/auth/mutations';\r\nimport { useMutation } from '@apollo/client';\r\nimport DropDown from 'components/DropDown';\r\nimport { Enum_Rol } from 'utils/enum';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const { form, formData, updateFormData } = useFormData();\r\n  const [mensaje, guardarMensaje] = useState(null);\r\n  const [register] = useMutation(REGISTRO);\r\n\r\n  const submitForm = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      register({ variables: formData });\r\n\r\n      Swal.fire(\r\n        'Creado',\r\n        'Usuario creado, debes esperar hasta que tu cuenta sea activada por un administrador o Líder',\r\n        'success'\r\n      );\r\n      navigate('/auth/login');\r\n    } catch (error) {\r\n      guardarMensaje(error.message.replace('GraphQL error: ', ''));\r\n\r\n      setTimeout(() => {\r\n        guardarMensaje(null);\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const mostrarMensaje = () => {\r\n    return (\r\n      <div className='bg-white py-5 px-3 w-full my-3 max-w-sm text-center mx-auto text-indigo-500 font-bold text-xl'>\r\n        <p>{mensaje}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //     if (dataMutation) {\r\n  //       if (dataMutation.register.token) {\r\n  //         setToken(dataMutation.registro.token);\r\n  //         navigate('/');\r\n  //       }\r\n  //     }\r\n  //   }, [dataMutation],setToken,navigate);\r\n\r\n  return (\r\n    <div className='flex flex-col h-full w-full items-center justify-center'>\r\n      {mensaje && mostrarMensaje()}\r\n      <h1 className='text-3xl font-bold my-4'>Regístrate</h1>\r\n      <form\r\n        className='flex flex-col p-10 bg-gray-100 text-xl text-gray-500 uppercase font-bold rounded-3xl'\r\n        onSubmit={submitForm}\r\n        onChange={updateFormData}\r\n        ref={form}\r\n      >\r\n        <div className='grid grid-cols-2 gap-5'>\r\n          <Input label='Nombre:' name='nombre' type='text' required />\r\n          <Input label='Apellido:' name='apellido' type='text' required />\r\n          <Input\r\n            label='Documento:'\r\n            name='identificacion'\r\n            type='text'\r\n            required\r\n          />\r\n          <DropDown\r\n            label='Rol deseado:'\r\n            name='rol'\r\n            required\r\n            options={Enum_Rol}\r\n          />\r\n          <Input label='Correo:' name='correo' type='email' required />\r\n          <Input label='Contraseña:' name='password' type='password' required />\r\n        </div>\r\n        <ButtonLoading\r\n          disabled={Object.keys(formData).length === 0}\r\n          loading={false}\r\n          text='Registrarme'\r\n        />\r\n      </form>\r\n      <span>¿Ya tienes una cuenta?</span>\r\n      <Link to='/auth/login'>\r\n        <span className='text-blue-700'>Inicia sesión</span>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState } from 'react';\r\nimport Input from 'components/Input';\r\nimport ButtonLoading from 'components/ButtonLoading';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport useFormData from 'hooks/useFormData';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN } from 'graphql/auth/mutations';\r\nimport { useAuth } from 'context/authContext';\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const { setToken } = useAuth();\r\n  const { form, formData, updateFormData } = useFormData();\r\n  const [mensaje, guardarMensaje] = useState(null);\r\n  const [login, { loading: mutationLoading }] = useMutation(LOGIN);\r\n\r\n  const submitForm = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await login({\r\n        variables: formData,\r\n      });\r\n      setToken(data.login.token);\r\n      guardarMensaje(null);\r\n      navigate('/');\r\n    } catch (error) {\r\n      guardarMensaje(error.message.replace('GraphQL error: ', ''));\r\n      setTimeout(() => {\r\n        guardarMensaje(null);\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  const mostrarMensaje = () => {\r\n    return (\r\n      <div className='bg-white py-5 px-3 w-full my-3 max-w-sm text-center mx-auto text-indigo-500 font-bold text-xl'>\r\n        <p>{mensaje}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // const submitForm = (e) => {\r\n  //   e.preventDefault();\r\n  //   login({\r\n  //     variables: formData,\r\n  //   });\r\n  // };\r\n\r\n  //   useEffect(() => {\r\n  //     if (dataMutation) {\r\n  //       if (dataMutation.login.token) {\r\n  //         setToken(dataMutation.login.token);\r\n  //         navigate('/');\r\n  //       }\r\n  //     }\r\n  //   }, [dataMutation,setToken , navigate]);\r\n\r\n  //   useEffect(()=>{\r\n  //     if(mutationError){\r\n  //       toast.error('Ocurrió un error')\r\n  //     }\r\n  //   },[mutationError]);\r\n\r\n  return (\r\n    <div className='flex flex-col items-center justify-center w-full h-full p-10'>\r\n      {mensaje && mostrarMensaje()}\r\n      <h1 className='text-xl font-bold text-gray-900'>Iniciar sesión</h1>\r\n      <form\r\n        className='flex flex-col items-center justify-center min-w-min w-1/3 mx-auto bg-gray-100  py-3 text-center text-xl text-gray-500 uppercase font-bold rounded-3xl'\r\n        onSubmit={submitForm}\r\n        onChange={updateFormData}\r\n        ref={form}\r\n      >\r\n        <Input name='correo' type='email' label='Correo' required />\r\n        <Input name='password' type='password' label='Contraseña' required />\r\n        <ButtonLoading\r\n          disabled={Object.keys(formData).length === 0}\r\n          loading={mutationLoading}\r\n          text='Iniciar Sesión'\r\n        />\r\n      </form>\r\n      <span>¿No tienes una cuenta?</span>\r\n      <Link to='/auth/register'>\r\n        <span className='text-blue-700'>Regístrate</span>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PrivateLayout from 'layouts/PrivateLayout';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport { UserContext } from 'context/userContext';\r\nimport {\r\n  ApolloClient,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n  InMemoryCache,\r\n} from '@apollo/client';\r\nimport Index from 'pages/Index';\r\nimport Proyectos from 'pages/proyectos/Proyectos';\r\nimport NuevoProyecto from 'pages/proyectos/NuevoProyecto';\r\nimport EditarProyecto from 'pages/proyectos/EditarProyecto';\r\nimport VerProyecto from 'pages/proyectos/VerProyecto';\r\nimport Usuarios from 'pages/usuarios/Usuarios';\r\nimport NuevoUsuario from 'pages/NuevoUsuario';\r\nimport EditarUsuario from 'pages/usuarios/EditarUsuario';\r\nimport Estudiantes from 'pages/usuarios/Estudiantes';\r\nimport Perfil from 'pages/Perfil';\r\nimport Inscripciones from 'pages/inscripciones/Inscripciones';\r\nimport 'styles/globals.css';\r\nimport 'styles/tabla.css';\r\nimport Avances from 'pages/avances/Avances';\r\nimport VerAvance from 'pages/avances/VerAvance';\r\nimport ActualizarAvance from 'pages/avances/ActualizarAvance';\r\nimport AuthLayout from 'layouts/AuthLayout';\r\nimport Register from 'pages/auth/register';\r\nimport Login from 'pages/auth/login';\r\nimport { AuthContext } from 'context/authContext';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\n// import PrivateRoute from 'components/PrivateRoute';\r\n\r\n// Reemplazar link de despliegue back\r\nconst httpLink = createHttpLink({\r\n  uri: 'https://backen-mercury.herokuapp.com/graphql',\r\n  // uri: \"http://localhost:4000/graphql\"\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = JSON.parse(localStorage.getItem('token'));\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  const [userData, setUserData] = useState({});\r\n  const [authToken, setAuthToken] = useState('');\r\n\r\n  const setToken = (token) => {\r\n    setAuthToken(token);\r\n    if (token) {\r\n      localStorage.setItem('token', JSON.stringify(token));\r\n    } else {\r\n      localStorage.removeItem('token');\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (authToken) {\r\n      const decoded = jwt_decode(authToken);\r\n      setUserData({\r\n        _id: decoded._id,\r\n        nombre: decoded.nombre,\r\n        apellido: decoded.apellido,\r\n        identificacion: decoded.identificacion,\r\n        correo: decoded.correo,\r\n        rol: decoded.rol,\r\n      });\r\n    }\r\n  }, [authToken]);\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <AuthContext.Provider value={{ authToken, setAuthToken, setToken }}>\r\n        <UserContext.Provider value={{ userData, setUserData }}>\r\n          <BrowserRouter>\r\n            <Routes>\r\n              <Route path='/Registro' element={<NuevoUsuario />} />\r\n              <Route path='/' element={<PrivateLayout />}>\r\n                <Route path='' element={<Index />} />\r\n                <Route path='Proyectos' element={<Proyectos />} />\r\n                <Route path='Proyectos/:_id' element={<VerProyecto />} />\r\n                <Route\r\n                  path='Proyectos/NuevoProyecto'\r\n                  element={<NuevoProyecto />}\r\n                />\r\n                <Route\r\n                  path='Proyectos/EditarProyecto/:_id'\r\n                  element={<EditarProyecto />}\r\n                />\r\n                <Route path='Avances/:_id' element={<Avances />} />\r\n                <Route path='VerAvance/:_id' element={<VerAvance />} />\r\n                <Route\r\n                  path='VerAvance/ActualizarAvance/:_id'\r\n                  element={<ActualizarAvance />}\r\n                />\r\n                <Route path='Usuarios' element={<Usuarios />} />\r\n                <Route path='/usuarios/Estudiantes' element={<Estudiantes />} />\r\n                <Route\r\n                  path='/usuarios/EditarUsuario/:_id'\r\n                  element={<EditarUsuario />}\r\n                />\r\n                <Route path='Inscripciones' element={<Inscripciones />} />\r\n                <Route\r\n                  path='/inscripciones/Inscripciones'\r\n                  element={<Inscripciones />}\r\n                />\r\n                <Route path='Perfil' element={<Perfil />} />\r\n              </Route>\r\n              <Route path='/auth' element={<AuthLayout />}>\r\n                <Route path='register' element={<Register />} />\r\n                <Route path='login' element={<Login />} />\r\n              </Route>\r\n            </Routes>\r\n          </BrowserRouter>\r\n        </UserContext.Provider>\r\n      </AuthContext.Provider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'App';\r\nimport reportWebVitals from 'reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}