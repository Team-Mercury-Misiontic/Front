[{"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\index.js":"1","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\reportWebVitals.js":"2","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\App.jsx":"3","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\context\\userContext.js":"4","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\layouts\\PrivateLayout.jsx":"5","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\Index.jsx":"6","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\Perfil.jsx":"7","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\usuarios\\EditarUsuario.jsx":"8","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\usuarios\\Usuarios.jsx":"9","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\graphql\\proyectos\\queries.js":"10","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\graphql\\proyectos\\mutations.js":"11","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\utils\\enum.js":"12","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\hooks\\useFormData.js":"13","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\graphql\\usuarios\\queries.js":"14","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\graphql\\usuarios\\mutations.js":"15","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\components\\ButtonLoading.jsx":"16","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\components\\Sidebar.jsx":"17","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\components\\PrivateComponent.jsx":"18","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\components\\Input.jsx":"19","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\components\\DropDown.jsx":"20","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\proyectos\\NuevoProyecto.jsx":"21","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\proyectos\\EditarProyecto.jsx":"22","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\proyectos\\VerProyecto.jsx":"23","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\proyectos\\Proyectos.jsx":"24","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\avances\\Avances.jsx":"25","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\avances\\ActualizarAvances.jsx":"26","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\graphql\\avances\\mutations.js":"27","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\graphql\\avances\\queries.js":"28","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\NuevoUsuario.jsx":"29","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\components\\Objetivos.jsx":"30","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\inscripciones\\Inscripciones.jsx":"31","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\graphql\\inscripciones\\mutaciones.js":"32","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\graphql\\inscripciones\\queries.js":"33","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\components\\Accordion.jsx":"34","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\avances\\VerAvance.jsx":"35"},{"size":494,"mtime":1638311845739,"results":"36","hashOfConfig":"37"},{"size":375,"mtime":1638311845748,"results":"38","hashOfConfig":"37"},{"size":2740,"mtime":1639161981092,"results":"39","hashOfConfig":"37"},{"size":176,"mtime":1638311845733,"results":"40","hashOfConfig":"37"},{"size":582,"mtime":1638311845740,"results":"41","hashOfConfig":"37"},{"size":322,"mtime":1639161419083,"results":"42","hashOfConfig":"37"},{"size":3722,"mtime":1639161722677,"results":"43","hashOfConfig":"37"},{"size":3661,"mtime":1639161722684,"results":"44","hashOfConfig":"37"},{"size":5795,"mtime":1639161419095,"results":"45","hashOfConfig":"37"},{"size":1008,"mtime":1639161722676,"results":"46","hashOfConfig":"37"},{"size":1467,"mtime":1639161722675,"results":"47","hashOfConfig":"37"},{"size":573,"mtime":1638847948084,"results":"48","hashOfConfig":"37"},{"size":1013,"mtime":1638962307112,"results":"49","hashOfConfig":"37"},{"size":470,"mtime":1638311845737,"results":"50","hashOfConfig":"37"},{"size":1233,"mtime":1638963822791,"results":"51","hashOfConfig":"37"},{"size":557,"mtime":1639161722673,"results":"52","hashOfConfig":"37"},{"size":2348,"mtime":1638311845732,"results":"53","hashOfConfig":"37"},{"size":297,"mtime":1638311845730,"results":"54","hashOfConfig":"37"},{"size":491,"mtime":1638962307101,"results":"55","hashOfConfig":"37"},{"size":1022,"mtime":1638311845729,"results":"56","hashOfConfig":"37"},{"size":5113,"mtime":1639161722680,"results":"57","hashOfConfig":"37"},{"size":12351,"mtime":1639161722679,"results":"58","hashOfConfig":"37"},{"size":8578,"mtime":1639178759462,"results":"59","hashOfConfig":"37"},{"size":16657,"mtime":1639161722681,"results":"60","hashOfConfig":"37"},{"size":2951,"mtime":1639178458214,"results":"61","hashOfConfig":"37"},{"size":4260,"mtime":1638971670195,"results":"62","hashOfConfig":"37"},{"size":705,"mtime":1639161722674,"results":"63","hashOfConfig":"37"},{"size":895,"mtime":1639161419080,"results":"64","hashOfConfig":"37"},{"size":3275,"mtime":1638963822794,"results":"65","hashOfConfig":"37"},{"size":357,"mtime":1638963822785,"results":"66","hashOfConfig":"37"},{"size":3186,"mtime":1638971245647,"results":"67","hashOfConfig":"37"},{"size":464,"mtime":1638971245645,"results":"68","hashOfConfig":"37"},{"size":384,"mtime":1638971245646,"results":"69","hashOfConfig":"37"},{"size":704,"mtime":1638971245643,"results":"70","hashOfConfig":"37"},{"size":3970,"mtime":1639178418196,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1i97xa9",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\index.js",[],["152","153"],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\reportWebVitals.js",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\App.jsx",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\context\\userContext.js",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\layouts\\PrivateLayout.jsx",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\Index.jsx",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\Perfil.jsx",["154","155"],"import Usuario from '../usuario.json'\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport Input from 'components/Input';\r\nimport useFormData from 'hooks/useFormData';\r\nimport { toast } from 'react-toastify';\r\nimport { EDITAR_USUARIO } from 'graphql/usuarios/mutations';\r\n\r\n\r\nconst Perfil = () => {\r\n  const { form, formData, updateFormData } = useFormData(null);\r\n  const [editar,setEditar]=useState(false)\r\n\r\n  const [Perfil, { data: mutationData, loading: mutationLoading, error: mutationError }] =\r\n    useMutation(EDITAR_USUARIO);\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    console.log('fd', formData);\r\n    delete formData.rol;\r\n    Perfil({\r\n      variables: {...formData },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mutationData) {\r\n      toast.success('Usuario modificado correctamente');\r\n    }\r\n  }, [mutationData]);\r\n\r\n  return (\r\n    <div className='flew flex-col w-full h-full items-center justify-center p-4'>\r\n      <header>\r\n        <Link to='/Usuarios'>\r\n          <i className='fas fa-arrow-left text-gray-600 cursor-pointer font-bold text-xl hover:text-gray-900' />\r\n        </Link>\r\n      </header>\r\n      <h1 className='mb-4 text-3xl text-gray-800 font-bold text-center'>{Usuario.nombre} {Usuario.apellido}</h1>\r\n      <form\r\n        onSubmit={submitForm}\r\n        onChange={updateFormData}\r\n        ref={form}\r\n        className='flex flex-col items-center justify-center min-w-min w-1/3 mx-auto bg-gray-100 text-center text-xl text-gray-500 uppercase font-bold h-10/12 rounded-3xl'\r\n      >\r\n        <span className='mx-auto pt-1 text-center rounded-md text-black text-lg'>{Usuario.rol}</span>\r\n        <Input\r\n          label='Identificación:'\r\n          type='text'\r\n          name='identificacion'\r\n          defaultValue={Usuario.identificacion}\r\n          required={true}\r\n          readOnly={editar?false:true}\r\n        />\r\n        <Input\r\n          label='Nombre'\r\n          type='text'\r\n          name='nombre'\r\n          defaultValue={Usuario.nombre}\r\n          required={true}\r\n          readOnly={editar?false:true}\r\n        />\r\n        <Input\r\n          label='Apellido'\r\n          type='text'\r\n          name='apellido'\r\n          defaultValue={Usuario.apellido}\r\n          required={true}\r\n          readOnly={editar?false:true}\r\n        />\r\n        <Input\r\n          label='Correo'\r\n          type='email'\r\n          name='correo'\r\n          defaultValue={Usuario.correo}\r\n          required={true}\r\n          readOnly={editar?false:true}\r\n        />\r\n        \r\n        <Input\r\n          label='Contraseña'\r\n          type='password'\r\n          name='contraseña'\r\n          defaultValue={Usuario.contraseña}\r\n          required={true}\r\n          readOnly={editar?false:true}\r\n        />{\r\n            editar?\r\n            <div>\r\n            <button type='submit' className='inline-block bg-green-700 text-white font-bold text-lg py-2 px-4  rounded-xl hover:bg-green-500 shadow-md my-4 mx-1 disabled:opacity-50 disabled:bg-gray-700' > Confirmar</button>\r\n            <button type=\"button\" className='inline-block bg-red-700 text-white font-bold text-lg py-2 px-4  rounded-xl hover:bg-red-500 shadow-md my-4 mx-1 disabled:opacity-50 disabled:bg-gray-700'onClick={(e)=>setEditar(!editar)}>Cancelar</button>\r\n            </div>\r\n            :<button type=\"button\" className='bg-indigo-700 text-white font-bold text-lg py-2 px-4  rounded-xl hover:bg-indigo-500 shadow-md my-4 mx-4 disabled:opacity-50 disabled:bg-gray-700'onClick={(e)=>setEditar(!editar)}>Editar perfil</button>\r\n        }\r\n        \r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Perfil;","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\usuarios\\EditarUsuario.jsx",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\usuarios\\Usuarios.jsx",["156","157"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GET_USUARIOS } from \"graphql/usuarios/queries\";\r\nimport { ELIMINAR_USUARIO } from \"graphql/usuarios/mutations\";\r\n//import PrivateRoute from \"components/PrivateRoute\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport { Enum_Rol, Enum_EstadoUsuario } from 'utils/enum';\r\n\r\nconst Usuarios = () => {\r\n  const { data, error, loading, refetch } = useQuery(GET_USUARIOS);\r\n\r\n  //useEffect para datos traido del back\r\n  useEffect(() => {\r\n    console.log(\"data servidor\", data);\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      console.error(`error obteniendo los usuarios ${error}`)\r\n      toast.error(\"Error consultando los usuarios\");\r\n    }\r\n  }, [error]);\r\n\r\n  const [busqueda, setBusqueda] = useState(\"\");\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n\r\n  const bChange = (e) => {\r\n    setBusqueda(e.target.value);\r\n  };\r\n\r\n  const handleDeleteUser = (user) => {\r\n    setCurrentUser(user);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const [eliminarUsuario, { data: mutationData, loading: loadingMutation, error: mutationError }] =\r\n      useMutation(ELIMINAR_USUARIO);\r\n\r\n\r\n  useEffect(() => {\r\n    if (mutationData) {\r\n      toast.success(\"Usuario eliminado correctamente\");\r\n      refetch();\r\n    }\r\n  }, [mutationData, loadingMutation]);\r\n\r\n  useEffect(() => {\r\n    if (mutationError) {\r\n      toast.error(\"Error eliminando el usuario\");\r\n    }\r\n  }, [mutationError]);\r\n\r\n  if (loading || loadingMutation)\r\n    return (\r\n      <ReactLoading type=\"cylon\" color=\"#4c2882\" height={667} width={365} />\r\n    );\r\n\r\n  return (\r\n    //<PrivateRoute roleList={[\"ADMINISTRADOR\"]}>\r\n    <Fragment>\r\n      <h1 className=\"text-3xl font-extrabold text-gray-900 my-3 text-center\">\r\n        USUARIOS DEL SISTEMA\r\n      </h1>\r\n      <br />\r\n      <div className=\"rounded-md shadow-sm -space-y-px p-3\">\r\n        <label>\r\n          <b>Buscar:</b>\r\n        </label>\r\n        <input\r\n          className=\"appearance-none rounded-none relative block w-full px-3 py-2 border-2 border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n          value={busqueda}\r\n          placeholder=\"Búsqueda por Identificación o Nombre\"\r\n          onChange={bChange}\r\n        />\r\n      </div>\r\n      <div className=\"p-3\"><table className=\"tabla w-full\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Identificación</th>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Apellido</th>\r\n            <th scope=\"col\">Correo</th>\r\n            <th scope=\"col\">Rol</th>\r\n            <th scope=\"col\">Estado</th>\r\n            <th scope=\"col\">Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data &&\r\n            data.Usuarios.filter((user) => {\r\n              if (\r\n                user._id\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(busqueda.toLowerCase()) ||\r\n                user.nombre.toLowerCase().includes(busqueda.toLowerCase()) ||\r\n                user.identificacion\r\n                  .toLowerCase()\r\n                  .includes(busqueda.toLowerCase())\r\n              ) {\r\n                return user\r\n              }\r\n            }).map((item) => {\r\n              return (\r\n                <tr key={item._id}>\r\n                  <td>{item.identificacion}</td>\r\n                  <td>{item.nombre}</td>\r\n                  <td>{item.apellido}</td>\r\n                  <td>{item.correo}</td>\r\n                  <td>{Enum_Rol[item.rol]}</td>\r\n                  <td>{Enum_EstadoUsuario[item.estado]}</td>\r\n                  <td>\r\n                    <Link to={`/usuarios/EditarUsuario/${item._id}`}>\r\n                      <button className=\"col-span-2 bg-blue-400 p-2 rounded-full shadow-md hover:bg-blue-600 text-white\">\r\n                        Editar\r\n                      </button>{\" \"}\r\n                    </Link>\r\n                    {\"   \"}\r\n                    <button\r\n                      className=\"col-span-2 bg-red-400 p-2 rounded-full shadow-md hover:bg-red-600 text-white\"\r\n                      onClick={() => handleDeleteUser(item)}\r\n                    >\r\n                      Eliminar\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          {/* ) : (<div>No autorizado</div> */}\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n\r\n      <Dialog open={openDialog}>\r\n        <div className=\"p-8 flex flex-col\">\r\n          <h1 className=\"text-gray-900 text-2xl font-bold\">\r\n            ¿Está seguro de querer eliminar el usuario?\r\n          </h1>\r\n          <div className=\"flex w-full items-center justify-center my-4\">\r\n            <button\r\n                onClick={() => eliminarUsuario({\r\n                  variables : {_id: currentUser._id, correo: currentUser.correo}\r\n                })\r\n                    .then(r => setOpenDialog(false))\r\n                }\r\n                className=\"mx-2 px-4 py-2 bg-green-500 text-white hover:bg-green-700 rounded-md shadow-md\"\r\n            >\r\n              Sí\r\n            </button>\r\n            <button\r\n                onClick={() => setOpenDialog(false)}\r\n                className=\"mx-2 px-4 py-2 bg-red-500 text-white hover:bg-red-700 rounded-md shadow-md\"\r\n            >\r\n              No\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Fragment>\r\n    //</PrivateRoute>\r\n  );\r\n};\r\n\r\nexport default Usuarios;","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\graphql\\proyectos\\queries.js",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\graphql\\proyectos\\mutations.js",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\utils\\enum.js",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\hooks\\useFormData.js",["158"],"import { useRef, useState } from 'react';\r\n\r\nconst useFormData = (initial) => {\r\n  const form = useRef(initial);\r\n  const [formData, setFormData] = useState({});\r\n  const getFormData = () => {\r\n    const fd = new FormData(form.current);\r\n    const obj = {};\r\n    fd.forEach((value, key) => {\r\n      if (key.includes('nested')) {\r\n        const [p0, p1, p2, p3] = key.split('||');\r\n        if (Object.keys(obj).includes(p1)) {\r\n          if (Object.keys(obj[p1]).includes(p2)) {\r\n            obj[p1][p2][p3] = value;\r\n          } else {\r\n            obj[p1][p2] = {\r\n              [p3]: value,\r\n            };\r\n          }\r\n        } else {\r\n          obj[p1] = {\r\n            [p2]: {\r\n              [p3]: value,\r\n            },\r\n          };\r\n        }\r\n      } else {\r\n        obj[key] = value;\r\n      }\r\n    });\r\n    console.log(obj);\r\n    return obj;\r\n  };\r\n  const updateFormData = () => {\r\n    setFormData(getFormData());\r\n  };\r\n  return { form, formData, updateFormData };\r\n};\r\n\r\nexport default useFormData;","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\graphql\\usuarios\\queries.js",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\graphql\\usuarios\\mutations.js",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\components\\ButtonLoading.jsx",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\components\\Sidebar.jsx",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\components\\PrivateComponent.jsx",[],["159","160"],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\components\\Input.jsx",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\components\\DropDown.jsx",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\proyectos\\NuevoProyecto.jsx",["161"],"import React, {useEffect, useState} from 'react';\r\nimport {useMutation} from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport Usuario from '../../usuario.json';\r\nimport { toast } from \"react-toastify\";\r\nimport {NUEVO_PROYECTO} from '../../graphql/proyectos/mutations';\r\n\r\nconst NuevoProyecto = () =>{\r\n    const [crearProyecto,{error}] = useMutation(NUEVO_PROYECTO,{\r\n        onCompleted() {\r\n            toast.success(\"Proyecto Creado con exito\");\r\n        }\r\n      });\r\n    const [objetivos,setObjetivos] = useState([]);\r\n    const objetivo = {\r\n        descripcion: \"\",\r\n        tipo: \"\"\r\n    };\r\n    const handleClick = () => {\r\n        setObjetivos([...objetivos, {descripcion: objetivo.descripcion.value, tipo: objetivo.tipo.value}])\r\n    };\r\n    const handleReset = () => {\r\n        setObjetivos([]);\r\n    };\r\n\r\n    const [proyecto, setProyecto]=useState({\r\n        nombre: \"\",\r\n        lider: \"\",\r\n        presupuesto: 0\r\n    });\r\n    if (error) {\r\n        console.log(error.message);\r\n        toast.error(\"Problemas creando el proyecto\");\r\n    } \r\n\r\n    \r\n    \r\n    return(\r\n        <>\r\n        <header className=\"items-center justify-center p-3\">\r\n            <Link to='/Proyectos'>\r\n                <i className='fas fa-arrow-left text-gray-600 cursor-pointer font-bold text-xl hover:text-gray-900' />\r\n            </Link>\r\n            <h1 className='m-1 text-3xl text-gray-800 font-bold text-center'>Crear Nuevo Proyecto</h1>\r\n        </header>\r\n        <section className=\"h-3/4\">\r\n            <form className=\"flex flex-col gap-2 min-w-min w-10/12 mx-auto bg-gray-100 py-3 text-center text-xl text-gray-500 uppercase font-bold h-full rounded-3xl \" onSubmit={e=>{\r\n                e.preventDefault();\r\n                crearProyecto({\r\n                    variables:{\r\n                        nombre: proyecto.nombre.value,\r\n                        presupuesto: parseInt(proyecto.presupuesto.value),\r\n                        lider: proyecto.lider,\r\n                        objetivos: objetivos                \r\n                    }})\r\n                }}>\r\n                    <label htmlFor=\"nombre\" >Nombre</label>\r\n                    <input ref={nombre=>setProyecto(proyecto.nombre = nombre)}  placeholder=\"Nombre del proyecto\" id=\"nombre\" className=\"m-auto text-center rounded-md text-black text-lg \"/>\r\n                    <label htmlFor=\"lider\" >Lider</label>\r\n                    <input value = {Usuario.nombre + \" \" + Usuario.apellido} id=\"lider\" className=\"m-auto text-center rounded-md text-black text-lg\"/>\r\n                    <input ref={lider=>setProyecto(proyecto.lider=Usuario._id)} className=\"hidden\"/>\r\n                    <label htmlFor=\"presupuesto\" >Presupuesto</label>\r\n                    <input ref={presupuesto=>setProyecto(proyecto.presupuesto=presupuesto)} placeholder=\"Presupuesto\"id=\"presupuesto\" className=\"m-auto text-center rounded-md text-black text-lg\"/>\r\n                    <placeholder className=\"grid grid-cols-4 gap-2\">\r\n                        <legend className=\"col-span-4\">OBJETIVOS</legend>\r\n                        <div className=\"m-auto col-start-1 h-36 text-center overflow-y-scroll rounded-md border-solid border-2 border-black w-11/12 text-gray-800 text-base col-span-2 row-span-5 bg-white overflow-hidden\">\r\n                            {objetivos.map((item)=>{\r\n                                return (\r\n                                    <ul>\r\n                                        <li className=\"list-disc list-inside text-left\">{item.tipo}: {item.descripcion}</li>\r\n                                    </ul>\r\n                            )})}\r\n                        </div>\r\n                        \r\n                        <label className=\"text-lg text-left col-start-3\" htmlFor=\"descripcion\">Descripcion</label>\r\n                        <input className=\"h-8 col-start-3 mx-3 col-span-2\" placeholder=\"Descripcion del objetivo\" type=\"text-area\" id=\"descripcion\" ref={descripcion=>objetivo.descripcion=descripcion} />\r\n                        <label className=\"text-lg text-left col-start-3\" htmlFor=\"tipo\">Tipo</label>\r\n                        <select className=\"border h-8 col-start-3 mx-3 col-span-2\" type=\"text\" id=\"tipo\" ref={tipo=>objetivo.tipo=tipo} >\r\n                            <option value=\"GENERAL\">General</option>\r\n                            <option value=\"ESPECIFICO\">Especifico</option>\r\n                        </select>\r\n                        <button type=\"button\" onClick={handleClick} className=\"col-start-3 mx-auto bg-green-400 hover:bg-green-600 rounded-full px-2 py-1 text-white\">Añadir Objetivo</button>\r\n                        <button type=\"button\" onClick={handleReset} className=\"col-start-4  mx-auto bg-red-400 hover:bg-red-600 rounded-full px-2 py-1 text-white\">Borrar Todo</button>\r\n                    </placeholder>\r\n\r\n                <button type=\"submit\"  className=\"m-auto col-span-2 block bg-indigo-400 hover:bg-indigo-600 rounded-full px-12 py-1 text-white\">Crear Nuevo Proyecto</button>\r\n            </form>\r\n        </section>\r\n        </>\r\n    )\r\n}\r\nexport default NuevoProyecto","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\proyectos\\EditarProyecto.jsx",["162","163"],"import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport Usuario from 'usuario.json'\r\nimport {GET_PROYECTO} from 'graphql/proyectos/queries';\r\nimport {EDITAR_PROYECTO} from 'graphql/proyectos/mutations';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useQuery, useMutation} from '@apollo/client';\r\nimport Objetivos from 'components/Objetivos'\r\nimport ReactLoading from \"react-loading\";\r\nimport { toast } from \"react-toastify\";\r\nimport Proyectos from './Proyectos';\r\n\r\nconst EditarProyecto=()=> {\r\n    const {_id} = useParams();\r\n    const fechaHoy = new Date()\r\n    const [objetivos,setObjetivos] = useState([]);\r\n    const {data: queryData, error: queryError, loading: queryLoading, refetch} = useQuery(GET_PROYECTO, {variables: {_id}});\r\n    let proyecto={\r\n        _id: \"\",\r\n        nombre: \"\",\r\n        lider: \"\",\r\n        presupuesto: \"\",\r\n        fechaInicio: \"\",\r\n        fechaFin: \"\"\r\n    };\r\n    const objetivo = {\r\n      descripcion: \"\",\r\n      tipo: \"\"\r\n    };\r\n    console.log(fechaHoy)\r\n    \r\n    const [editarProyecto, { data: mutationData, loading: mutationLoading, error: mutationError }] = useMutation(EDITAR_PROYECTO)\r\n    useEffect(() => {\r\n      if (mutationData) {\r\n        toast.success('Proyecto modificado correctamente');\r\n        refetch();\r\n      }}, [mutationData]);\r\n\r\n    const handleClick = () => {\r\n      setObjetivos([...objetivos, {descripcion: objetivo.descripcion.value, tipo: objetivo.tipo.value}])\r\n    };\r\n    \r\n    const handleReset = () => {\r\n      setObjetivos([]);\r\n    }\r\n    const handleActivar = () =>{\r\n      if (queryData.Proyecto.fase===\"NULA\") {\r\n          proyecto.fase = \"INICIADO\"\r\n          proyecto.fechaInicio = `${fechaHoy}`\r\n          proyecto.estado = \"ACTIVO\"\r\n      }else{\r\n        if (queryData.Proyecto.estado === \"ACTIVO\"){\r\n          proyecto.estado = \"INACTIVO\"\r\n        }else {\r\n          proyecto.estado = \"ACTIVO\"\r\n        }\r\n      };\r\n      console.log(Proyectos.estado);\r\n    }\r\n    \r\n    if (queryError) return toast.error('Error al consultar los datos del proyecto');\r\n    if (queryLoading) return <ReactLoading type=\"cylon\" color=\"#4c2882\" height={667} width={365}/>;\r\n\r\n    proyecto={\r\n        _id: queryData.Proyecto._id,\r\n        nombre: queryData.Proyecto.nombre,\r\n        lider:queryData.Proyecto.lider._id,\r\n        presupuesto: queryData.Proyecto.presupuesto,\r\n        fechaInicio: queryData.Proyecto.fechaInicio,\r\n        fechaFin: queryData.Proyecto.fechaFin,\r\n        estado: queryData.Proyecto.estado,\r\n        fase: queryData.Proyecto.fase\r\n    };\r\n    if (mutationError) return toast.error('Error al modificar los datos del proyecto');\r\n\r\n    if (Usuario.rol === \"LIDER\") {\r\n      return (\r\n        <div className='w-full'>\r\n          <header className=\"items-center justify-center p-3\">\r\n            <Link to='/Proyectos'>\r\n                <i className='fas fa-arrow-left text-gray-600 cursor-pointer font-bold text-xl hover:text-gray-900' />\r\n            </Link>\r\n            <h1 className='m-1 text-3xl text-gray-800 font-bold text-center'>Editar proyecto {queryData.Proyecto._id}</h1>\r\n          </header>\r\n        <form className='mx-4 grid grid-cols-2 gap-4'\r\n            onSubmit={e => {\r\n            e.preventDefault();\r\n            editarProyecto({ \r\n              variables: { \r\n                _id: proyecto._id,\r\n                lider: proyecto.lider,\r\n                nombre: proyecto.nombre.value,\r\n                presupuesto: parseInt(proyecto.presupuesto.value),\r\n                fechaInicio: proyecto.fechaInicio,\r\n                fechaFin: proyecto.fechaFin,\r\n                estado: proyecto.estado,\r\n                fase: proyecto.fase,\r\n                objetivos: objetivos\r\n               }})\r\n            }}>\r\n            <section className='bg-blue-50 border-blue-500 border-solid border-2 col-span-2'>\r\n              <h2 className='text-center font-bold text-2xl col-span-4'> INFORMACION DEL PROYECTO</h2>\r\n                <div className='pl-3 grid grid-cols-4'>\r\n                    <div className='col-start-1 font-bold'>ID del proyecto:</div> <div className='col-start-2 col-span-3'>{queryData.Proyecto._id}</div>\r\n                    <span className='col-start-1 font-bold'>Lider:</span> <span className='col-start-2 col-span-3 uppercase'>{queryData.Proyecto.lider.nombre} {queryData.Proyecto.lider.apellido}</span>\r\n                    <label htmlFor=\"nombre\" className='col-start-1 font-bold'>Nombre:</label> \r\n                    <input className='col-start-2' type='text' id='nombre' defaultValue={queryData.Proyecto.nombre} ref={nombre=>proyecto.nombre = nombre}/>\r\n                    <label htmlFor=\"presupuesto\" className='col-start-1 font-bold'>Presupuesto:</label> \r\n                    <input className='col-start-2' type='text' id='presupuesto' defaultValue={queryData.Proyecto.presupuesto} ref={presupuesto=>proyecto.presupuesto = presupuesto}/>\r\n                    <span className='col-start-1 font-bold'>Fecha de Inicio:</span> <span className='col-start-2 uppercase'>{queryData.Proyecto.fechaInicio} </span>\r\n                    <span className='col-start-1 font-bold'>Fecha de Finalizacion:</span> <span className='col-start-2 uppercase'>{queryData.Proyecto.fechaFin}</span>\r\n                    <span className='col-start-1 font-bold'>Fase:</span> <span className='col-start-2 uppercase'>{queryData.Proyecto.fase}</span>\r\n                    <span className='col-start-1 font-bold'>Estado:</span> <span className='col-start-2 uppercase'>{queryData.Proyecto.estado}</span>\r\n              </div>\r\n            \r\n            </section>\r\n            <section className='bg-blue-50 border-blue-500 border-solid border-2 col-span-2 py-4 grid grid-cols-2'>\r\n              <h2 className='text-center font-bold text-xl col-span-2'> OBJETIVOS</h2>\r\n              <div>\r\n                <h3 className=\"pl-3 font-bold\">OBJETIVOS GENERALES</h3>\r\n                <ul className=\"pl-10\">\r\n                    <Objetivos item={queryData.Proyecto} tipo=\"GENERAL\"/>\r\n                </ul>\r\n                <h3 className=\"pl-3 font-bold\">OBJETIVOS ESPECIFICOS</h3>\r\n                <ul className=\"pl-10\">\r\n                    <Objetivos item={queryData.Proyecto} tipo=\"ESPECIFICO\"/>\r\n                </ul>\r\n              </div>\r\n               <div className=\"h-full\">\r\n                <div className=\"m-auto text-center rounded-md w-11/12 text-gray-800 text-base col-span-2 bg-white row-span-3\">\r\n                    {objetivos.map((item)=>{\r\n                        return (\r\n                            <ul>\r\n                                <li className=\"list-disc list-inside text-left\">{item.tipo}: {item.descripcion}</li>\r\n                            </ul>\r\n                    )})} \r\n                </div>\r\n                <label className=\"text-lg\" htmlFor=\"descripcion\">Descripcion</label>\r\n                <input className=\"border h-8\" placeholder=\"Descripcion del objetivo\" type=\"text-area\" id=\"descripcion\" ref={descripcion=>objetivo.descripcion=descripcion} />\r\n                <label className=\"text-lg\" htmlFor=\"tipo\">Tipo</label>\r\n                <select className=\"border h-8\" type=\"text\" id=\"tipo\" ref={tipo=>objetivo.tipo=tipo} >\r\n                    <option value=\"GENERAL\">General</option>\r\n                    <option value=\"ESPECIFICO\">Especifico</option>\r\n                </select>\r\n                <div>\r\n                    <button type=\"button\" onClick={handleClick} className=\"m-auto col-span-2 bg-green-400 rounded-full px-2 py-1 my-2 shadow-md hover:bg-green-600 text-white\">Añadir Objetivo</button>\r\n                    <button type=\"button\" onClick={handleReset} className=\"m-auto col-span-2 bg-red-400 rounded-full px-2 py-1 shadow-md hover:bg-red-600 text-white\">Borrar Todo</button>\r\n                </div>\r\n              </div>\r\n            </section>\r\n            <button type=\"submit\" className=\"bg-indigo-700 text-white font-bold text-lg py-1 px-6 rounded-xl hover:bg-indigo-500 shadow-md mx-4 disabled:opacity-50 disabled:bg-gray-700\">Modificar Todo</button>\r\n        </form>\r\n        </div>\r\n      )\r\n    } else if( Usuario.rol === \"ADMINISTRADOR\"){\r\n      return (\r\n      <div className='w-full'>\r\n        <header className=\"items-center justify-center p-3\">\r\n            <Link to='/Proyectos'>\r\n                <i className='fas fa-arrow-left text-gray-600 cursor-pointer font-bold text-xl hover:text-gray-900' />\r\n            </Link>\r\n            <h1 className='m-1 text-3xl text-gray-800 font-bold text-center'>Editar proyecto {queryData.Proyecto._id}</h1>\r\n        </header>\r\n        <form className='mx-4 grid grid-cols-2 gap-4'\r\n            onSubmit={e => {\r\n            e.preventDefault();\r\n            editarProyecto({ \r\n              variables: { \r\n                _id: proyecto._id,\r\n                lider: proyecto.lider,\r\n                nombre: proyecto.nombre,\r\n                presupuesto: parseInt(proyecto.presupuesto),\r\n                fechaInicio: proyecto.fechaInicio,\r\n                fechaFin: proyecto.fechaFin,\r\n                estado: proyecto.estado,\r\n                fase: proyecto.fase\r\n               }})\r\n            }}>\r\n            <section className='bg-blue-50 border-blue-500 border-solid border-2 col-span-2'>\r\n              <h2 className='text-center font-bold text-2xl col-span-4'> INFORMACION DEL PROYECTO</h2>\r\n                <div className='pl-3 grid grid-cols-4'>\r\n                    <div className='col-start-1 font-bold'>ID del proyecto:</div> <div className='col-start-2 col-span-3'>{queryData.Proyecto._id}</div>\r\n                    <span className='col-start-1 font-bold'>Lider:</span> <span className='col-start-2 col-span-3 uppercase'>{queryData.Proyecto.lider.nombre} {queryData.Proyecto.lider.apellido}</span>\r\n                    <span className='col-start-1 font-bold'>Nombre del proyecto:</span> \r\n                    <span className='col-start-2'>{queryData.Proyecto.nombre}</span>\r\n                    <span className='col-start-1 font-bold'>Presupuesto:</span> \r\n                    <span className='col-start-2'>{queryData.Proyecto.presupuesto}</span>\r\n                    <span className='col-start-1 font-bold'>Fecha de Inicio:</span> <span className='col-start-2 uppercase'>{queryData.Proyecto.fechaInicio} </span>\r\n                    <span className='col-start-1 font-bold'>Fecha de Finalizacion:</span> <span className='col-start-2 uppercase'>{queryData.Proyecto.fechaFin}</span>\r\n                    <span className='col-start-1 font-bold'>Fase:</span> <span className='col-start-2'>{queryData.Proyecto.fase}</span> \r\n                    <label className='col-start-1 font-bold'>Estado:</label> <span className='col-start-2 pb-2'>{queryData.Proyecto.estado}</span> \r\n                    {queryData.Proyecto.fase===\"TERMINADO\"?null:\r\n                      <button type=\"submit\" onClick={handleActivar} className=\"col-start-3 bg-blue-700 text-white font-bold text-lg px-5 rounded-xl hover:bg-blue-500 shadow-md mx-4 mb-3 disabled:opacity-50 disabled:bg-gray-700\">\r\n                      {queryData.Proyecto.estado===\"ACTIVO\"?\"Desactivar\":\"Activar\"}</button>}\r\n                    \r\n              </div>\r\n            </section>\r\n            <section className='bg-blue-50 border-blue-500 border-solid border-2 col-span-2 py-4 grid grid-cols-2'>\r\n              <div>\r\n                <h2 className='text-center font-bold text-xl'> OBJETIVOS</h2>\r\n                <h3 className=\"pl-3 font-bold\">OBJETIVOS GENERALES</h3>\r\n                <ul className=\"pl-10\">\r\n                    <Objetivos item={queryData.Proyecto} tipo=\"GENERAL\"/>\r\n                </ul>\r\n                <h3 className=\"pl-3 font-bold\">OBJETIVOS ESPECIFICOS</h3>\r\n                <ul className=\"pl-10\">\r\n                    <Objetivos item={queryData.Proyecto} tipo=\"ESPECIFICO\"/>\r\n                </ul>\r\n              </div>\r\n            </section>\r\n            <button type=\"submit\" className=\"bg-red-700 text-white font-bold text-lg py-1 px-6 rounded-xl hover:bg-red-500 shadow-md mx-4 disabled:opacity-50 disabled:bg-gray-700  \" onClick={e=>{proyecto.estado = \"INACTIVO\"; proyecto.fase = \"TERMINADO\"; proyecto.fechaFin = `${fechaHoy}`; }}> Terminar Proyecto </button>\r\n        </form>\r\n      </div>\r\n      )\r\n    } else return \"No tiene permisos para gestionar Proyectos\"\r\n}\r\n\r\nexport default EditarProyecto","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\proyectos\\VerProyecto.jsx",["164"],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\proyectos\\Proyectos.jsx",["165","166","167","168","169"],"import Usuario from '../../usuario.json';\r\nimport { toast } from \"react-toastify\";\r\nimport {useState, useEffect} from 'react';\r\nimport {useQuery} from \"@apollo/client\";\r\nimport {GET_PROYECTOS} from '../../graphql/proyectos/queries';\r\nimport {Link} from 'react-router-dom';\r\nimport Objetivos from 'components/Objetivos';\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst Proyectos = ()=> { \r\n    const {data, error, loading}=useQuery(GET_PROYECTOS);\r\n    useEffect(() => {\r\n        if (error) {\r\n        console.error(`error obteniendo los usuarios ${error}`)\r\n        toast.error(\"Error consultando los usuarios\");\r\n        return `error obteniendo los usuarios ${error}`\r\n        }\r\n    }, [error]);\r\n    if (loading) return <ReactLoading type=\"cylon\" color=\"#4c2882\" height={667} width={365} />;\r\n    if (data) {\r\n        if (Usuario.rol === 'ADMINISTRADOR'){\r\n            return(\r\n                <div className =\"w-full\">\r\n                    <div className=\"my-6 font-sans text-4xl text-center font-bold\">\r\n                        <h1 className=\"text-3xl font-extrabold text-gray-900 my-3 text-center\">PROYECTOS</h1>\r\n                    </div>\r\n                    <Administrador data={data.Proyectos}/>\r\n                </div>\r\n            )\r\n        } else if (Usuario.rol === 'LIDER') {\r\n            return(\r\n                <div className =\"w-full\">\r\n                    <div className=\"my-6 font-sans text-4xl text-center font-bold\">\r\n                        <h1 className=\"text-3xl font-extrabold text-gray-900 my-3 text-center\">PROYECTOS LIDERADOS</h1>\r\n                    </div>           \r\n                    <Lider data={data.Proyectos}/>\r\n                </div>\r\n            )        \r\n        } else if (Usuario.rol === 'ESTUDIANTE'){\r\n            return(\r\n                <div className =\"w-full\">\r\n                    <div className=\"my-6 font-sans text-4xl text-center font-bold\">\r\n                        <h1 className=\"text-3xl font-extrabold text-gray-900 my-3 text-center\">PROYECTOS</h1>\r\n                    </div>               \r\n                    <Estudiante data={data.Proyectos}/>\r\n                </div>\r\n            ) \r\n        }\r\n}else return \"REVISE LOS PROYECTOS HAY ALGUN DATO QUE ESTA MAL\"} \r\n\r\nconst Administrador = ({data}) => {\r\n    const [busqueda, setBusqueda] = useState(\"\");\r\n    const bChange = (e) => {\r\n        setBusqueda(e.target.value);\r\n    };\r\n    const datos = data.filter((proyecto) => {\r\n        if (\r\n          proyecto._id.toString().toLowerCase().includes(busqueda.toLowerCase()) ||\r\n          proyecto.nombre.toLowerCase().includes(busqueda.toLowerCase())||\r\n          proyecto.lider.nombre.toLowerCase().includes(busqueda.toLowerCase())||\r\n          proyecto.lider.apellido.toLowerCase().includes(busqueda.toLowerCase())\r\n        ) {\r\n          return proyecto\r\n        }\r\n      }).map((item) => {\r\n        const objetivos = item.objetivos.map((objetivo) => {\r\n            return (\r\n                <>\r\n                    <li className=\"list-none\">{objetivo.descripcion}</li>\r\n                </>\r\n            )\r\n        })\r\n        return(\r\n            <>\r\n            <tr>\r\n                <td key={item._id} className=\"text-center\"> {item._id}</td>\r\n                <td> {item.nombre}</td>\r\n                <td> {item.lider.nombre} {item.lider.apellido}</td>\r\n                <td> {item.fase}</td>\r\n                <td> {objetivos}</td>\r\n                <td> \r\n                    <Link to={`/Proyectos/${item._id}` } className=\"block bg-blue-400 hover:bg-blue-600 rounded-full px-2 text-white h-6 mb-1\">Ver mas</Link>\r\n                    {item.fase === \"TERMINADO\" ? null : <Link to={`/Proyectos/EditarProyecto/${item._id}`} className=\"block bg-green-400 hover:bg-green-600 rounded-full px-2 text-white h-6\">Gestionar</Link>}\r\n                    \r\n                </td>\r\n            </tr>\r\n            </>\r\n    )})    \r\n    return (\r\n        <>\r\n        <div className=\"pl-4 mb-5\">\r\n            <label className=\"font-bold\">BUSCAR: </label>\r\n            <input className=\"appearance-none rounded-none w-72 px-3 py-2 border-2 border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                value={busqueda} placeholder=\"Búsqueda por Identificación o Nombre\" onChange={bChange}/>\r\n        </div> \r\n        <table className=\"tabla\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">ID</th>\r\n                    <th scope=\"col\">Nombre del Proyecto</th>\r\n                    <th scope=\"col\">Lider</th>\r\n                    <th scope=\"col\">Fase</th>\r\n                    <th scope=\"col\">Objetivos</th>\r\n                    <th scope=\"col\">Acciones</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {datos}\r\n            </tbody>\r\n        </table>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Lider = ({data}) => {\r\n    const [busqueda, setBusqueda] = useState(\"\");\r\n    const [activo, isActivo] = useState(false);\r\n    const bChange = (e) => {\r\n        setBusqueda(e.target.value);\r\n    };\r\n    const datos = data.filter((proyecto) => {\r\n          if (\r\n            proyecto._id.toString().toLowerCase().includes(busqueda.toLowerCase()) ||\r\n            proyecto.nombre.toLowerCase().includes(busqueda.toLowerCase())||\r\n            proyecto.lider.nombre.toLowerCase().includes(busqueda.toLowerCase())||\r\n            proyecto.lider.apellido.toLowerCase().includes(busqueda.toLowerCase())\r\n          ) {\r\n            return proyecto\r\n          }\r\n        }).map((item) =>{\r\n        const Gestionar = (item) =>{\r\n            if (item.item.estado === \"ACTIVO\") {\r\n                return(\r\n                    <>\r\n                        <Link to={`/Proyectos/EditarProyecto/${item.item._id}` } className=\"block px-2 bg-green-400 hover:bg-green-600 rounded-full text-white h-6\">Gestionar</Link>\r\n                    </>\r\n                )\r\n            } else return null\r\n        };  \r\n        if (item.lider._id === Usuario._id) {\r\n            if (activo === true && item.estado === \"ACTIVO\") {\r\n                return(\r\n                    <>\r\n                    <tr>\r\n                        <td key={item.id} className=\"text-center\"> {item._id}</td>\r\n                        <td> {item.nombre}</td>\r\n                        <td> {item.lider.nombre} {item.lider.apellido}</td>\r\n                        <td> {item.fase}</td>\r\n                        <td> <Objetivos item={item} tipo=\"GENERAL\" className=\"list-none\"/></td>\r\n                        <td> \r\n                            <Link to={`/Proyectos/${item._id}` } className=\"block bg-blue-400 px-2 hover:bg-blue-600 rounded-full text-white h-6 mb-1\">Ver mas</Link>\r\n                            <Gestionar item={item}/>\r\n                        </td>\r\n                    </tr>\r\n                    </>\r\n            )\r\n            }else if(activo === false){\r\n            return(\r\n                <>\r\n                <tr>\r\n                    <td key={item.id} className=\"text-center\"> {item._id}</td>\r\n                    <td> {item.nombre}</td>\r\n                    <td> {item.lider.nombre} {item.lider.apellido}</td>\r\n                    <td> {item.fase}</td>\r\n                    <td> <Objetivos item={item} tipo=\"GENERAL\" className=\"list-none\"/></td>\r\n                    <td> \r\n                        <Link to={`/Proyectos/${item._id}` } className=\"block bg-blue-400 px-2 hover:bg-blue-600 rounded-full text-white h-6 mb-1\">Ver mas</Link>\r\n                        <Gestionar item={item}/>\r\n                    </td>\r\n                </tr>\r\n                </>\r\n        )} else return null\r\n    } \r\n    })    \r\n        return (\r\n            <>\r\n            <div className=\"pl-4 mb-5\">\r\n                <label className=\"font-bold\">BUSCAR: </label>\r\n                <input className=\"appearance-none rounded-none w-72 px-3 py-2 border-2 border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                value={busqueda} placeholder=\"Búsqueda por Identificación o Nombre\" onChange={bChange}/>\r\n                <Link to=\"/Proyectos/NuevoProyecto\" className=\"bg-indigo-700 text-white font-bold text-lg py-3 px-6 relative top-3 left-1/4 rounded-xl hover:bg-indigo-500 shadow-md\" >Crear Proyecto</Link>\r\n                <div>\r\n                    <input type=\"checkbox\" className=\"mx-2\" id=\"active\" onClick={(e)=>isActivo(!activo)}/>\r\n                    <label htmlFor=\"active\" className=\"text-base\">Solo proyectos activos</label>\r\n                </div>\r\n            </div>   \r\n            <table className=\"tabla\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Nombre del Proyecto</th>\r\n                        <th scope=\"col\">Lider</th>\r\n                        <th scope=\"col\">Fase</th>\r\n                        <th scope=\"col\">Objetivos</th>\r\n                        <th scope=\"col\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {datos}\r\n                </tbody>\r\n            </table>\r\n            </>\r\n        ) \r\n}\r\n\r\n/* const Estudiante = ({data , registrado}) => {\r\n    const [busqueda, setBusqueda] = useState(\"\");\r\n    const bChange = (e) => {\r\n        setBusqueda(e.target.value);\r\n    };\r\n    const datos = data.filter((proyecto) => {\r\n        if (\r\n          proyecto._id.toString().toLowerCase().includes(busqueda.toLowerCase()) ||\r\n          proyecto.nombre.toLowerCase().includes(busqueda.toLowerCase())||\r\n          proyecto.lider.nombre.toLowerCase().includes(busqueda.toLowerCase())||\r\n          proyecto.lider.apellido.toLowerCase().includes(busqueda.toLowerCase())\r\n        ) {\r\n          return proyecto\r\n        }\r\n      }).map((item)=>{\r\n        const objetivos = item.objetivos.map((objetivo) => {\r\n            return (\r\n                <>\r\n                    <li className=\"list-none\">{objetivo.descripcion}</li>\r\n                </>\r\n            )\r\n        })\r\n        const filtro = item.registros.filter((registro) => registro.estudiante._id === Usuario._id)\r\n        if (registrado && item.estado === \"ACTIVO\"){\r\n            if (filtro.length!==0){\r\n                return (\r\n                    <>\r\n                    <tr>\r\n                        <td>{item._id}</td>\r\n                        <td>{item.nombre}</td>\r\n                        <td>{item.lider.nombre} {item.lider.apellido}</td>\r\n                        <td>{item.fase}</td>\r\n                        <td>{objetivos}</td>\r\n                        <td> \r\n                            <Link to={`/Proyectos/${item._id}` } className=\"block px-2 bg-blue-400 hover:bg-blue-600 rounded-full text-white h-6 mb-1\">Ver mas</Link>\r\n                        </td>\r\n                    </tr>\r\n                    </>\r\n                    )\r\n            } else return null\r\n        } else  if (registrado === false && item.estado === \"ACTIVO\"){\r\n            if (filtro.length===0){\r\n                return (\r\n                    <>\r\n                    <tr>\r\n                        <td>{item._id}</td>\r\n                        <td>{item.nombre}</td>\r\n                        <td>{item.lider.nombre} {item.lider.apellido}</td>\r\n                        <td>{item.fase}</td>\r\n                        <td>{objetivos}</td>\r\n                        <td> \r\n                            <Link to={`/Proyectos/${item._id}` } className=\"block px-2 bg-blue-400 hover:bg-blue-600 rounded-full text-white h-6 mb-1\">Ver mas</Link>\r\n                        </td>\r\n                    </tr>\r\n                    </>\r\n                    )\r\n            } return null\r\n    }})\r\n    return (\r\n        <>\r\n        <div className=\"pl-4 mb-5\">\r\n            <label className=\"font-bold\">BUSCAR: </label>\r\n            <input className=\"appearance-none rounded-none w-72 px-3 py-2 border-2 border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                value={busqueda} placeholder=\"Búsqueda por Identificación o Nombre\" onChange={bChange}/>\r\n        </div> \r\n        <table className=\"tabla\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">ID</th>\r\n                    <th scope=\"col\">Nombre del Proyecto</th>\r\n                    <th scope=\"col\">Lider</th>\r\n                    <th scope=\"col\">Fase</th>\r\n                    <th scope=\"col\">Objetivos</th>\r\n                    <th scope=\"col\">Acciones</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {datos}\r\n            </tbody>\r\n        </table>\r\n        </>\r\n    )\r\n} */\r\n\r\nconst Estudiante = ({data}) => {\r\n    const [busqueda, setBusqueda] = useState(\"\");\r\n    const [registrado,isRegistrado] = useState(false)\r\n    const bChange = (e) => {\r\n        setBusqueda(e.target.value);\r\n    };\r\n    const datos = data.filter((proyecto) => {\r\n        if (\r\n          proyecto._id.toString().toLowerCase().includes(busqueda.toLowerCase()) ||\r\n          proyecto.nombre.toLowerCase().includes(busqueda.toLowerCase())||\r\n          proyecto.lider.nombre.toLowerCase().includes(busqueda.toLowerCase())||\r\n          proyecto.lider.apellido.toLowerCase().includes(busqueda.toLowerCase())\r\n        ) {\r\n          return proyecto\r\n        }\r\n      }).map((item)=>{\r\n        const objetivos = item.objetivos.map((objetivo) => {\r\n            return (\r\n                <>\r\n                    <li className=\"list-none\">{objetivo.descripcion}</li>\r\n                </>\r\n            )\r\n        })\r\n        const filtro = item.registros.filter((registro) => registro.estudiante._id === Usuario._id)\r\n        if (registrado && item.estado === \"ACTIVO\"){\r\n            if (filtro.length!==0){\r\n                return (\r\n                    <>\r\n                    <tr>\r\n                        <td>{item._id}</td>\r\n                        <td>{item.nombre}</td>\r\n                        <td>{item.lider.nombre} {item.lider.apellido}</td>\r\n                        <td>{item.fase}</td>\r\n                        <td>{objetivos}</td>\r\n                        <td> \r\n                            <Link to={`/Proyectos/${item._id}` } className=\"block px-2 bg-blue-400 hover:bg-blue-600 rounded-full text-white h-6 mb-1\">Ver mas</Link>\r\n                        </td>\r\n                    </tr>\r\n                    </>\r\n                    )\r\n            } else return null\r\n        } else  if (registrado === false && item.estado === \"ACTIVO\"){\r\n            if (filtro.length===0){\r\n                return (\r\n                    <>\r\n                    <tr>\r\n                        <td>{item._id}</td>\r\n                        <td>{item.nombre}</td>\r\n                        <td>{item.lider.nombre} {item.lider.apellido}</td>\r\n                        <td>{item.fase}</td>\r\n                        <td>{objetivos}</td>\r\n                        <td> \r\n                            <Link to={`/Proyectos/${item._id}` } className=\"block px-2 bg-blue-400 hover:bg-blue-600 rounded-full text-white h-6 mb-1\">Ver mas</Link>\r\n                        </td>\r\n                    </tr>\r\n                    </>\r\n                    )\r\n            } return null\r\n    }})\r\n    return (\r\n        <>\r\n        <div className=\"pl-4 mb-5\">\r\n            <label className=\"font-bold\">BUSCAR: </label>\r\n            <input className=\"appearance-none rounded-none w-72 px-3 py-2 border-2 border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                value={busqueda} placeholder=\"Búsqueda por Identificación o Nombre\" onChange={bChange}/>\r\n            <div>\r\n                <input type=\"checkbox\" className=\"mx-2\" id=\"active\" onClick={(e)=>isRegistrado(!registrado)}/>\r\n                <label htmlFor=\"active\" className=\"text-base\">Proyectos en curso </label>\r\n            </div>\r\n        </div> \r\n        <table className=\"tabla\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">ID</th>\r\n                    <th scope=\"col\">Nombre del Proyecto</th>\r\n                    <th scope=\"col\">Lider</th>\r\n                    <th scope=\"col\">Fase</th>\r\n                    <th scope=\"col\">Objetivos</th>\r\n                    <th scope=\"col\">Acciones</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {datos}\r\n            </tbody>\r\n        </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Proyectos","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\avances\\Avances.jsx",["170"],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\avances\\ActualizarAvances.jsx",[],["171","172"],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\graphql\\avances\\mutations.js",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\graphql\\avances\\queries.js",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\NuevoUsuario.jsx",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\components\\Objetivos.jsx",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\inscripciones\\Inscripciones.jsx",["173","174"],"import React, { useEffect } from 'react';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\n// import PrivateRoute from 'components/PrivateRoute';\r\nimport { GET_INSCRIPCIONES } from 'graphql/inscripciones/queries';\r\nimport { APROBAR_INSCRIPCION } from 'graphql/inscripciones/mutaciones';\r\nimport ButtonLoading from 'components/ButtonLoading';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  AccordionStyled,\r\n  AccordionSummaryStyled,\r\n  AccordionDetailsStyled,\r\n} from 'components/Accordion';\r\n\r\nconst IndexInscription = () => {\r\n  const { data, loading, error, refetch } = useQuery(GET_INSCRIPCIONES);\r\n\r\n  useEffect(() => {\r\n    console.log(data);\r\n  }, [data]);\r\n  if (loading) return <div>Loading...</div>;\r\n  return (\r\n    // <PrivateRoute roleList={['ADMINISTRADOR', 'LIDER']}>\r\n      <div className='p-10'>\r\n        <div>Pagina de inscripciones</div>\r\n        <div className='my-4'>\r\n          <AccordionInscripcion\r\n            titulo='Inscripciones aprobadas'\r\n            data={data.Inscripciones.filter((el) => el.estado === 'ACEPTADO')}\r\n          />\r\n          <AccordionInscripcion\r\n            titulo='Inscripciones pendientes'\r\n            data={data.Inscripciones.filter((el) => el.estado === 'PENDIENTE')}\r\n            refetch={refetch}\r\n          />\r\n          <AccordionInscripcion\r\n            titulo='Inscripciones rechazadas'\r\n            data={data.Inscripciones.filter((el) => el.estado === 'RECHAZADO')}\r\n          />\r\n        </div>\r\n      </div>\r\n    // </PrivateRoute>\r\n  );\r\n};\r\n\r\nconst AccordionInscripcion = ({ data, titulo, refetch = () => {} }) => {\r\n  return (\r\n    <AccordionStyled>\r\n      <AccordionSummaryStyled>\r\n        {titulo} ({data.length})\r\n      </AccordionSummaryStyled>\r\n      <AccordionDetailsStyled>\r\n        <div className='flex'>\r\n          {data &&\r\n            data.map((inscripcion) => {\r\n              return <Inscripcion inscripcion={inscripcion} refetch={refetch} />;\r\n            })}\r\n        </div>\r\n      </AccordionDetailsStyled>\r\n    </AccordionStyled>\r\n  );\r\n};\r\n\r\nconst Inscripcion = ({ inscripcion, refetch }) => {\r\n  const [aprobarInscripcion, { data, loading, error }] = useMutation(APROBAR_INSCRIPCION);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      toast.success('Inscripcion aprobada con exito');\r\n      refetch();\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error('Error aprobando la inscripcion');\r\n    }\r\n  }, [error]);\r\n\r\n  const cambiarEstadoInscripcion = () => {\r\n    aprobarInscripcion({\r\n      variables: {\r\n        aprobarInscripcionId: inscripcion._id,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='bg-gray-900 text-gray-50 flex flex-col p-6 m-2 rounded-lg shadow-xl'>\r\n      <span>{inscripcion.proyecto.nombre}</span>\r\n      <span>{inscripcion.estudiante.nombre}</span>\r\n      <span>{inscripcion.estado}</span>\r\n      {inscripcion.estado === 'PENDIENTE' && (\r\n        <ButtonLoading\r\n          onClick={() => {\r\n            cambiarEstadoInscripcion();\r\n          }}\r\n          text='Aprobar Inscripcion'\r\n          loading={loading}\r\n          disabled={false}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndexInscription;\r\n","C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\graphql\\inscripciones\\mutaciones.js",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\graphql\\inscripciones\\queries.js",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\components\\Accordion.jsx",[],"C:\\Users\\Laura\\Desktop\\Proyecto Team Mercury\\Front\\src\\pages\\avances\\VerAvance.jsx",["175","176"],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":15,"column":49,"nodeType":"183","messageId":"184","endLine":15,"endColumn":64},{"ruleId":"181","severity":1,"message":"185","line":15,"column":73,"nodeType":"183","messageId":"184","endLine":15,"endColumn":86},{"ruleId":"186","severity":1,"message":"187","line":49,"column":6,"nodeType":"188","endLine":49,"endColumn":37,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":94,"column":41,"nodeType":"192","messageId":"193","endLine":94,"endColumn":43},{"ruleId":"181","severity":1,"message":"194","line":11,"column":16,"nodeType":"183","messageId":"184","endLine":11,"endColumn":18},{"ruleId":"177","replacedBy":"195"},{"ruleId":"179","replacedBy":"196"},{"ruleId":"181","severity":1,"message":"197","line":1,"column":16,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"182","line":32,"column":59,"nodeType":"183","messageId":"184","endLine":32,"endColumn":74},{"ruleId":"186","severity":1,"message":"187","line":37,"column":11,"nodeType":"188","endLine":37,"endColumn":25,"suggestions":"198"},{"ruleId":"181","severity":1,"message":"199","line":189,"column":42,"nodeType":"183","messageId":"184","endLine":189,"endColumn":47},{"ruleId":"190","severity":1,"message":"191","line":56,"column":42,"nodeType":"192","messageId":"193","endLine":56,"endColumn":44},{"ruleId":"190","severity":1,"message":"191","line":121,"column":42,"nodeType":"192","messageId":"193","endLine":121,"endColumn":44},{"ruleId":"190","severity":1,"message":"200","line":130,"column":23,"nodeType":"192","messageId":"193","endLine":130,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":296,"column":42,"nodeType":"192","messageId":"193","endLine":296,"endColumn":44},{"ruleId":"190","severity":1,"message":"200","line":305,"column":20,"nodeType":"192","messageId":"193","endLine":305,"endColumn":22},{"ruleId":"186","severity":1,"message":"187","line":51,"column":6,"nodeType":"188","endLine":51,"endColumn":20,"suggestions":"201"},{"ruleId":"177","replacedBy":"202"},{"ruleId":"179","replacedBy":"203"},{"ruleId":"181","severity":1,"message":"199","line":15,"column":26,"nodeType":"183","messageId":"184","endLine":15,"endColumn":31},{"ruleId":"186","severity":1,"message":"204","line":71,"column":6,"nodeType":"188","endLine":71,"endColumn":12,"suggestions":"205"},{"ruleId":"181","severity":1,"message":"206","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"187","line":26,"column":6,"nodeType":"188","endLine":26,"endColumn":20,"suggestions":"207"},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'mutationLoading' is assigned a value but never used.","Identifier","unusedVar","'mutationError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.","ArrayExpression",["210"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'p0' is assigned a value but never used.",["208"],["209"],"'useEffect' is defined but never used.",["211"],"'error' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.",["212"],["208"],["209"],"React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array. If 'refetch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["213"],"'Fragment' is defined but never used.",["214"],"no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"217","fix":"219"},{"desc":"220","fix":"221"},{"desc":"217","fix":"222"},"Update the dependencies array to be: [mutationData, loadingMutation, refetch]",{"range":"223","text":"224"},"Update the dependencies array to be: [mutationData, refetch]",{"range":"225","text":"226"},{"range":"227","text":"226"},"Update the dependencies array to be: [data, refetch]",{"range":"228","text":"229"},{"range":"230","text":"226"},[1538,1569],"[mutationData, loadingMutation, refetch]",[1325,1339],"[mutationData, refetch]",[1565,1579],[2315,2321],"[data, refetch]",[862,876]]