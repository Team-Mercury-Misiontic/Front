{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laura\\\\Desktop\\\\Proyecto Team Mercury\\\\Front\\\\src\\\\pages\\\\inscripciones\\\\Inscripciones.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useMutation, useQuery } from '@apollo/client'; // import PrivateRoute from 'components/PrivateRoute';\n\nimport { GET_INSCRIPCIONES } from 'graphql/inscripciones/queries';\nimport { APROBAR_INSCRIPCION } from 'graphql/inscripciones/mutaciones';\nimport ButtonLoading from 'components/ButtonLoading';\nimport { toast } from 'react-toastify';\nimport { AccordionStyled, AccordionSummaryStyled, AccordionDetailsStyled } from 'components/Accordion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IndexInscription = () => {\n  _s();\n\n  const {\n    data,\n    loading,\n    error,\n    refetch\n  } = useQuery(GET_INSCRIPCIONES);\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, this);\n  return (\n    /*#__PURE__*/\n    // <PrivateRoute roleList={['ADMINISTRADOR', 'LIDER']}>\n    _jsxDEV(\"div\", {\n      className: \"p-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Pagina de inscripciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-4\",\n        children: [/*#__PURE__*/_jsxDEV(AccordionInscripcion, {\n          titulo: \"Inscripciones aprobadas\",\n          data: data.Inscripciones.filter(el => el.estado === 'ACEPTADO')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionInscripcion, {\n          titulo: \"Inscripciones pendientes\",\n          data: data.Inscripciones.filter(el => el.estado === 'PENDIENTE'),\n          refetch: refetch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionInscripcion, {\n          titulo: \"Inscripciones rechazadas\",\n          data: data.Inscripciones.filter(el => el.estado === 'RECHAZADO')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this) // </PrivateRoute>\n\n  );\n};\n\n_s(IndexInscription, \"mB06u2hnjscHBJoKJqyXGUZ30/Q=\", false, function () {\n  return [useQuery];\n});\n\n_c = IndexInscription;\n\nconst AccordionInscripcion = _ref => {\n  let {\n    data,\n    titulo,\n    refetch = () => {}\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(AccordionStyled, {\n    children: [/*#__PURE__*/_jsxDEV(AccordionSummaryStyled, {\n      children: [titulo, \" (\", data.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccordionDetailsStyled, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: data && data.map(inscripcion => {\n          return /*#__PURE__*/_jsxDEV(Inscripcion, {\n            inscripcion: inscripcion,\n            refetch: refetch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = AccordionInscripcion;\n\nconst Inscripcion = _ref2 => {\n  _s2();\n\n  let {\n    inscripcion,\n    refetch\n  } = _ref2;\n  const [aprobarInscripcion, {\n    data,\n    loading,\n    error\n  }] = useMutation(APROBAR_INSCRIPCION);\n  useEffect(() => {\n    if (data) {\n      toast.success('Inscripcion aprobada con exito');\n      refetch();\n    }\n  }, [data]);\n  useEffect(() => {\n    if (error) {\n      toast.error('Error aprobando la inscripcion');\n    }\n  }, [error]);\n\n  const cambiarEstadoInscripcion = () => {\n    aprobarInscripcion({\n      variables: {\n        aprobarInscripcionId: inscripcion._id\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-900 text-gray-50 flex flex-col p-6 m-2 rounded-lg shadow-xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: inscripcion.proyecto.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: inscripcion.estudiante.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: inscripcion.estado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), inscripcion.estado === 'PENDIENTE' && /*#__PURE__*/_jsxDEV(ButtonLoading, {\n      onClick: () => {\n        cambiarEstadoInscripcion();\n      },\n      text: \"Aprobar Inscripcion\",\n      loading: loading,\n      disabled: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Inscripcion, \"PKq025uQethN5FqGjegBNF62TqM=\", false, function () {\n  return [useMutation];\n});\n\n_c3 = Inscripcion;\nexport default IndexInscription;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"IndexInscription\");\n$RefreshReg$(_c2, \"AccordionInscripcion\");\n$RefreshReg$(_c3, \"Inscripcion\");","map":{"version":3,"sources":["C:/Users/Laura/Desktop/Proyecto Team Mercury/Front/src/pages/inscripciones/Inscripciones.jsx"],"names":["React","useEffect","useMutation","useQuery","GET_INSCRIPCIONES","APROBAR_INSCRIPCION","ButtonLoading","toast","AccordionStyled","AccordionSummaryStyled","AccordionDetailsStyled","IndexInscription","data","loading","error","refetch","console","log","Inscripciones","filter","el","estado","AccordionInscripcion","titulo","length","map","inscripcion","Inscripcion","aprobarInscripcion","success","cambiarEstadoInscripcion","variables","aprobarInscripcionId","_id","proyecto","nombre","estudiante"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\n// import PrivateRoute from 'components/PrivateRoute';\r\nimport { GET_INSCRIPCIONES } from 'graphql/inscripciones/queries';\r\nimport { APROBAR_INSCRIPCION } from 'graphql/inscripciones/mutaciones';\r\nimport ButtonLoading from 'components/ButtonLoading';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  AccordionStyled,\r\n  AccordionSummaryStyled,\r\n  AccordionDetailsStyled,\r\n} from 'components/Accordion';\r\n\r\nconst IndexInscription = () => {\r\n  const { data, loading, error, refetch } = useQuery(GET_INSCRIPCIONES);\r\n\r\n  useEffect(() => {\r\n    console.log(data);\r\n  }, [data]);\r\n  if (loading) return <div>Loading...</div>;\r\n  return (\r\n    // <PrivateRoute roleList={['ADMINISTRADOR', 'LIDER']}>\r\n      <div className='p-10'>\r\n        <div>Pagina de inscripciones</div>\r\n        <div className='my-4'>\r\n          <AccordionInscripcion\r\n            titulo='Inscripciones aprobadas'\r\n            data={data.Inscripciones.filter((el) => el.estado === 'ACEPTADO')}\r\n          />\r\n          <AccordionInscripcion\r\n            titulo='Inscripciones pendientes'\r\n            data={data.Inscripciones.filter((el) => el.estado === 'PENDIENTE')}\r\n            refetch={refetch}\r\n          />\r\n          <AccordionInscripcion\r\n            titulo='Inscripciones rechazadas'\r\n            data={data.Inscripciones.filter((el) => el.estado === 'RECHAZADO')}\r\n          />\r\n        </div>\r\n      </div>\r\n    // </PrivateRoute>\r\n  );\r\n};\r\n\r\nconst AccordionInscripcion = ({ data, titulo, refetch = () => {} }) => {\r\n  return (\r\n    <AccordionStyled>\r\n      <AccordionSummaryStyled>\r\n        {titulo} ({data.length})\r\n      </AccordionSummaryStyled>\r\n      <AccordionDetailsStyled>\r\n        <div className='flex'>\r\n          {data &&\r\n            data.map((inscripcion) => {\r\n              return <Inscripcion inscripcion={inscripcion} refetch={refetch} />;\r\n            })}\r\n        </div>\r\n      </AccordionDetailsStyled>\r\n    </AccordionStyled>\r\n  );\r\n};\r\n\r\nconst Inscripcion = ({ inscripcion, refetch }) => {\r\n  const [aprobarInscripcion, { data, loading, error }] = useMutation(APROBAR_INSCRIPCION);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      toast.success('Inscripcion aprobada con exito');\r\n      refetch();\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error('Error aprobando la inscripcion');\r\n    }\r\n  }, [error]);\r\n\r\n  const cambiarEstadoInscripcion = () => {\r\n    aprobarInscripcion({\r\n      variables: {\r\n        aprobarInscripcionId: inscripcion._id,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='bg-gray-900 text-gray-50 flex flex-col p-6 m-2 rounded-lg shadow-xl'>\r\n      <span>{inscripcion.proyecto.nombre}</span>\r\n      <span>{inscripcion.estudiante.nombre}</span>\r\n      <span>{inscripcion.estado}</span>\r\n      {inscripcion.estado === 'PENDIENTE' && (\r\n        <ButtonLoading\r\n          onClick={() => {\r\n            cambiarEstadoInscripcion();\r\n          }}\r\n          text='Aprobar Inscripcion'\r\n          loading={loading}\r\n          disabled={false}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndexInscription;\r\n"]},"metadata":{},"sourceType":"module"}