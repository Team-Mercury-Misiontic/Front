{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laura\\\\Desktop\\\\Proyecto Team Mercury\\\\Front\\\\src\\\\components\\\\DropDown.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropDown = _ref => {\n  _s();\n\n  let {\n    label,\n    name,\n    defaultValue = '',\n    required,\n    options\n  } = _ref;\n  const [selectedValue, setSelectedValue] = useState(defaultValue);\n  const optionsSelect = [['', 'Seleccione una opción', true], ...Object.entries(options)];\n  useEffect(() => {\n    setSelectedValue(defaultValue);\n  }, [defaultValue]);\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: name,\n    className: \"flex flex-col my-3 m-auto text-center rounded-md text-black text-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      required: required,\n      name: name,\n      className: \"input\",\n      value: selectedValue,\n      onChange: e => setSelectedValue(e.target.value),\n      children: optionsSelect.map(o => {\n        var _o$;\n\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: o[0],\n          disabled: (_o$ = o[2]) !== null && _o$ !== void 0 ? _o$ : false,\n          children: o[1]\n        }, nanoid(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropDown, \"d+tMUM6j5CClXmNrrxQ5kwBg9Lk=\");\n\n_c = DropDown;\nexport default DropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDown\");","map":{"version":3,"sources":["C:/Users/Laura/Desktop/Proyecto Team Mercury/Front/src/components/DropDown.jsx"],"names":["React","useState","useEffect","nanoid","DropDown","label","name","defaultValue","required","options","selectedValue","setSelectedValue","optionsSelect","Object","entries","e","target","value","map","o"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,MAAMC,QAAQ,GAAG,QAA2D;AAAA;;AAAA,MAA1D;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,YAAY,GAAG,EAA9B;AAAkCC,IAAAA,QAAlC;AAA4CC,IAAAA;AAA5C,GAA0D;AAC1E,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAACM,YAAD,CAAlD;AACA,QAAMK,aAAa,GAAG,CAAC,CAAC,EAAD,EAAK,uBAAL,EAA8B,IAA9B,CAAD,EAAsC,GAAGC,MAAM,CAACC,OAAP,CAAeL,OAAf,CAAzC,CAAtB;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,gBAAgB,CAACJ,YAAD,CAAhB;AACD,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAGA,sBACE;AAAO,IAAA,OAAO,EAAED,IAAhB;AAAsB,IAAA,SAAS,EAAC,qEAAhC;AAAA,4BACE;AAAA,gBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,QAAQ,EAAEG,QADZ;AAEE,MAAA,IAAI,EAAEF,IAFR;AAGE,MAAA,SAAS,EAAC,OAHZ;AAIE,MAAA,KAAK,EAAEI,aAJT;AAKE,MAAA,QAAQ,EAAGK,CAAD,IAAOJ,gBAAgB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CALnC;AAAA,gBAOGL,aAAa,CAACM,GAAd,CAAmBC,CAAD,IAAO;AAAA;;AACxB,4BACE;AAAuB,UAAA,KAAK,EAAEA,CAAC,CAAC,CAAD,CAA/B;AAAoC,UAAA,QAAQ,SAAEA,CAAC,CAAC,CAAD,CAAH,qCAAU,KAAtD;AAAA,oBACGA,CAAC,CAAC,CAAD;AADJ,WAAahB,MAAM,EAAnB;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA;AAPH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA1BD;;GAAMC,Q;;KAAAA,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst DropDown = ({ label, name, defaultValue = '', required, options }) => {\r\n  const [selectedValue, setSelectedValue] = useState(defaultValue);\r\n  const optionsSelect = [['', 'Seleccione una opción', true], ...Object.entries(options)];\r\n  useEffect(() => {\r\n    setSelectedValue(defaultValue);\r\n  }, [defaultValue]);\r\n  return (\r\n    <label htmlFor={name} className='flex flex-col my-3 m-auto text-center rounded-md text-black text-lg'>\r\n      <span>{label}</span>\r\n      <select\r\n        required={required}\r\n        name={name}\r\n        className='input'\r\n        value={selectedValue}\r\n        onChange={(e) => setSelectedValue(e.target.value)}\r\n      >\r\n        {optionsSelect.map((o) => {\r\n          return (\r\n            <option key={nanoid()} value={o[0]} disabled={o[2] ?? false}>\r\n              {o[1]}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default DropDown;"]},"metadata":{},"sourceType":"module"}